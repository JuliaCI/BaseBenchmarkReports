cset: moving following pidspec: 5093
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.74394666 seconds)
loading group "shootout"... done (took 1.034249282 seconds)
loading group "string"... done (took 0.413694602 seconds)
loading group "linalg"... done (took 7.744302716 seconds)
loading group "parallel"... done (took 0.160249211 seconds)
loading group "find"... done (took 1.287974054 seconds)
loading group "tuple"... done (took 1.867860129 seconds)
loading group "union"... done (took 12.608696283 seconds)
loading group "dates"... done (took 1.322472313 seconds)
loading group "micro"... done (took 0.202536143 seconds)
loading group "simd"... done (took 4.368069642 seconds)
loading group "io"... done (took 1.025742015 seconds)
loading group "random"... done (took 8.722378974 seconds)
loading group "problem"... done (took 1.46751704 seconds)
loading group "array"... done (took 19.32818101 seconds)
loading group "misc"... done (took 1.4849942 seconds)
loading group "scalar"... done (took 39.477620914 seconds)
loading group "sort"... done (took 3.116750454 seconds)
loading group "sparse"... done (took 11.729552353 seconds)
loading group "collection"... done (took 17.235813112 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.492503728 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12088315 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124682487 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115224617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19909785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117424484 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120099224 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081394846 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.830594858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140086475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111181867 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407938271 seconds)
done (took 5.182101613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160235802 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08474614 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075960777 seconds)
  done (took 1.262332696 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061448042 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129721839 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062995477 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063028138 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063931618 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063687906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063282282 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063478613 seconds)
  done (took 1.612183658 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068096743 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063481126 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062161423 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064602654 seconds)
  done (took 1.36263469 seconds)
done (took 5.577508128 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229998559 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095639095 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.27492226 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.376451436 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.442291699 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092421754 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072126983 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06746612 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125258414 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324080257 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098858283 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.175768752 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085469642 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.172445338 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.978695058 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114749559 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081748167 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117585931 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089482997 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128081313 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.373679783 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073779475 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069706415 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066290119 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064181936 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.63328419 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662119965 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123501056 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079417898 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095810235 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112742733 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.625286417 seconds)
  done (took 10.259834263 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088451387 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086444417 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065241563 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119313916 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09125497 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067062188 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072263033 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065302309 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085936803 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121698952 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090271109 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.093648501 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062747522 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064825289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07007837 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191960941 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076260595 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076460417 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063849027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076350409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100934641 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074113333 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073786427 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07360893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124659882 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165054686 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092435547 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093921701 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06192595 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07504925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11113357 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123299235 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069008073 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062460485 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115866519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091658392 seconds)
  done (took 4.389467445 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.928833322 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089654185 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098223678 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.600153648 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062196221 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.143603919 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231153908 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069246627 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365102818 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107791106 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.13832859 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.105495631 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140934352 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115045303 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065580891 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.150418268 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.108426468 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.452315472 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065352584 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064505325 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062571891 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.064218414 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063892514 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059753937 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066749716 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090498928 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082476509 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.17363878 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.893495384 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.232809509 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065363631 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16181779 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084352921 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.350715558 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06623753 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078359611 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.402746704 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118903602 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061614096 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1587308 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112002698 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06107156 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.111155819 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073954787 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060724637 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064992858 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06512646 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064658156 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067044998 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076823819 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097838944 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063559708 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061484636 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15790489 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061011879 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062659104 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063239487 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145941213 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062151167 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.133245846 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061092392 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06466218 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096590731 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065166255 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.082779634 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.091994479 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333712777 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.014354618 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063693987 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.909614868 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076242243 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062845258 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066471961 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062977797 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063620449 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06322281 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068280769 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065900551 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065143458 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103917392 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06306169 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065890593 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062775937 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060434619 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068461958 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093284666 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062177705 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464397806 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095864421 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062601278 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072157314 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10049717 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06288635 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066881756 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063157488 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063209758 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063043185 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063774848 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06605815 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061912776 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.09161204 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065619435 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108727391 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.134927768 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065964051 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06316609 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068493746 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066681014 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067192377 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064742385 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067184173 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066180419 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062717095 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105958129 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063476716 seconds)
  done (took 20.898902464 seconds)
done (took 37.579947385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245509344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076252512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07666783 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075227944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074665298 seconds)
  done (took 1.752060387 seconds)
done (took 2.942106191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103548637 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06107941 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.094962717 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093914961 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.060469109 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060558567 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096019597 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061242844 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094557459 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096122013 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098071069 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097358565 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061573798 seconds)
  done (took 2.275711844 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065899007 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077148725 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079091036 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059520626 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069501619 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078250087 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059307582 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081145864 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084519148 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078711346 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078838 seconds)
  done (took 1.996094197 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065765618 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077324565 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079481742 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05967083 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070084855 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079722883 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059567382 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078400661 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081328531 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078585878 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078268611 seconds)
  done (took 1.985253221 seconds)
done (took 7.433122526 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063033895 seconds)
  done (took 1.224309074 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.490832486 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.160664272 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064188319 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.081792412 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186736481 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090896466 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.197336382 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.067170084 seconds)
  done (took 7.676345411 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092325402 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063962836 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065636557 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065741282 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069525985 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064842152 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066509201 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065933897 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066736306 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067401772 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06541798 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065655333 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065616045 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067033696 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065242841 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065841018 seconds)
  done (took 2.348046923 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094256813 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094226615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070051776 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070664765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068836044 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068362499 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070445549 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070452023 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067402708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069024223 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07011822 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068714391 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068935468 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060106402 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0700054 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070880571 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067314568 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070235494 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070836042 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071817524 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070180484 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059991173 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068617536 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069514677 seconds)
  done (took 2.988604257 seconds)
done (took 15.414717269 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172584439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071051637 seconds)
  done (took 1.412808407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064508288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064993845 seconds)
  done (took 1.315262943 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069994688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05729981 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075347125 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.066927719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057969149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058840511 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.073602418 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05771178 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.05746677 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057793183 seconds)
  done (took 1.82046401 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059611207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065203067 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.063205672 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065344489 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063499587 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059560612 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063151216 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059468056 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065028933 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057854777 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.061941776 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.076859248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061782699 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.078613227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061377455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062015698 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.063820422 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061389083 seconds)
  done (took 2.339321642 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057584755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058063973 seconds)
  done (took 1.311338098 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061029398 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058273948 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061050739 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060518786 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058483203 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057630748 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058097123 seconds)
  done (took 1.602835039 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390912671 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115884529 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325792546 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066235644 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074437753 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244549346 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061077413 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065987079 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065835609 seconds)
  done (took 2.641282852 seconds)
done (took 13.639396441 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07733265 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167274036 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084073338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.400198009 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089094113 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062630821 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108670683 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.165686139 seconds)
done (took 2.366458008 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229338908 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.266950651 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.869911354 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065733192 seconds)
  done (took 3.401600908 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310471209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.075321217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076171562 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065506128 seconds)
  done (took 1.735517704 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06122752 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067272301 seconds)
  done (took 1.33221905 seconds)
done (took 7.908602113 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060627666 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087452862 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061129992 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061957215 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061344474 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061385411 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06137535 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061494307 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060870116 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06089168 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061340006 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060794902 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060758391 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061287648 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061368027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061146635 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061094918 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060957356 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061213893 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061308545 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061279212 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061422914 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061782677 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061222033 seconds)
  done (took 2.726743973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075015775 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062310871 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063154525 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063300321 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063536922 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062944661 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062767981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061642581 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063161406 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061427106 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063479075 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063580963 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061038709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063005291 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061343309 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063650695 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062857129 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061859352 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06160797 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063153814 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062758564 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061776393 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063681866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062849198 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063173727 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063466167 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061969651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062154885 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063223541 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063288998 seconds)
  done (took 3.111806115 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060993475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056315766 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057316373 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065573623 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056853873 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057371598 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057701217 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05759485 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058193652 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058919209 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058427596 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057862301 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058645473 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057822071 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057735768 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05872121 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061893319 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075328243 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05813852 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057679635 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062094671 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057815515 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058107616 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057752504 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057900323 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057132913 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056372432 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057113323 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057565501 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057561115 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056206178 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060272416 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061047478 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.067260694 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067137296 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062435045 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058049298 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062092047 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059190441 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057604459 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057161556 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056241235 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056541352 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057393249 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066543987 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057965257 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058638383 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057312612 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057712849 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.05673346 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056670152 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058177639 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061760614 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057934751 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056137069 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057930757 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05601069 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057222368 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055968737 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056223869 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055968749 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060087984 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057992205 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05708338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074623034 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057756339 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065861652 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058783967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057093478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06037038 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05829994 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07379644 seconds)
  done (took 5.488062752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078496148 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082621764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061699738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061398781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058328519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058119161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065409587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057903446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062484181 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077287597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058096645 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062435309 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062961691 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061741966 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058267286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062703514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065807847 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058142369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058486238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062187621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05842906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065035894 seconds)
  done (took 2.627203464 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130625212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063470754 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097019751 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070511071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065858543 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072627532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063495101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06328454 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063612188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063966902 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063868048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06339443 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065753037 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064081082 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064422927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063831667 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063403112 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064024883 seconds)
  done (took 2.487581989 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073230484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062486248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084084599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062446901 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062230138 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06281913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066673438 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068223273 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063008314 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063053218 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067491764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062263753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061583149 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061700494 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061945126 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06188255 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061340781 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062193902 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066084774 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06543051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066238925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065922269 seconds)
  done (took 2.655333625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07046536 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061436514 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073844 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062435325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057441875 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056812866 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061880272 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061234899 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062094555 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06088722 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061661294 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05704512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062644924 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061358508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063725136 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062477554 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062915266 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0625545 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062236032 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05806143 seconds)
  done (took 2.46554443 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08193305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059697969 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059618295 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077774476 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059242526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059474011 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077182678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058882264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059439798 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079766462 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059289428 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059137249 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077236809 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077265346 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059449389 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077588786 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07745456 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077600972 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059563962 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059251016 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080856869 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060266636 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077528791 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0601572 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060896719 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059639364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059304203 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077648303 seconds)
  done (took 3.11861944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060050672 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059915718 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059830756 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059920371 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06111332 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061245704 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061764764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061576941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060832227 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061915959 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06151221 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061670402 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061250154 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061044688 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06116795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061218036 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061246574 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061661179 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061722019 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062030895 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061730042 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060973147 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061246564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061432045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061615193 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061542629 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06133172 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061171004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061197983 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061373293 seconds)
  done (took 3.066588998 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069281621 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068013872 seconds)
  done (took 1.36616351 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058469568 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072297455 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05678803 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06775246 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066455671 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060899125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066765199 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066057094 seconds)
  done (took 1.739517558 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063419106 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085158012 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059102152 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059084448 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061501916 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114567986 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071188731 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073207218 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072299406 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061911493 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060587798 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071393885 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059531716 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071806728 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061161014 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067839507 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066248299 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071535763 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071497398 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058116233 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071073001 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060011596 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058417786 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060541693 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059558754 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065822526 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074659666 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070814119 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067505316 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057513217 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07658796 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058409278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058935801 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065985334 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061174171 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057571681 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091643285 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057863294 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062444379 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057381536 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068381757 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076426744 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070479003 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073930211 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058684742 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059310871 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.05680653 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.058978302 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060644277 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06606618 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057173111 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064390798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056706307 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058716549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066699598 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.05739166 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062334695 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066171267 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069395765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066912195 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068852553 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071351146 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06574039 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065128939 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.057955553 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07475003 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058757153 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069459335 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070589492 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058088681 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069485616 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056738912 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056007087 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057078994 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088317646 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058929699 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058123748 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057200651 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057250916 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058368386 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065819891 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062299581 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063943974 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060011306 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071315352 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065201634 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056748204 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063189682 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073285446 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060069635 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056898407 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071995294 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060159482 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056821799 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073178618 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065795291 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.05825364 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057386085 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060050223 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069290867 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057612899 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055616094 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064661673 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058236999 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059729752 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060868728 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064278135 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057019529 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066102383 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060870338 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057980801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054794406 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059845001 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056890351 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0548448 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064636841 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055961472 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069194952 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062018614 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068776075 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069157711 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.065676947 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070593667 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055815563 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054669648 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072321456 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.064456226 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.056765652 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071863848 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.055914509 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.196914209 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058483195 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059680546 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067912608 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057325865 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.05996709 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058276729 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062775311 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059024653 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059174477 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061953109 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065784107 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0689576 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058407436 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066139989 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058000195 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072336793 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067119068 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061486951 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061390065 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058203083 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068598679 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063884636 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066629675 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057329401 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058637999 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057336664 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067063758 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066398361 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059748919 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06522251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061695439 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058073157 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057474991 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.058726735 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061341383 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061207311 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058704362 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065206622 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066381826 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073375868 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064955019 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066189318 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057942711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058916095 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061138021 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059280311 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063172108 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067481799 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072768168 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069815335 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078084649 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058357065 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067679736 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060097224 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074500798 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071225733 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059688736 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063872468 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057570997 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059990573 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066237197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068434591 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070666603 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070797514 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061353161 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061237224 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057029002 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071045814 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057402989 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06585829 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066193995 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06199582 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057303619 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058721405 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065951195 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061655253 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057363136 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072127519 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063841738 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.05710587 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071093779 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058627229 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067735053 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05732143 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060866163 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062035459 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.05899259 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06608031 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071509094 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056230038 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057605273 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071485834 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059303601 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058670515 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064640418 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071119884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061232668 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064738796 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066722743 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065986007 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061336235 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065662653 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057560373 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065653158 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.05990287 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067882435 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056805751 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07355964 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055836767 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07059254 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056942413 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066437158 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057038981 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065067858 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057294361 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07114948 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057301279 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.056853631 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067480735 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055351664 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064545684 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055707078 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060759711 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061959576 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064457715 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057547914 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064497864 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.057776913 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064328786 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.060580873 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064560431 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065309137 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.060729863 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056022752 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.198981751 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06932828 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066488994 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059819757 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059798026 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058801379 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067196886 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059359967 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059453254 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065467795 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062113974 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063166421 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05892947 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059506425 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059403577 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066021948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066888388 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074800312 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065825102 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06413706 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066239725 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057137121 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072592926 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057554817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065223274 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056575765 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063548773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066678564 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057953758 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075896351 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058432368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065362463 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069586196 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067036155 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062291885 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076137867 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062200915 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066730527 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06603036 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061966596 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063709448 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059798052 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065894123 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066518827 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067385834 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05865127 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064600688 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065756588 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059342515 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065405299 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058915188 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064890996 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059091274 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056366921 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061194089 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069090703 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063409854 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063753767 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05888338 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057388691 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059124174 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065567015 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062974637 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066652915 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073055852 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05699221 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058964385 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057136337 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063346558 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073952773 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06597205 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064402191 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061622162 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05666631 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059179006 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059828628 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057524996 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060372667 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056712747 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056982422 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067095819 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.05921908 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06155169 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057612668 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058374575 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066058402 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.061902924 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057700113 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064113782 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058312794 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063269952 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057951626 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060254385 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062642921 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058075379 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061739234 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068792731 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073386149 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064019594 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066888168 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059956417 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066185212 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073293721 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065976716 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05983825 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066780687 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056947599 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074153491 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065433088 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064980981 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065675883 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057836895 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071761775 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06096928 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066171327 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070747779 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057488563 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06295643 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055559583 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070473484 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060249613 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056139443 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063969867 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06366575 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063231273 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068936359 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058325371 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065561914 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063301555 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061170894 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059317896 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059113454 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065754784 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072640958 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058479803 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.202095026 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066472133 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066337282 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063346541 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069638826 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066777144 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060476897 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061260454 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062348115 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059778804 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07045232 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059165289 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063016258 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062852169 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058847745 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064183204 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074400936 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067725284 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068152585 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058603908 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058018751 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075708578 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061543602 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061966303 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065681802 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067509771 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070982498 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067937894 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075060515 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059398313 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065007605 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071565731 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060328681 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058827349 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062255332 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060670118 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067692009 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068479116 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065873959 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061173158 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065548708 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071683264 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060643635 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063098099 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06441416 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059996424 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069102991 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066564186 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067394315 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060353923 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05845017 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061497898 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067117186 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065376728 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067347893 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059494256 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065717141 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072246679 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065685114 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062078883 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058527351 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06201003 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066867463 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063240952 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058172602 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062876411 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06202274 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065490908 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067435759 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062638889 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058970573 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074795336 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066462524 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067740576 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060793241 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060611937 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059058715 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058325553 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069045591 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058977505 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060368059 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063105571 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060241458 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075465963 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066181251 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073604863 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060023073 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062766804 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058377943 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067939469 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063128838 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059063952 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068983959 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058254884 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072397173 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069286947 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066373708 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057066848 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063024159 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066872174 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073065698 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068843361 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067205655 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062560592 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068025306 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060286335 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067770207 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057142919 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056000479 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066281468 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065534854 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068713263 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057161071 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066703928 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058547649 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064824018 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064629198 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058814626 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058819933 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058575189 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065034746 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060902398 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065395941 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060900043 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071724218 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.057651048 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.066829345 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065266241 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.066735743 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068977377 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067905163 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06394737 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056665512 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063508779 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064210784 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.195142555 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063844706 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063030304 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07929236 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06047742 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0597815 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072019939 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064914101 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058568766 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064418423 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06284861 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068015059 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058716313 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067867451 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.061511257 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058927348 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061968108 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062131232 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057097949 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057383004 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057664181 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066753946 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062052883 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058419546 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075108619 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059025472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065785117 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068696602 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064055428 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060377448 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057732852 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060296231 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07144336 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073223774 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062331977 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067072574 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060263718 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066440248 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057190907 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066274516 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065062645 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082986088 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057623907 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058089339 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071472165 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071755058 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063142959 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068003973 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067594211 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060556855 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078765963 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065741519 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058872578 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067775356 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059983092 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05687223 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056570232 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058923557 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068325897 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057441274 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059826438 seconds)
  done (took 39.766958914 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094066018 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058856518 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057312161 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057993636 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068405189 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058351694 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057967737 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058287087 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058256555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060207645 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057288112 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057277265 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067836937 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069949785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067231276 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061263207 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057405493 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058538413 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057297983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058071019 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06679261 seconds)
  done (took 2.650210811 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064466676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072289257 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068408765 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073402703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065541588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061726106 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06812763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06159286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068547066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066396957 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068564098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061412059 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06675222 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066855877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067232662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061719831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068640536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065064246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061182136 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06804703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061644529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067727996 seconds)
  done (took 2.777527957 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059461357 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058067357 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065768571 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057175246 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056573393 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06044432 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056722372 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06161572 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061086182 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061092722 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066184979 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059395047 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058313969 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063324519 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058058169 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059231545 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098412757 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059862198 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058956105 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057998039 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064095494 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066437988 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057283782 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056919789 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060819805 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060424896 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056603926 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.059474383 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057496349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061510279 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059044949 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057709268 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066341337 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066375959 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062449918 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062867867 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060059267 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059345611 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058307828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057839841 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06658835 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059731846 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058819284 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059458048 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066889802 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05875129 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058033856 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066480476 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058762139 seconds)
  done (took 4.329203122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067932943 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106532581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063024258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088025067 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070022867 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.062953888 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062879813 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088696649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058593002 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059125439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.070396449 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.070833209 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060089707 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061341647 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.062498109 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059946239 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060731318 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059166813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.062689731 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059452619 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.062577086 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.06366928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.06977905 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070216004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06068448 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059376323 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059409166 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062117882 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071333429 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064900871 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063119621 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064023492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072174455 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066740397 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062059838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060948374 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072420347 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062673702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061088047 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059714828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061168741 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062897936 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065387951 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072684357 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061794843 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065739086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060863275 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058050013 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.070171238 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059725184 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064522987 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.071399907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061791029 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060800957 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061297686 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.069768011 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060032308 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058970369 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060361355 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069593846 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058290106 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061022617 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.070729204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059470993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062905723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.070893932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064402339 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061317924 seconds)
  done (took 5.895170823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066702339 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088986375 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068190677 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068324947 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067196653 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.067396688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06763954 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067453534 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067566516 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068233835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067406319 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103427793 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06355913 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073426191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067974402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067628849 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067112107 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067144558 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067090754 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067096632 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067260695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067643118 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067633562 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068639313 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070746545 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064096736 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067153429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.066862364 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067703592 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067101975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070058209 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067340002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067666834 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067721993 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069805715 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.066943037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057812137 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0673034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.06706521 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067095096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063311637 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067934322 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067487024 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063573726 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067399572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06725182 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067663146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.069907165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074209278 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067426459 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067260115 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069031221 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069029471 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069243393 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068857719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.074503269 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068197566 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067938692 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067719601 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068170285 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068225141 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.073999958 seconds)
  done (took 5.622394112 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071134373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064814626 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075784439 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060133125 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05793033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067838213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058680352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0584042 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065444709 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065920527 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067308193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067842521 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070401981 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067460479 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067562925 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068965355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066210959 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065939039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064542412 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065981138 seconds)
  done (took 2.672612141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070106665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073883093 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063322625 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0668911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063443324 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067756523 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063190849 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064217584 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064514887 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064113674 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068851096 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068982599 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064330315 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068105518 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068601535 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067379973 seconds)
  done (took 2.414277037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063966213 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06480953 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064555405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058759398 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06206475 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057722791 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058314309 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056599132 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.05716179 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070615039 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057978557 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07013239 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059363731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058495551 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05921781 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064863692 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058726971 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059914554 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059265154 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063919589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066157684 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060612255 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063274603 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059601592 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06474633 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066532937 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061418896 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063583643 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059228162 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059860032 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064930498 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065787038 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058733718 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058821224 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057550073 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058300977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.05788139 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058647398 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063299516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058307929 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056935202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063092376 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058328868 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059045631 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057359769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058884017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057552219 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063933185 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058321836 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06319238 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058277857 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060083396 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058918095 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065443112 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060597669 seconds)
  done (took 4.70234478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071931978 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062299163 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057764345 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05700055 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062390659 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062764069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063565319 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064045273 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064061644 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058624763 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064154976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065085906 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063676363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063326301 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064005711 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063697655 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05823538 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063563253 seconds)
  done (took 2.489742329 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068535502 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062330908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06682823 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062466852 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061646289 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06164242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057541111 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057148185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057306841 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061714256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062264762 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061417187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057719299 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061113187 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06177574 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06234978 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061209299 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058641506 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0629181 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058432501 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062601802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05906102 seconds)
  done (took 2.702887865 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083855365 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080135809 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119361328 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076970698 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084834758 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069278511 seconds)
  done (took 1.86961514 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086790731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097070861 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06226394 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062414239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070534691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064857152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065325249 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065297839 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07035471 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069120653 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064982434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070615445 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070475445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06660513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070409913 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072475837 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065235241 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06518509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061649604 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072708055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064750535 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070865334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064784082 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064708647 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065163705 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066801125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073349627 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068716841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067554268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070642391 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073121065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065009597 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070642266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068974174 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06176043 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070650965 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065299508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072813126 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07103422 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066867361 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061819619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070479116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070664874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06657887 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073354898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065524119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067039383 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065497484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066159031 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075447722 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070661464 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066942727 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070658422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07293479 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073362657 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075150126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069486817 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067008798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070622431 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069078952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066405585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070458659 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066557002 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069621119 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07294457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066718222 seconds)
  done (took 5.919733711 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093491828 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062704241 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065485834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069402537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067047836 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065085311 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065248766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065287539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06497613 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062415943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097462493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065161331 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066927484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066851321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065191002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065365204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065225929 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066870726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062445035 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075262492 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065527096 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066647584 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066575255 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066769123 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068969952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073420104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065428224 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065127287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064823332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064919244 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067874302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066490844 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068986478 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063741442 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068182874 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066888107 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067272203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068216572 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066690605 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072844069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068346436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07536621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067019468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065857766 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069626651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064920827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064973984 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062435183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065219615 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062490704 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069063562 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069211717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069164417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066891866 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065383674 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065490698 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065498194 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064976152 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06541668 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073297416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066835935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065192583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075064041 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06499807 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065193999 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066716623 seconds)
  done (took 5.847826463 seconds)
done (took 121.722320709 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205864945 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181677558 seconds)
  done (took 1.73062273 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070163494 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092488904 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071259759 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130363927 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067904688 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101456223 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100254499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071153016 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067400396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067273377 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067466888 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069970854 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132450841 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067714597 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066991915 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069759654 seconds)
  done (took 2.676510832 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100958221 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174057296 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106842728 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065651785 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101036868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071989428 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065743438 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075680253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068934625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068873827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071729906 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0704996 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068368832 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070002941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068559983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071499518 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06861169 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071702484 seconds)
  done (took 2.828547508 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08956217 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081422996 seconds)
  done (took 1.540236159 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148860342 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101394136 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139195586 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309186744 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127105688 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.122411341 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12645631 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120996705 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106140457 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.117745939 seconds)
  done (took 2.782917099 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098215624 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167354717 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299486526 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113164725 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071738765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094570252 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116487066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077228668 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075426581 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075420152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078074501 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072952193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092719929 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071768443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072011999 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072182838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095859035 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07137413 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071050376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07121502 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096234403 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066366052 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071393235 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071329659 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073322257 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073198713 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067169182 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066039673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071819364 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070711695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073266438 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09169327 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073415052 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.094753684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070109699 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.095339347 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070974341 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069701884 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07077139 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069238731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072311127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072601536 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075123192 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073428968 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067306698 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.06993278 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067444835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065617471 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073739921 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066938474 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074386826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073625778 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.094192521 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066748666 seconds)
  done (took 5.860576685 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102474656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10098482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066259266 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107303128 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099427039 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065782325 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098756 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094529204 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10287336 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065315345 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064924895 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065568222 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072343999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074675405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110497587 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101654797 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067889161 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066372808 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102460187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101272645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064841823 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095421465 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094354307 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101104407 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064547597 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06567634 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064410521 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064528075 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070235304 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071206496 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064596478 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072092472 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07696101 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071579182 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06393896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064610837 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066112498 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074267921 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072131049 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072240622 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071084949 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06406157 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064479813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064975879 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066046387 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064112699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070634221 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071978964 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070942438 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064868158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065033305 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064499921 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064810771 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071299641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070279594 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072079952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071927232 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064092534 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064591611 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066153744 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072844576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072629262 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072494237 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065587233 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072972932 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064347042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073625284 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077153085 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064483387 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065137635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06452406 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064342141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065158137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070348669 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070317045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064784162 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064297951 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064364317 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072298407 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070437481 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064292148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069902054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063640676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064455444 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064855967 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065020986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070166055 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071853107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065320385 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064024376 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064153121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064285995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06373247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070048333 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070898044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071125559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07018382 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064634063 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071213314 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07030966 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064731002 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069474769 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063804799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06370461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063937271 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069317211 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068367415 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07097208 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06326968 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062877297 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.069006907 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071827197 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063080785 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068902195 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.205228452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072795962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065379832 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07814163 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065778179 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074026133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065814133 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07496648 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065330947 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071332219 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065145211 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064432157 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065202257 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071927925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065415278 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064808318 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06555607 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065194535 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072614327 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074832834 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065923315 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071519067 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07178353 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065522658 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071515723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065562924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07315654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065118051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066667538 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065494787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076473688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064881209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06564029 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065004155 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073421808 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065326657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073296461 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070671001 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064563543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075266254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073342164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070846218 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.074260477 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06598412 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065113322 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065059955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064798179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070022458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071787519 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06535295 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064542485 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070236115 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073463995 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064161506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.071141383 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071236016 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071166769 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064865387 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064675873 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075173578 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073257814 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070720002 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070881517 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071192713 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064771129 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070821446 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07122269 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064693727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077515345 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064922836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07512238 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071777657 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070966796 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071609914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072928347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073341628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073834132 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075591772 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064227515 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064756586 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070895639 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06467926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064956981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070430653 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065101032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065223353 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.07563979 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064888183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073167942 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064301233 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071839999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064711322 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065115576 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075680045 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065035177 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064988068 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07094097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064676617 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070263073 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072991196 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07031485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064077657 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06513844 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07063897 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070653515 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063420547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063304612 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063901195 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068581506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068959024 seconds)
  done (took 17.303588057 seconds)
done (took 36.103881966 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.19154752 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152669912 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183055095 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108376968 seconds)
  done (took 2.109692523 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.088864135 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.091946677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.072835666 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061200605 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.077055399 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061333085 seconds)
  done (took 1.870431539 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.253461342 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17829488 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163679512 seconds)
  done (took 2.002902635 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207438295 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192361266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464804479 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283196636 seconds)
  done (took 2.658913212 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.124142283 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.075002757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059340692 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069689614 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101087769 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.12866032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.082460387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103458654 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070300762 seconds)
  done (took 2.283676086 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122927924 seconds)
done (took 12.486816536 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.262212946 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117477518 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086831202 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094494349 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075983251 seconds)
    (6/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.199132892 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070811323 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072311245 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06437301 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072260537 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195253165 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090943021 seconds)
    (13/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.108728017 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073445957 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.149445137 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195691371 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.092986591 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19253492 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.229630423 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074871138 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071688125 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145784781 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072047005 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077605642 seconds)
    (25/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.398468549 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.225068793 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207277729 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152106345 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14610401 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07346214 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08498195 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070269724 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.182936253 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148794542 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.179420745 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074384892 seconds)
    (37/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.243445015 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069270565 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07076643 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093445983 seconds)
    (41/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.16243383 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060564744 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092820509 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.143552155 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159183761 seconds)
    (46/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.221765631 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066793507 seconds)
    (48/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.086414483 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153402998 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190123167 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088995843 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197572565 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074254481 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164001535 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.137827558 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062135118 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164352458 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061267794 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060599193 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15237008 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062054912 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.063335282 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207616251 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.207936978 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080803484 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082336625 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172344642 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.218876831 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060577661 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069880975 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 0.23835607 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059362288 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059679511 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13879038 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139636535 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060911513 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 0.278082058 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066481682 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074774182 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062972029 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062700158 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073537344 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119877626 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075505391 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07500856 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062583283 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06209109 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113852263 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125924195 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069743944 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.168234946 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071953105 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122134918 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090672086 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070630976 seconds)
    (96/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062586312 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182435985 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064378021 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073818828 seconds)
    (100/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.072814144 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068504482 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070201996 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083136453 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121607062 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06289816 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069050638 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147905806 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069026124 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062914114 seconds)
    (110/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.143310482 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21534885 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063457863 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074472185 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072751886 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064192264 seconds)
    (116/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06279632 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070095583 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153765215 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083515536 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062774371 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.077136079 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06380665 seconds)
    (123/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.14337441 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063586944 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068915748 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064404234 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156200957 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140922541 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065374468 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074109312 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116628484 seconds)
    (132/309) benchmarking ("sort", Float64, false)...
    done (took 0.132533176 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164884832 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187065115 seconds)
    (135/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.149690946 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091419609 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081215225 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064531686 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073885166 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150285375 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071432637 seconds)
    (142/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071242762 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062499236 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062749519 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064199599 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082242069 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072861192 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072046767 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.181639385 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062517498 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061707701 seconds)
    (152/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074994763 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060289551 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062834735 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062073034 seconds)
    (156/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063542864 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064329748 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061504057 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.136374965 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062026963 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069408798 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062394192 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062220547 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.06943392 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144231729 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085406185 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069317842 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061965932 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062211716 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08069467 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108735021 seconds)
    (172/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.134581898 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06909821 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06059401 seconds)
    (175/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061175059 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06246077 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060639529 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116197261 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079537274 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199079805 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068120286 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060302209 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140025239 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10937067 seconds)
    (185/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.067962652 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062277567 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.067258215 seconds)
    (188/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.134982214 seconds)
    (189/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062215354 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061574265 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060199116 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068554773 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122629299 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.084736522 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.081948842 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.224136892 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06809593 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062106012 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063483654 seconds)
    (200/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075384871 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069537247 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082308522 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06225232 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136971835 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074305499 seconds)
    (206/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063712035 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069145238 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062190664 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062392967 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062494486 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061280968 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071126715 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063231401 seconds)
    (214/309) benchmarking ("sort", Int8, false)...
    done (took 0.162596817 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.062310989 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073863631 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062185004 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074672138 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061480862 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140553137 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090447699 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067299528 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06227641 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.182897008 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127951759 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064891927 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063739253 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061406837 seconds)
    (229/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062599558 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060887837 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06978726 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062771509 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062521599 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143192098 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061533335 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.061436453 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089160756 seconds)
    (238/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069965147 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061390782 seconds)
    (240/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061932719 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062227116 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06288414 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063860301 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062014693 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06293193 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061506214 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064646609 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069124759 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143699697 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060438821 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071391936 seconds)
    (252/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068715993 seconds)
    (253/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062718958 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0641499 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063041511 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068863495 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083773384 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083426498 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.061646547 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069315722 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07305377 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062547274 seconds)
    (263/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062472782 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082615069 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073466345 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06878165 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062593121 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066357902 seconds)
    (269/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063199005 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193799249 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062529113 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069704991 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084114408 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082482193 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087680725 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142668327 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076502186 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061278843 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062920904 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085357991 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119868556 seconds)
    (282/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.089729199 seconds)
    (283/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061393966 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062988854 seconds)
    (285/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061887756 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062117317 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061767438 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07395865 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171977844 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173305598 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062875095 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145683828 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.137767519 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062495434 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06216035 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.06899803 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062387889 seconds)
    (298/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060804993 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171135628 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130035087 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061210377 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062242654 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161832716 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061522943 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060396551 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068876287 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063196203 seconds)
    (308/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060828742 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063581452 seconds)
  done (took 31.742197585 seconds)
done (took 33.171948904 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083260845 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08571085 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069583217 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08083516 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07762201 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092255974 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070127745 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074855331 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076728714 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07534756 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074920223 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069093523 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071041396 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071167198 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068771312 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083572195 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076253822 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069913828 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070069868 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06122723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070295087 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062315246 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060881901 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068366848 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07299801 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068420904 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07070041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070737426 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062505536 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062601981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066817249 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070657327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06465204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073885187 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070626751 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070195715 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071059618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074351278 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061032174 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062032504 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072441923 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062696655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069978513 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06805063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066890391 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068740358 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069895368 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072868225 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083362595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066122576 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072410707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072387931 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072721004 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067399178 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067069625 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069918547 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068583622 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083217324 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070418999 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066021471 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072015712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070833419 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06874518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069842268 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070441125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073015964 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073349861 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069122952 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072221634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069582345 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061850808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070119159 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066906485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06177944 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072965355 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07551184 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061015325 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065840198 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069752245 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070227409 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061460475 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066173074 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060781354 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066933991 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065629731 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068209596 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067194182 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069525338 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060934474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07039446 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.06920445 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069907725 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060624594 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073800015 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061550722 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06827884 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062611829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062239174 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060710772 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0673346 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061539653 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065985706 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069501056 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060522216 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066716096 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074737642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062013832 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069088723 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060624701 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061244156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071908485 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072806788 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061997745 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066092634 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060861982 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06730216 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061180882 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062092229 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061393764 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061688814 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066585389 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062015323 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065996524 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066933161 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073601319 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061549794 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066537209 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065550531 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061437285 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068087424 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061822021 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061629629 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060472293 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073824 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065231802 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06136695 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066885837 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065420022 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068745661 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060153798 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069625585 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066680866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.064987314 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067137571 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.05957729 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071581068 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064749628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206670501 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061838434 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06295295 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061529251 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062404745 seconds)
done (took 12.066255672 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063000465 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.087199771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069751548 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077454717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073928761 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063377638 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065296498 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.07818386 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065121816 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080707817 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08362389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082517203 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088859882 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060990373 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062518319 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063221968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060692204 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07074365 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077064404 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08514234 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093396894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064337224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073128546 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080502675 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075117525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080022111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065629698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064874057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06711998 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079882162 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0866638 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062385696 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063443094 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.075001037 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07508395 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.067959142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063157641 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066926337 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063822515 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062394888 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06416494 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075734214 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068583941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066282061 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063134701 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06309126 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062408026 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065419491 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074827802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065658483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069896773 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073490707 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064176329 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062633679 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061067614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066245435 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06245609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063135784 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062982291 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062627228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06288544 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064850795 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063106076 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063083257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065742505 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064909189 seconds)
  done (took 6.084772132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079911335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090882895 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078281067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079227757 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062418441 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063358429 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064318981 seconds)
  done (took 2.055055891 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063747316 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075426218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077930729 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077777635 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070297642 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079685935 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063686267 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091831904 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062477676 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074375555 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106291321 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079159605 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066046809 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07365059 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063242979 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069960396 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062719851 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071127381 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06996717 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077968397 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06635696 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089546956 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076578477 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063597512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082373187 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06664463 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062065818 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063435017 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064221352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063892005 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063556432 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100072626 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066575175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074179482 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064071312 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06236121 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068032331 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066107172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06478445 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071180479 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067910428 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064181321 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06170948 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064064379 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.065569999 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066752803 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06181368 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063889773 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063810301 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074029277 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062235028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066649548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06691124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068773222 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06904458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067076364 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070991364 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064302919 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073859362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070896402 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063966598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070520663 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103408737 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.06748191 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072595378 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069064076 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067956801 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069480528 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066159767 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067026776 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065862508 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070877058 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062537337 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064499352 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066204788 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064687448 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066549477 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078664004 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078618788 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074977945 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064592844 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064048821 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066927502 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078753172 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06722556 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064008215 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066153608 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06201644 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067367633 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064626767 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069057226 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063834809 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071011674 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065359959 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066315422 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072706824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065159982 seconds)
  done (took 8.286229421 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065656729 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064248216 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064891833 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064360033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063731685 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064102108 seconds)
  done (took 1.953037273 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085280436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063317155 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0770733 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064016996 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097366669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070516287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069949074 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070618085 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075982401 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076105989 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069596505 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072001799 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069456661 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065123683 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069016351 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064009669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069950619 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068390297 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077595087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06731475 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077988367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067183824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066015134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073812512 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065362824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063841378 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064054046 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075438557 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079696732 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073325556 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066770938 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067772384 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072113701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072834472 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071600596 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072531027 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064672305 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069021866 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066492858 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067639858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072111239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065379506 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06519239 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068074307 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070743803 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070737257 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068092317 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067344327 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068899773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067908857 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06830078 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063569328 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065976062 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.06806786 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071269393 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070876645 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068353132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069015305 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064432303 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071461458 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06323001 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065737064 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07085368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065843112 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066333819 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068029657 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071050301 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064447378 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064805885 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063111613 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068290323 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063171745 seconds)
  done (took 6.5366736 seconds)
done (took 26.437622335 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.963548015 seconds)
  done (took 2.478554115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.548760561 seconds)
  done (took 2.100092261 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.690947537 seconds)
  done (took 8.241173983 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.281613763 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.306886173 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701607369 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.125846363 seconds)
  done (took 2.998103293 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713014827 seconds)
  done (took 2.27184991 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226742895 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217121404 seconds)
  done (took 2.013693096 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339831401 seconds)
  done (took 1.892586507 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.090436034 seconds)
  done (took 2.640888278 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.213965499 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153472797 seconds)
  done (took 1.92942283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467954411 seconds)
  done (took 2.023926394 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.100355392 seconds)
  done (took 5.66323071 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225728387 seconds)
  done (took 1.821951872 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230146011 seconds)
  done (took 1.792437967 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.73608393 seconds)
  done (took 3.292735778 seconds)
done (took 42.720252669 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07983175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082229516 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082034656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077846153 seconds)
  done (took 1.85773024 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070220211 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066140911 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069899293 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069604905 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067980926 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069220353 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069022857 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066828983 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068368945 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066428453 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064598471 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065547657 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068303587 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065936151 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068329043 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.0694238 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065937986 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065851381 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069143525 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.0658514 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068462489 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065987412 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064576807 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065948387 seconds)
  done (took 3.176091727 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074428563 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069027065 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07227189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067799724 seconds)
  done (took 1.849376794 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072167174 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080499385 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08156544 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087421209 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.0723779 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073011208 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.078471938 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080335232 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061913212 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.081728535 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06460819 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063520448 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063234654 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082589776 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.07854634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059307593 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060517183 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071937136 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071730738 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075601656 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067100458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063990835 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074443207 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.0737458 seconds)
  done (took 3.306577104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075906756 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062752298 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076507479 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090893195 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092881267 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064085481 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078010644 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09281009 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12459572 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064506236 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069835564 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064560973 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106055259 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06384115 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078801984 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106399396 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108825102 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068002955 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09637135 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064530696 seconds)
  done (took 3.223499128 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073301071 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066562259 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06743227 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062771107 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074176226 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069112499 seconds)
  done (took 1.989373233 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064686134 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064687268 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064358917 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063785643 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068973215 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065232035 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064364005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066389548 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066202475 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065615106 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065338492 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06454767 seconds)
  done (took 2.351385549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.155614289 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066462744 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066779233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065005081 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068576314 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065496631 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079407777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067103473 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083782268 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065237719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065197082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067373786 seconds)
  done (took 2.486675808 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090537967 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089171294 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122777543 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105630649 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08799115 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089808807 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.140460749 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130748538 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107475891 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068622319 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081374121 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101035278 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09562936 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132923945 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107269237 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071580427 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09678475 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079818472 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10165056 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108171451 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104755486 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107585265 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084694766 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094804307 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101221162 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110848402 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069662559 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069347585 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132089597 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095816041 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087024874 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089076933 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103606143 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065424219 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081927376 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094827054 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079578472 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096399533 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083443634 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091724501 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072772302 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.118245394 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094570268 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101040177 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112900812 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089248913 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100025297 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096864106 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080883644 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111700301 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091863052 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087662435 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071888548 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146029037 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08679973 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.101566351 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105703118 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077299088 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082811312 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088307071 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11555619 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.091384785 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099864754 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.246169097 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084455177 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088234632 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128066311 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083173263 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101424972 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123138135 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087629538 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074021142 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.08957197 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068271988 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096456028 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099442287 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08931991 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104547669 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07804816 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114100253 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102068891 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069416854 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107602637 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087690151 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147744736 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093973615 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096715954 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087389347 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.141598289 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081940893 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076436763 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090100532 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124326094 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085850568 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091475202 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120171715 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085373981 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079748901 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071660404 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081830894 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089641311 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104082152 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09325187 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085440413 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078918242 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085052517 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071569963 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076956123 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092826233 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08360917 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112635175 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098639719 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108520699 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075823105 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102959537 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088255262 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124021626 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112782737 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.080550186 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104153031 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128053527 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10268354 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081627354 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095908614 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108279502 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098621606 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083283374 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127108554 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106588875 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080715844 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.236792204 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089074288 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.100830908 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145241746 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086994915 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.102320172 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130786271 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.101429869 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088918648 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080180108 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087322818 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10420387 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133611982 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088369019 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068585926 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091737726 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12311404 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073113825 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092229086 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.085974841 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083207685 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079966465 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06710237 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09811273 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128336337 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108216795 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095171894 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.090682568 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065968301 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096046126 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092976517 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140216274 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11112211 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093934768 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.087594385 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096382778 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076488279 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125301191 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.124433072 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0882909 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087854535 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118952526 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085885351 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.097097232 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103165237 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10167115 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093490204 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132822603 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118324401 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112019079 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10091576 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118951734 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077514323 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103147174 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070674413 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099118878 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072428612 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097101361 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074449517 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106318985 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07550902 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094308594 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064801291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.227673613 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.101792494 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086669287 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082647123 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126669636 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119236766 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079161399 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090176604 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096464212 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093855464 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102507816 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084531743 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087532445 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075067832 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.076848733 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087504241 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093046762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100039184 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07422289 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071746706 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135945281 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101358049 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089012136 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088487304 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.112747287 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080938149 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079436609 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10146883 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132458194 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.116381149 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078857021 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089937369 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068053908 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083152405 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074301035 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105825572 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070930606 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107441853 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064730936 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124922351 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083773945 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097757336 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090186803 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121803088 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084961119 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120896683 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083492888 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103858642 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090890602 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086616848 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10240418 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088041306 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096037258 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100746323 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082641685 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085512264 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118773587 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10374419 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111549294 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104006789 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131643224 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104711687 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073421918 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099792745 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087165046 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145926919 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09475352 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080485292 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082549845 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.252635916 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080950375 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136451552 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084758705 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.079310317 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10943143 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087193482 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08590721 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073147735 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098557709 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083368388 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106240845 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.093859805 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.090882716 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101658599 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103039285 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082052985 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083247653 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11948298 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.123743897 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097996777 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082721644 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084478563 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096097649 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089656395 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.105621664 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077833487 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072657486 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.065458467 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068772596 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112833307 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100253718 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093580484 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090489885 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09864039 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068523106 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086843527 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088179838 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08046712 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085841813 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109786585 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099359477 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12417675 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097723002 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088650157 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132606487 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124477406 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086206351 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089108625 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093120759 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073323979 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143505199 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110366855 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073939676 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078424379 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073672061 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081816649 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067931382 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101442345 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101807013 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073100918 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095684411 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090150435 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.113090026 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088679565 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073881323 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077182268 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070353319 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070675083 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093652173 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072633488 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07308093 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117968602 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.25346273 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102608924 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078317668 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073259696 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127436965 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066411142 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129141518 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080434275 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104859515 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.077310194 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075904821 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08638861 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099498024 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103818949 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109048043 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067355356 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09965308 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145004772 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073444066 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072585176 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071644183 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108250003 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083351175 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13907322 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086583578 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085464065 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074029862 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119179287 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099219601 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079336227 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119829306 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077345236 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068158644 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07869354 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104737087 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068988499 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.071505086 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108320101 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.61883165 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087556441 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073781997 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080740129 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116744269 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078930787 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104969143 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113299867 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102425748 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.175953087 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070215993 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087432866 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10107359 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094607365 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087957948 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077370939 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084919349 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084798547 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076586542 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102265328 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.076922987 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083584281 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076694903 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100118772 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125532178 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082507285 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.097685578 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083412035 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082172693 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093724113 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102070356 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096906986 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.23791861 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086193809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103748088 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080596889 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077074615 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096546779 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073577123 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074456085 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109624137 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.080694103 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089763195 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10064761 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.081631326 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106836779 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114473867 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110179586 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095129418 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076217539 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082166576 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.084824072 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070100236 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076436618 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07318159 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067313998 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104777964 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082180756 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078267652 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.097112344 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102766574 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096679346 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104206103 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086695411 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092049877 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097932683 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.122822315 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147037506 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096547651 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114862884 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127898044 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074622238 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.072450428 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076976783 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127528462 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.077315057 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08829111 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.226946334 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07401527 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077875167 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087832345 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104278909 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078865254 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077464642 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094758013 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108079348 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080969554 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07843296 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089952908 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.1011167 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126170268 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086398301 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071953363 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105217661 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098261492 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118881523 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070098354 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078568969 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124606746 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083705546 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096974795 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075382019 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115334511 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124099628 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070375513 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.241391933 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068751014 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085626574 seconds)
  done (took 48.75730893 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150986329 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148634018 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078862141 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094305376 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.187822005 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.204106623 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114804883 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090632806 seconds)
  done (took 2.767471427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064455562 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078616123 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098701679 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080298223 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063459792 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064578674 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.190598609 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078436205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062908817 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101954287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071574817 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065071596 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.345109705 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062777494 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063590898 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070965796 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063617858 seconds)
  done (took 3.309953435 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.34814147 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609240276 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.315498732 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071617015 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.935431463 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088337807 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.152405887 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135729829 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077831887 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546507417 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364827064 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129776707 seconds)
  done (took 18.469281878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072023339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070980147 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07425816 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074550084 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07120197 seconds)
  done (took 2.054153978 seconds)
done (took 97.181555088 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078853626 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164442367 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067258735 seconds)
  done (took 1.954413932 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078598443 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077493932 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077604155 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074798933 seconds)
  done (took 2.004080584 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071359569 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072848291 seconds)
  done (took 1.832614186 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232354191 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159692603 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086841592 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078712425 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075790836 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076632149 seconds)
  done (took 1.930786614 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068706227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.06839102 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068461415 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.06880275 seconds)
  done (took 1.963607762 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065020362 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063138416 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065250071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067774514 seconds)
  done (took 1.952102014 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078783077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079843565 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074213544 seconds)
  done (took 1.922958848 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107817701 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094969147 seconds)
  done (took 1.891875435 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07650901 seconds)
  done (took 1.770267006 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083794669 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089888106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140507602 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.104600475 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139223999 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12373654 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073174297 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074452961 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069745392 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069013363 seconds)
  done (took 2.658300466 seconds)
done (took 22.127852617 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075121197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368188278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357157416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082776543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667180034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353373708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994509179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086479587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094255223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064959033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080634561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646331433 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985860295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327309742 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972331252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326411836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645471868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065324512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064619246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065116887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979441574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064203645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064750203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065243238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64628448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369147578 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065764804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326274077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064301471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066998597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352314766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065779502 seconds)
  done (took 16.123655229 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067070098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116565374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069789925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080655419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066738941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066063052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067983439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065306826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104399292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065016882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081010251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064200228 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068566002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066646017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084568321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065601844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066908415 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06637743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068344561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066091997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082910914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065375356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065706656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066157711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066442032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078030031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066725374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065691057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066058759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068062465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069216912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067395663 seconds)
  done (took 3.998308335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119694568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121578055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070040946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104760439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114389926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066933038 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147142482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088370469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109791924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065191778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08149117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06597046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100360539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067155813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085837394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065976566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067251971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066164254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065535273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066341801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083734867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065127894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066140596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066673413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066507882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079841173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066654591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065554638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065626724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06830604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069839815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066915283 seconds)
  done (took 4.277126805 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066170606 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068989552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076596911 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076929413 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063552427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065815662 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067109372 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063556209 seconds)
  done (took 2.262493138 seconds)
done (took 28.368946544 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074807692 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065279021 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067973105 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084319135 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070766763 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067566415 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062947002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070777997 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067794162 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.06800577 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069628465 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063596351 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06741112 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061647253 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068178654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062599597 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069436934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06733075 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067725781 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069036287 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068476583 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068577669 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070963713 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067905028 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067611119 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068012086 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072951759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068825005 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063838331 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066147236 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06529819 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073844005 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069687723 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069480711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063714503 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063193266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067693868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065616951 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069683902 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071974752 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065359054 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071945311 seconds)
  done (took 4.55008592 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08172848 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086276251 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.07893273 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07838231 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097019412 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079242572 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.083458498 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07593098 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074002456 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082114425 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070168604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074977246 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07560462 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069107627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075059274 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071614881 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076178208 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070269668 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075157252 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075283277 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083445428 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068898918 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076166916 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076251841 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070555796 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076338945 seconds)
  done (took 3.721275805 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069572278 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084137782 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0884246 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151137845 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107153427 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078950287 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07823404 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092352415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096547057 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065520718 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068778926 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090407825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091673518 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071652763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104369966 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081925711 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.075557431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066641861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071734967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097352456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087864193 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083318764 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096578718 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083577973 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064243718 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073559471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071000353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078862765 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071302005 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076086536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068699753 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067525437 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064905108 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075535388 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06852285 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06219067 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084951182 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075779829 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077305738 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105944634 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073567947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065869488 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092535591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12557051 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064882942 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067508685 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067965211 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076134594 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065488914 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09225233 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081505455 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064278424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082237248 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065995142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065398941 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079508848 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066224876 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066023944 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076102194 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070481159 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083627375 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068768395 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082997334 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064148195 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074672766 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065997692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065899427 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062986489 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098083549 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07132308 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113642242 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065538548 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062283994 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075700886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07496986 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07064017 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063878976 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081561019 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075362612 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067934866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075152031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067189015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067912195 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098206707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063651003 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06267153 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062111627 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066478465 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067227352 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064596412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076726742 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063548838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067131651 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078206653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063864144 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064677687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066634565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065667516 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063644997 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07426045 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068153108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065990639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076026227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065292035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067679766 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077719457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073010567 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063827759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065408442 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066430387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065818821 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06838136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067362837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066325394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069736438 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071596924 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069610005 seconds)
  done (took 10.541347467 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.154567292 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148127386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066054562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140999392 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074566441 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071414678 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144253135 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085731151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067206162 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068588652 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066434018 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094218674 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089136237 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.098880765 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.06859462 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065198683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087480633 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095515278 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143406061 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140838654 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089862323 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074131919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068713096 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068553244 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068077016 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074614161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079944057 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072345949 seconds)
  done (took 4.328013168 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07262295 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090008189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068855985 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075839414 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08336758 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065530856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067665419 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066135933 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078985067 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072366105 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064755796 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069085442 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06810885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06714869 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066029515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070747167 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071721451 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06388209 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068327027 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069286403 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074602996 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08923421 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069574244 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064523295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067168185 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064774423 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072185913 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074430184 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064531176 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078075441 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062133949 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068965388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077966773 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065424878 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064385536 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065492017 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064842715 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064737193 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064972193 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062688439 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062823264 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069303788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06340888 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071005137 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078455193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072028678 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066041874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067280318 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066846364 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06264775 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068032194 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067597453 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067241747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072366217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068405849 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067253761 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068352128 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08929729 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070586805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064532154 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06431158 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063716782 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065885587 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073360588 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080804551 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066460555 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06326502 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064764489 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06941308 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0781291 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064331816 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069413319 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061978473 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06489385 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066492652 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067387255 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065851735 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06416821 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064317091 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064713095 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064937596 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064598912 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064036843 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067378309 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063154723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063483679 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065083085 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065645052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071304404 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063463639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067191563 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065895258 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063403885 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067920687 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069855604 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067333532 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078347464 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073202433 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065216782 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062562345 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078155005 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06637965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063925412 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070352493 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068470729 seconds)
  done (took 8.965703238 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086637092 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06628074 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083856262 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089975257 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074587499 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070411659 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078029492 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065971331 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080769564 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064322622 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073791999 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063954492 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078362507 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073784829 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066054316 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07446924 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06715036 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08360119 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078821123 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06370757 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073297153 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076715956 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.07684546 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081356188 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080993249 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081754761 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076632132 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067480689 seconds)
  done (took 3.867440918 seconds)
done (took 37.679692042 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.794907585 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.952719448 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.782832632 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.981847131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.002389794 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.933197307 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.827084412 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.780664301 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.869879409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836680217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.060943367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.204456894 seconds)
done (took 65.807778444 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.807235141 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.936551359 seconds)
    (2/2) benchmarking "String"...
    done (took 1.998707011 seconds)
  done (took 5.65444932 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.948283618 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.41635741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.04320754 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.77874769 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.785407511 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.207369331 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.5670866 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.221265282 seconds)
  done (took 30.738450984 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.900878816 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.00071433 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.465744443 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.497684446 seconds)
  done (took 15.624444992 seconds)
done (took 63.584680759 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.815003873 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.77949755 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.787665816 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.810394375 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.778541441 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.781528754 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.786036306 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.782224368 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.783388269 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.834546018 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.78164889 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.788794823 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.782355369 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.818303978 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.440568727 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.839971737 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.791562615 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.795833782 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.795395599 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.797230361 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.787279346 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.782306853 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.256219302 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.969063065 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.392899839 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.141700529 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.251136465 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187908351 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.786261498 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.780346427 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.860708112 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.138740744 seconds)
  done (took 204.624760226 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.780825834 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.917155311 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.976557811 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.803144948 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.438652013 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956887674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.879146054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.475564965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.783512393 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805570385 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.111691336 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.782739543 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.150172579 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726905941 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.820366432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.880981147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.02783702 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.118741856 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.822965924 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.930294197 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801569976 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.958475444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.913748809 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.06077704 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.82195422 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.878042502 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.809109792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.789155014 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.987549181 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.008699438 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.793979759 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.82269728 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944231496 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.651416643 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.790908314 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.78485933 seconds)
  done (took 171.728860253 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.971616868 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.788756886 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.781419387 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.838950424 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.907913412 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784841674 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.425812558 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.793074805 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.528216951 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.784232842 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.784847156 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782279033 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.782995292 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783510368 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.79466412 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.859390078 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.786462723 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.797247281 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.785265047 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.809944997 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.783553366 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783368975 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.783549762 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.7842031 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.782835523 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.783621356 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.784617402 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.319674733 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.026339533 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784985461 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784175559 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.769683424 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796200136 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.82246722 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.788728892 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.87518061 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.841590242 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.905085211 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.787282798 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.999617252 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.855131995 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.784816793 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.78417927 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.849185266 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.784536423 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.795243948 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.785872673 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787006755 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.790498462 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850266794 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.031188936 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.78611798 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.909887865 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.269471426 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786717114 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785334708 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.784547308 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.383007419 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.786798395 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.785421015 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.791963929 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.79060479 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785087064 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.785619955 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.17840052 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856019117 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.077666204 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.219742145 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787810944 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.423560498 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.977269123 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.784781358 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.784760779 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.78621748 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.788318803 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.786570448 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787865114 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.909856519 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.794066099 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.914060985 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.870245652 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908880349 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.789333805 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.786836736 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.796607257 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.608803052 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.857400201 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823949243 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.617380762 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.789284323 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.164008982 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.570697445 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787771209 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.786805248 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.798707414 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788187148 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787167704 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.791027365 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.86693905 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.788001511 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787669963 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.910061251 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505981105 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.242986673 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.789458685 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788264235 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.796177292 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.868523814 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.910639291 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791525167 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855973332 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.794364372 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.790777805 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.875505275 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.789322074 seconds)
  done (took 403.190522242 seconds)
done (took 783.292129589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.368979869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.347259873 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.438804449 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.358993564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.337324774 seconds)
  done (took 13.579620598 seconds)
done (took 15.304979681 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.803502591 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.793751787 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.845467266 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.872315923 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.804836818 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.807098856 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.870498568 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.808963526 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.838482492 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.843472518 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.872805192 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.873179978 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.812342124 seconds)
  done (took 25.574268987 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.798684159 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.934782452 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.01306098 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.830009843 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.79894006 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.022433185 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.854037586 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.930500144 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.93436904 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.020650093 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.019353678 seconds)
  done (took 22.88853171 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.797825733 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.93854317 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.021846127 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.833095804 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.800393798 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.0190526 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.86095918 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.93007286 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.935975095 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.021951567 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.028296456 seconds)
  done (took 22.925906622 seconds)
done (took 73.114574493 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.793428426 seconds)
  done (took 3.52390838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.810535835 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.939390733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.79460715 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.795103755 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.793010526 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.795083085 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.794841897 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.794519006 seconds)
  done (took 16.247308868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.793712181 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793843909 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.794878598 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794777183 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.794634136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.795212261 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.793660687 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.794222447 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.793968859 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.795786709 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795267682 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.794952781 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.793478081 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795872737 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.795200807 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.794007313 seconds)
  done (took 30.444559642 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.79650163 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.795314689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.794454823 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795786105 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.795808068 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794732833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796471727 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.795269251 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.796603304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.796238492 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796095773 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.796504709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.796358625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.79798957 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.796713638 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.797060991 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.795928314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.796410147 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.800851024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.795796241 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795229737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.79786426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.797479895 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.797223866 seconds)
  done (took 44.847063473 seconds)
done (took 96.797747805 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.493495238 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.772772417 seconds)
  done (took 9.998312208 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.797575377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.79791245 seconds)
  done (took 5.33259072 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.796638825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.796229728 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.797420036 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.798075544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.797720683 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797865542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796317206 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.797289906 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797913576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.797308173 seconds)
  done (took 19.706538949 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.797841023 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.797931767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.79723748 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.797281741 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.797932565 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797742443 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798066951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.798476524 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.79840534 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.797605743 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.799413839 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798687952 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.798773178 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.799702514 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.799398188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798691867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.79808866 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.799350023 seconds)
  done (took 34.10505634 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.799330382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.799460694 seconds)
  done (took 5.334558819 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.800183272 seconds)
    (2/7) benchmarking "second"...
    done (took 1.800066254 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799593462 seconds)
    (4/7) benchmarking "year"...
    done (took 1.79951715 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.800343806 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79937495 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.799722534 seconds)
  done (took 14.334650095 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.799361987 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.947034899 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.996127602 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.631948055 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.800990189 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802340662 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.073382621 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.802958229 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.804313889 seconds)
  done (took 20.394822824 seconds)
done (took 110.938071815 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.6101403 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.803995636 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.043053323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.882292444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807224544 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.093450759 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.813547468 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.444396795 seconds)
done (took 42.233106996 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.876465498 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.797909751 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.840398961 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.843359707 seconds)
  done (took 22.218224911 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.797833991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.124378208 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.826965442 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.735940628 seconds)
  done (took 22.240394295 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.177535639 seconds)
    (2/2) benchmarking "read"...
    done (took 2.146570842 seconds)
  done (took 6.064742868 seconds)
done (took 59.136649729 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801147547 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.800838691 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801264021 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.800586497 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.80032389 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.800396446 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.801533951 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.806535961 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.801566955 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.801306311 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.800960438 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.801589419 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.801751153 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801644317 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801535563 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802158676 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801638164 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.802531353 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801947058 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802187817 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801375597 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.80134482 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.80230481 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.803335209 seconds)
  done (took 44.979401355 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801465036 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.801870035 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802165453 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802438996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802197498 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.801656521 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802021202 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.802636962 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.80246691 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802299526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802167595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.802264013 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802876236 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802247732 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802462159 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.805446522 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804163945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803439109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801771817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.802729693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.801337118 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80386823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.803129235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802161293 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802235139 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803236628 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.802417432 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803456742 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802994261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.803733496 seconds)
  done (took 55.821013715 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803872216 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.806544044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803749653 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.803684601 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.803413379 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.804087302 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.803612749 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.803875292 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804779563 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.803636597 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.80382427 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.803053261 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.804267033 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.804192678 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804900944 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.805973841 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803735309 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.803480576 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.806680742 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.804738413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.80365345 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.805041681 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.803818621 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.804590439 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.805027962 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.80558533 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.804562344 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805082941 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.80684123 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.80433712 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.805701852 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.80424304 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.805342892 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.805462756 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.807519147 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806089773 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.804617325 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.806293007 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.805941011 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.806524513 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.806476249 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.807056106 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.807291529 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.806510816 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.805844386 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.806812595 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807180418 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.805666879 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806637095 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.806583871 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.808076122 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.81535814 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806625308 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.805816814 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.806182304 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.806435847 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80666442 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.807251394 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.80650243 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.806735274 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806992667 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.807339264 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.808270285 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.808509671 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807171092 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.807146208 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.808473006 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808684734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.810630692 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807339192 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.807153321 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80644687 seconds)
  done (took 131.771218251 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.807551774 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808046141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806711937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808148603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807583735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807598546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808011894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808924617 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807786812 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808359114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807544513 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.810629397 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809141417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807987251 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808001614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.808031807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808226609 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808374567 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.808909153 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809103036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808340767 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809183351 seconds)
  done (took 41.526640271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808171344 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808915723 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80916776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80977153 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810130083 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811541707 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.808514668 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808547038 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809671632 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809720868 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809545322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809508055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809231654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80992429 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808908303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810343623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809651746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809923619 seconds)
  done (took 34.316865557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.809657473 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.809371832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810574584 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.811790425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.809954573 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810175952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81016693 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810677183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810397582 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.810798542 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.808810556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809833801 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.810190151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809359839 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810896454 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810481485 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.809953553 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811869271 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810336467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813950756 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810562742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811789927 seconds)
  done (took 41.579018529 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808929433 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810128782 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811513171 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811699554 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.811627848 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811111673 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.811094095 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.811231952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.811360927 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.811744249 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811440569 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.811541555 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.812068378 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813143274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811855661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812419379 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810862688 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814606594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812162818 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811095597 seconds)
  done (took 37.97968147 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812514111 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812392772 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812586097 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813301794 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811611034 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.811824082 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812582204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811677905 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813719816 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812540936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.811677935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811632621 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813122908 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81225899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813445998 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811642766 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813668765 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812047095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812742236 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812669706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813382932 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81336941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814162966 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813093019 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813769544 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816157344 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813436634 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8140981 seconds)
  done (took 52.510865954 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813872557 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814007098 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.813290603 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.814173748 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813770241 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.813529303 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.81359636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.814110983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814601088 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814282828 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.81451379 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814533689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815160371 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.815374121 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814161178 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.81404155 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814708913 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814031163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815331046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814382889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.815622993 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814990835 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.815530181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814467475 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815118711 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.814793689 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816227921 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.815269331 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81550658 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8177113 seconds)
  done (took 56.192583653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.835861646 seconds)
    (2/2) benchmarking "in"...
    done (took 1.836525278 seconds)
  done (took 5.422959099 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.815176536 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814523539 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.816926366 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.816244651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.815748442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.815399269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.81539849 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816267738 seconds)
  done (took 16.276428832 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.816121707 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.819281073 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.816500258 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.818160565 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.816489354 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824915795 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.817313355 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.816829588 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.818468938 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.817360896 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.821704553 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818301739 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.824778135 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.821302338 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.817461944 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.81842119 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819077424 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819277464 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.819344604 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.819117088 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820862881 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817857322 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.816396282 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.817266444 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.818928291 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.820237137 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.828742354 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.81842706 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81841291 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.818274467 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.825790655 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.819211806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.81806661 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82029048 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818169913 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.817435063 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.825887132 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.818492302 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.818500114 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.818008863 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.819892479 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821069033 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.822635905 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.826791752 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.818958368 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.81890837 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.819228832 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.819448211 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.819403173 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.823107448 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.827612576 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819842218 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.82126099 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.819160718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.821050484 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.819936203 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.818576564 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82104523 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826875776 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.827443967 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.823433644 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.840161704 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.828986661 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.819901328 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.819664351 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829244971 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.843060935 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.820991022 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.821120763 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.822359874 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829116901 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.822200213 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.819669817 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.821819462 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83540368 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.828710794 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.821097119 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.82235359 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.820922362 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.820691137 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822748533 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.821056754 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821576614 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.821799774 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830605683 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.847570984 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.821481416 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.821243249 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.82309184 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.823347718 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.825716869 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.825054664 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.822501202 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.822391796 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.822601372 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.823830832 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.822230093 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.822586951 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.822249759 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830848821 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.822749739 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.822183117 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826663919 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.83098314 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.822485357 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.822371842 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822400588 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.823176896 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.831917907 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.823235182 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.822273432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.823385524 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.824575443 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.826784419 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.822927301 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826778197 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.830910029 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.83127601 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.825851779 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.827721575 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.826919993 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.824933685 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83191509 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.846377332 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.824260085 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.828153314 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.827751133 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.834801543 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.827469447 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.824433148 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.825558886 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.825145059 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.824286123 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.826034331 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.825933907 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.82489486 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.825635096 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.825249167 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.824657461 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.826094246 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.827278323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.824961569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.8265566 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.824762223 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.828911415 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.825214386 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.827582228 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.831968651 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.827235204 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.824948506 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.826077106 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.828133059 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826166563 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.826329803 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.824758589 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.825768469 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.825777265 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.825047658 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827606817 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.825377377 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.825782578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.826591641 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.831059965 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.827036469 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.825569444 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.826533486 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825331359 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.826116078 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82730277 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.826484365 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.827529533 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826251416 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.830392243 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.826625106 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.826896194 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.826423778 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.826313916 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826460072 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.829793052 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.837448108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.829709996 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.83666374 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.826812349 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.8334642 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.828123546 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827411286 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826516303 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.827585196 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827713395 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.826780501 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.826822599 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830015331 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848206264 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.837319459 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.829983648 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.829413104 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.832742598 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.832144774 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.833182269 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.829605801 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829469667 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.830151617 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.828749855 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.82827549 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.829086133 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.832775387 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.828049915 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.829270769 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.8330771 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.827698963 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.827399971 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.829235117 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.828342412 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.829284573 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.828116155 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.828514532 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828683864 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.834605753 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.836246316 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831532079 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.829283969 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.828515191 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830920531 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.830170629 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.829518079 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.829244482 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.832149307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829284318 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.830212443 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836593373 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.830763265 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.829020627 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829053656 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.832700677 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.831179564 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.830165592 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.832754053 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.838113309 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.831552627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.829882828 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.834871673 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.829474615 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.833506678 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.830326735 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830945874 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.8306532 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.832190734 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.831184832 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.830466569 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.837755098 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.834777998 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.831137144 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.831655819 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.833530625 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.832714411 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.832916617 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.832498955 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83570941 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.839278369 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.837462328 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.832313058 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.834416092 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.834010718 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.833314257 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.836795252 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.833210824 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847359962 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.840709351 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.830476364 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.83156766 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.832394611 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.833898433 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.833119338 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832072144 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840884547 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.831911438 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.834514834 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835930023 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.831665544 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.832403203 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838653134 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833377096 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.836896608 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837119331 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832440767 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.832957512 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.833987314 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834693588 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.834035554 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.833937114 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.836985223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.832640858 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.833945177 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.834728979 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.843639057 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.834532568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.834395151 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841215072 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835707913 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.836675423 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.834981537 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.83428999 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.834987333 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.83591003 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.833597842 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.835318535 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834286162 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837679594 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.8455097 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.838041693 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.844846029 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.836072307 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845222997 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.834849771 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.834592949 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.839273922 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.838314384 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.842863629 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.834965429 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.835004673 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841824831 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.83588967 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.836011651 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838959706 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.835474151 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.835908428 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.835823333 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.835743913 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.840369742 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.838301336 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.836170452 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.836331896 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.836568756 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.835779648 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838733689 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.837088987 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.836196785 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.837000791 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.836610801 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.834973057 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.836084541 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.835413762 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.836567163 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.836075998 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83627495 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.844023602 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.837175236 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.83682815 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842662083 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.836279423 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.845107117 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.83756892 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.836290414 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.837383287 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.837075684 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.839635059 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.837006995 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.836934461 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.8378094 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.836078704 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.83805972 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.848905162 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.843691563 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.840636568 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.841651176 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.838634587 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.838658658 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846366648 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.860883377 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838105754 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.839706137 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.842626311 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.84445798 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.840132999 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842783339 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.841692649 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.845974671 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.839065217 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.837478947 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.840924812 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.851567009 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83956612 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.837056229 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.838119659 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.841963072 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.841014296 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.838346209 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.839260093 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840740448 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839419162 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.849646671 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.839337626 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839918457 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837910124 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.838822115 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.839037134 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.838845693 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.843423387 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.84003212 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.838960155 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.838756542 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.841261174 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.843499453 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837747601 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842746408 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.847898808 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840690321 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.838674151 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.84253289 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.839363787 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.83996705 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839165476 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839436612 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.845492243 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.839885788 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.840605117 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844140801 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.847766181 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841426271 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.841358926 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.840860171 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.844026475 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.839554618 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.840357155 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.842748788 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.849733905 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844725734 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.851788962 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.848945222 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.840508643 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.841174585 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847619344 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.848695456 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.839962243 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840114576 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.840809504 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.843031749 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842592918 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.840987532 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840746423 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.84177751 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.846831532 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.840663583 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.841214912 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.842082782 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.841912032 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.846049357 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.84335332 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.846730598 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.842362634 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.841932309 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.840928449 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.84269897 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842657539 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.844280017 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841598711 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.842304168 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.842897695 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.844575448 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.846234938 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.842511274 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.842692911 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.845881815 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.84296088 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.841840164 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.841955048 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.843281757 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.842472986 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.845518633 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.851133968 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.843179401 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.8448329 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.845297076 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.847345844 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.84266186 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.843669939 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844020616 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.844053739 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.852750345 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.844721622 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.84428519 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.845189592 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.843897893 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.848777485 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.845415515 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847896796 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84484138 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.844268461 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.844117813 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847255002 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.854069759 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.848177712 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.84760959 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85287344 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848517949 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.849113226 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.844977145 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.846202688 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.845421193 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.845052496 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.848823284 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845809714 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.845906913 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.845623616 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846740684 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.84590451 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.848492338 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.846141954 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.84700206 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.849063737 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855702818 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.855686366 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.847781815 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.847756826 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.847321844 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.848535969 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.857797838 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.847578678 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.847564976 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.846551363 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848243569 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.847461935 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.855012243 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.855015274 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.850651498 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.84714529 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.851417951 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.864149227 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.849722137 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85656453 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878751943 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.850020582 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846682502 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848100715 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.84935404 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.848094088 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.850290992 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.847843769 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.853311786 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.846653747 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.847330973 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.855836717 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.847824407 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.849454321 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.847917028 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.849701972 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.853959574 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.847706236 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.854436979 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.848552309 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.848985147 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.847858202 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.851417574 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.847454783 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.848042719 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.847354341 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.849535205 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.848577519 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.848472329 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.857293629 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.851166337 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.849143632 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861378 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.859821898 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.849202346 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.848613424 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.848252507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.853727549 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.852425795 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.849065084 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852544345 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.856105209 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.853666437 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.856467372 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.849833013 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.850216284 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849762233 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.849523245 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848558609 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.860828838 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860113909 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.850325498 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.850359161 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.855055036 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.84906488 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.856538879 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.855989473 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849727504 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.851605479 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850720261 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.849706266 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.850253413 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.853227979 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.853468413 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.85868654 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.851027976 seconds)
  done (took 1096.072105413 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850515608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850141058 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849413202 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849282738 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850407323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850015805 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851820966 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.851027622 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.850160344 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.850437767 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.850727621 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851670197 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.850325548 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850862775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.850722963 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.850202068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851294131 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.852079106 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.850671694 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851536231 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.851423658 seconds)
  done (took 40.651459514 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.851202229 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.851647155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.850745904 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851535916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851651755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.852573261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854276632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853265174 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.851676467 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852726958 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.854001116 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852425177 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.853381748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.853725563 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852339556 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853212979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.853571749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852503062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.852410898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.851912633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85192677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.851420712 seconds)
  done (took 42.540464317 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.850665569 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.852235225 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.851774091 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.851256752 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.85082429 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.85288896 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.851014225 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.853901998 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.850892089 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.851712515 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.858754711 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.859115465 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.851834013 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.855053744 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.851941133 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.854442864 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.999606464 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.852508029 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851227094 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.851746718 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.851312035 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856701965 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.848067609 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846862971 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.847783445 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.84774116 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.847902402 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.84724581 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.847012586 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.849087141 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.850864625 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.848830404 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.849033664 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.850052943 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.847242848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.847960219 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.851935708 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846944123 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.845222239 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.845652882 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854600694 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.870295989 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.848171077 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.843145325 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.853317436 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.845188853 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.843151645 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.847101392 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.852352611 seconds)
  done (took 92.62554566 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.842233273 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.842162748 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.845107618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843515636 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.843184038 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.842749155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.842179243 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843678449 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.842039523 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.843664896 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.842171851 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.84110195 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.842284444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.841739395 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.843522402 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841136267 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841389314 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841856358 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.841911644 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841614317 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.842511769 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.841117358 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.841928193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.841308348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841381215 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.842914082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840844877 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.841645079 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842565534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.842468555 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.843340868 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843079916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841690054 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.84207945 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841709523 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842402046 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.843950545 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.842310901 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843573317 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.842827559 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.842688132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.843410881 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.842488253 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.842794089 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.84360054 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.843623796 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844580602 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.843419203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.843400089 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841886829 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.842863441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842213764 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843246574 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841435215 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841605377 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.8416517 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.841823919 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.843341996 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.843869781 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.840101752 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.840893148 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84018248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.840152277 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841919255 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.840294151 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.840313875 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.83979486 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840466805 seconds)
  done (took 127.053013644 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839820304 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839833698 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840076033 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840497701 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839169263 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840432048 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83941485 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.839852774 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839864267 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841354808 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842546346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.83956351 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.839827038 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.83887088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840219012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839993023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84166896 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840062576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840365001 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839436525 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840740093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841647427 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839878099 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840209931 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839876093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840531603 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840488683 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84446851 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840389645 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840961493 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840261004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841084599 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842119523 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841618156 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.841580766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839690539 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841158249 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842931937 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841262131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.83993283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840651284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841194498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843709408 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840208604 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84111518 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840913691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.840499827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842531897 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840875333 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.840942741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840556507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840734761 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841193373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842169396 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842061769 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840693974 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840890893 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842175045 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846584499 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840401733 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.841051998 seconds)
  done (took 115.915539367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840360193 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841078086 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.841795634 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.842738697 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841240198 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841805143 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842095569 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843754372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842166753 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.842654875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842363644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840839293 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844476768 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843730444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837528197 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838849668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837315864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838450767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837617472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835269134 seconds)
  done (took 38.592225996 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.836049607 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.835885461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.837075711 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83405589 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.834265157 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835411465 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.835611367 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835783535 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839183486 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834605854 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83488907 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835654986 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835221337 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835888115 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834913554 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834645503 seconds)
  done (took 31.139310218 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.835239095 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.836047833 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.836483622 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834833851 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.8346005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.835360769 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.835536126 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.837832976 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835348761 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.833430743 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.833195433 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.833965395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.833949476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.836812981 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.834063888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.833453547 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.833123189 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833232659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.834467493 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832709293 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834316847 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.834384772 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.835339213 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833098497 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.837986644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.834544041 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833761352 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.833319853 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.8338843 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.835466539 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833776214 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.833517127 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832802889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83397099 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.834189092 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83474295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834048875 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.833721957 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.8337026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.834300866 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.837303034 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834004119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833769791 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834601015 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83405432 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836253524 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.833801196 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.833952127 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.833444935 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834235437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834405947 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.835799584 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833764682 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834165118 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.834084627 seconds)
  done (took 102.668744813 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835852444 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834117755 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.833155983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832221573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83386103 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.833276728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.83237051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831495557 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830557297 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831868689 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831735847 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831725606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832366551 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831229216 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832351016 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831442872 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832365663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833343478 seconds)
  done (took 34.754355281 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831166432 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831534594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832652789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832267595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830815306 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.83219262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831484564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.831932682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831784536 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831244472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83005603 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83078964 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831262999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.830734147 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833248345 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831348518 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.831449728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831987034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.832262768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833038688 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833245663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832523202 seconds)
  done (took 42.066030124 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.831384142 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.831146659 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.845515249 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.851203812 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.849626986 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.864662104 seconds)
  done (took 12.838305376 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830265233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834551547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831726107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830997238 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831167382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830631483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832397105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8304988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830467714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830882218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831509966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832620402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830206053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830609553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831603831 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832300718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830970148 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83225254 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831876629 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830478773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831735843 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831962485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832796957 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831580633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831277048 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830491307 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83151655 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831192232 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833626001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830966029 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832005387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831213083 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831370485 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832632128 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831396555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831177116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831103609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831731006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83231847 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833552498 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831120436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830569486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830672643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83109414 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833220654 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832175982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83154869 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831908303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831809944 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832262236 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833663564 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831384042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831333549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831796345 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83279704 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832068913 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831834342 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832144082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831873934 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832019353 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831500252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831994467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831690991 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830513085 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831419652 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832056465 seconds)
  done (took 122.659387267 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831967367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83177486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831241744 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831535646 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831618944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830943528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832156758 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831300833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831594346 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83203233 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83345116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831184921 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831442781 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830833481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831959372 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831187366 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835424635 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831225522 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831468719 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831127443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83058756 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832108149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832366632 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831404778 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831362841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831666636 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832298598 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831568102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830236963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831094791 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830408772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832071566 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83429751 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830792827 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831447461 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831110976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830906409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832079255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831761771 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831509989 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831863322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832176837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832111748 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833132459 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831981104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832330638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830684886 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831214596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831609386 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832552652 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834410273 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831963527 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832715556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832231072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833962479 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832367484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83235691 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831803728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83237026 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834211062 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833280199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832994575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832531278 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833071957 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832782675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836093951 seconds)
  done (took 122.687575953 seconds)
done (took 2542.383856523 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.831690169 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.924405585 seconds)
  done (took 15.522615983 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.99851546 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950042829 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.837018393 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.846635402 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.837049751 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.857542347 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.856859708 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.836701369 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.836634579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.836393053 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837018216 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.022340126 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.895287243 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.837129464 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.835836781 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.929751059 seconds)
  done (took 51.82650201 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.840960443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840093158 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.851877117 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.841126054 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.842772638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.852625057 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.870075421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84432343 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.877253536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855417439 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.911246834 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.852083885 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84463386 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.892410137 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.855792529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.855484974 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.935062612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.916835505 seconds)
  done (took 35.349379009 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919153191 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.848512805 seconds)
  done (took 10.543478992 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.864807354 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.840753978 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.843236947 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845419294 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.846312583 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.856218914 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.87375642 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.859436397 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858653211 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.851155251 seconds)
  done (took 70.313013081 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.84447624 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842283209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844146999 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.83973172 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.837322944 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.84269735 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841957117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.842795641 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.536529917 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.879887359 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.850095391 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.849546455 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.839862868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.841923034 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.83829894 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.865450023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952283705 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.8375558 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.83777452 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.848441183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83962368 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.889830665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.854262043 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.841208668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.876243526 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.526476407 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.8513063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.844936036 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.947941707 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.842004753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.840090362 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.0519568 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.845906281 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.298700938 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118811082 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.84627117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.851004581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.850847768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.837198964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.958216868 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841683049 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847194177 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.803783037 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.089919323 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.93542224 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.888436583 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.184630494 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.844755068 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.841556743 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875816073 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.843972336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.840993677 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.858911576 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.359153017 seconds)
  done (took 131.358073223 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840229106 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.191379392 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007124036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.841589198 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126592018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043713885 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841053189 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887993221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842544276 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072140456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092222328 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942360062 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841896087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.839650388 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841691058 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838985925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.982675754 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90890959 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.840545439 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839192308 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866592168 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077804462 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959267267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.841226757 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866344032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044398138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960435143 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.942724448 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.618538822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838954342 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901494186 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842289225 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848091115 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838708598 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99414587 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931659207 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923056487 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.845800573 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840093135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841771629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.58831569 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037698667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.933175126 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.965475333 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095446818 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043920103 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.61733401 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.839491097 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.576459186 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002124808 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.066109945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.07323507 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.95754865 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843060286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.174882819 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8396228 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83903421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087889362 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068187392 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938564589 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843603073 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840379799 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841727172 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128101773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845463902 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935653522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845111588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840723894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943199717 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939517192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.073585543 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053247803 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872815559 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.166720137 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.353012278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088593842 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.906909293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090239183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845267048 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844267929 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923359283 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.674994972 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095355651 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.121609897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087876638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876701069 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.565421579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.843414009 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.06643707 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.06145729 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.092464987 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087543472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.078085976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.149298696 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843559181 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.844516677 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.106005952 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962825963 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847192591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191996923 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073004773 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.385854505 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869043997 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145743895 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971950093 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847874294 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.479019159 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844973737 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.065088008 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88241068 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.846744552 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844473083 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06201821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.817397037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844768139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.734059757 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.904463008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847185572 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078136498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849703239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106173528 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849042097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075916675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.326456787 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874581451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01585877 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091981533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.848895177 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086385814 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084247661 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958289006 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.115037043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.742369962 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845489472 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130883223 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848036258 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.845606755 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012498017 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846074155 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987403157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849454426 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125886711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864726052 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078018976 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850450744 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.100732572 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875866322 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895792688 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847561334 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975480684 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848851649 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679829346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004502225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847327726 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850273511 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39454126 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.849270953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992717315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069741622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866336023 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915709176 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.50879588 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845352628 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924887623 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867307341 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.236207405 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.849505891 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.098464866 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.849344958 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846049178 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.846648371 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133622037 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08063021 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85200057 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846988057 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.745237057 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.847442019 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848011784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.026278278 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.74373437 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846519391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045039251 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849752862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97671397 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855360037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.915317306 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179198458 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846520911 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.847502246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.8469119 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.848462165 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847662026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054993042 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.872038863 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.362338087 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.983236443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113940874 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.157999182 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.085698304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.889530187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851535447 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099730992 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850264214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.909508433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849718062 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869102774 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0753285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852550596 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052930687 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116304673 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693788346 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894784556 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.85280853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850793118 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.848592614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985144125 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930907446 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850863405 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.848125261 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963587532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969848966 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05540155 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.850048318 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.947197357 seconds)
  done (took 898.041633223 seconds)
done (took 1214.721771703 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.850042763 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851622207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.854790614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.849109105 seconds)
  done (took 29.190302293 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.851221367 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.850257581 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.84991048 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.850041745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.852591905 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.852283161 seconds)
  done (took 12.889429505 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.928214551 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849618737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85237127 seconds)
  done (took 21.417622752 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.926262836 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266755107 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.990220688 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.278430463 seconds)
  done (took 10.246305464 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.852555413 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.851228651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.851557212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.853292472 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.852726087 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.854015459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.85241301 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.852543074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.853833799 seconds)
  done (took 18.461296773 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.607268529 seconds)
done (took 98.595625892 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.071012628 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.926229792 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.591936252 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920814762 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.853919897 seconds)
    (6/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.015606007 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.879407355 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.434598236 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.094769612 seconds)
    (10/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.001184042 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.854083612 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.447501426 seconds)
    (13/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.715588248 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.873805427 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85159252 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.30658764 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.155799494 seconds)
    (18/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.028240407 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.176497934 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034327887 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004463209 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851677512 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.878188769 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.960205232 seconds)
    (25/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.058812361 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.852908292 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.229379359 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.95751791 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.100498314 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.940231602 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.186295957 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.981308887 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.954338515 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.891164752 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.097971838 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.853906046 seconds)
    (37/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.706594552 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.01692829 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.331372719 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.978606544 seconds)
    (41/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.29359871 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945319307 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.853131121 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027812866 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.957002428 seconds)
    (46/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.15242735 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.937442085 seconds)
    (48/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.542732198 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.961518154 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.092559018 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.447811018 seconds)
    (52/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.951276228 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.372934288 seconds)
    (54/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.265988188 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.071875307 seconds)
    (56/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.182354999 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998503998 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159876172 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.937813347 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.949130221 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.958590321 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.520369731 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.219298384 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.854538401 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.129448309 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.231092842 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.27134102 seconds)
    (68/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.853227533 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.04009213 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.874167979 seconds)
    (71/309) benchmarking ("sort", BigInt, false)...
    done (took 6.852382143 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.947414517 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.150027096 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.855248307 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.117276279 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.948183406 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 5.528799683 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.92351125 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.871853452 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.147317396 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.012091009 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.860512802 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.876805733 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.497036725 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.339746584 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.859990758 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.247888 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.980895052 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.857168667 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083579262 seconds)
    (91/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.056182835 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.858328122 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.978298311 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.854903394 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.545969831 seconds)
    (96/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.541399754 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.160662773 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.923267914 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.855175046 seconds)
    (100/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.047983045 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.933840117 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953166978 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.752326814 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.002354821 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.136826929 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.879772645 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.855273574 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.156020867 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.06933505 seconds)
    (110/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.968413806 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.231179558 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.169350873 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.151153962 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.239848642 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.990344501 seconds)
    (116/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 4.19444886 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.881074959 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929612407 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166561179 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.242378363 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.165251377 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.859525776 seconds)
    (123/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.028264708 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147348153 seconds)
    (125/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.94034474 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.257466097 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.954723332 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.121770705 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.858839389 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.891321852 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.858618544 seconds)
    (132/309) benchmarking ("sort", Float64, false)...
    done (took 5.608198929 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.858731969 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.859290121 seconds)
    (135/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 3.829421953 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.853839072 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.116808747 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.901393731 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.159106552 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.110748568 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.883201349 seconds)
    (142/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.944014307 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039160318 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.182287243 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862448414 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321043272 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.879120658 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.881767567 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.243670875 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.166316337 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027024912 seconds)
    (152/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.333506241 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.88482861 seconds)
    (154/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.275326888 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.955377181 seconds)
    (156/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.002281112 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.917837861 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.194660049 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.940097988 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.120739288 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.86540258 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.668287384 seconds)
    (163/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.038370221 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886197558 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.858699461 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.605995809 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.980855514 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.746280008 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.945815971 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.738292845 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.995048634 seconds)
    (172/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.367664742 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.962991034 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.937463919 seconds)
    (175/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.298504159 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.861798097 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.8050042 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.538465237 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.783161948 seconds)
    (180/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.863665206 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.931598055 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164257661 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989510677 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.993403173 seconds)
    (185/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.250088457 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.685394039 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.978564198 seconds)
    (188/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.860347785 seconds)
    (189/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.998358922 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.273682018 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042056522 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.895376212 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.962097975 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.510801998 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.75014078 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126876891 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.039457164 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.00522684 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.274657784 seconds)
    (200/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.023196931 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.928959517 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.703966268 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.053690677 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.033000483 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.509841736 seconds)
    (206/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.072056972 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.091926072 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.074436355 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963524119 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.253761395 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.003065643 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.443703351 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.977199586 seconds)
    (214/309) benchmarking ("sort", Int8, false)...
    done (took 4.806202379 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.997538168 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.612864389 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.9981303 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.183538736 seconds)
    (219/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.06601171 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.863656984 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866990396 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.021107049 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.195090011 seconds)
    (224/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.229791406 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.968076305 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.572972633 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.999845146 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.74542275 seconds)
    (229/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.491009738 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.943807183 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.889332137 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.918551354 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.118257526 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869643422 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.953955267 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.006077341 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.895497532 seconds)
    (238/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.88678495 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1231142 seconds)
    (240/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.256367955 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.873241637 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.292429094 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865676982 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.139115029 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.752332709 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.354127499 seconds)
    (247/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.964378762 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.174580177 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.896561491 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.965223029 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876245748 seconds)
    (252/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.88321753 seconds)
    (253/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.335416134 seconds)
    (254/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.077554879 seconds)
    (255/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.279887057 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.876825125 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.876367818 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.741403096 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.621005824 seconds)
    (260/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889909717 seconds)
    (261/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.531750564 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.045242399 seconds)
    (263/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.040170131 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.016115464 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.872340159 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.881760925 seconds)
    (267/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.119638755 seconds)
    (268/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.016442426 seconds)
    (269/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.110783296 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.175502489 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870440238 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.643439389 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.922423576 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.802295118 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.938338679 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.96826559 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.641087626 seconds)
    (278/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.883376161 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.867403858 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.89662609 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.990894041 seconds)
    (282/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.901631587 seconds)
    (283/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.608769303 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.081711304 seconds)
    (285/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.001159579 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.943626686 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.118468712 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.762479635 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.867409043 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.869655513 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.089811749 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.868733579 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.006755196 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.173277127 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.185622399 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.9010418 seconds)
    (297/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971606819 seconds)
    (298/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.381763264 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86873758 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.996160838 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.13271623 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.871876342 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.166295787 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080597542 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.970795123 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.891876957 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.825288633 seconds)
    (308/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.218776326 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93093253 seconds)
  done (took 1007.900708776 seconds)
done (took 1009.761956736 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.89465761 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891311505 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873861085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.894263048 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.985184491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.916809593 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.886994438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.8783089 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.924442851 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.924597804 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.871182594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91354675 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.876013999 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874471796 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873329168 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89225397 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.174374838 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.899556864 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.893379365 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887239551 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.891813154 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873119717 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923089235 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.916823009 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.87917026 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.880360507 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.877588582 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893478726 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987871513 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.878263209 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.879558248 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.888521018 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.17406488 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.896561311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.872453445 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894527654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886835955 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.888091539 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.880304317 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908497267 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.309090395 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.881902222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876010002 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.876862186 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.875983391 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881632798 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.875658936 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.88412198 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891140791 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894318449 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.304150863 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.897067787 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.880085427 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.876287649 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.891412861 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87745096 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.882063762 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894707583 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.896022607 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895989828 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.165252977 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.905977551 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879844127 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.894060089 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.885647083 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.341897362 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.88023465 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.883315193 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.30916046 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.888943072 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.342123917 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.894290987 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.879829189 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.89234596 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.910622567 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.177296182 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.898448849 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.876311853 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.887635718 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877457958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891508736 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893667905 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.882464641 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.880176015 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894764539 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.921819938 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.891082565 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.880709838 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.891633704 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.898048191 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88719745 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890594389 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.882754796 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.875800685 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.890263491 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.884307636 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.883531477 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.881668252 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.883706573 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.89163246 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.309175723 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900633148 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876373375 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.877622815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.87991105 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.893883652 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.308249141 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884752644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.902349305 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.929157811 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881604267 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16787819 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.906534265 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897732412 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.889726549 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.882616558 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.877326994 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.167059667 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334998271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.900617146 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.880710647 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.878680663 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897402015 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882347771 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.877884614 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.179850851 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.906456664 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897297353 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.004292015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.893490413 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91408477 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.878810456 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.885138573 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.925209143 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90316451 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913150905 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.883685821 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897438104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.899200914 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.878194522 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.89386292 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.893630722 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.880775248 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.889924707 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.878873075 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.92515034 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89606223 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896499359 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.902145918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.006008177 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.882888291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.169052763 seconds)
done (took 295.25746548 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96592678 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.876303709 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.004282255 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.87915673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969798517 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.95029076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88038484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.879189831 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.879961809 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.404096641 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.878554395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.886275839 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.878358933 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.882446069 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.951139619 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.879681364 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.879872601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.162099656 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.880925602 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.960882781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879387535 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.880759818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.880900856 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.382932379 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.880687072 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.879115914 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.961052305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.878555748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.169603349 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.879862989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878343519 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169968776 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.957627146 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.891011188 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.889201366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.883989256 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.967490966 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.887608114 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.94530215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.956660491 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.997284918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.913200327 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.87914173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.879846815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.884134299 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.882365499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.880720946 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.915066379 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.880925261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.890255344 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.176428622 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.886575261 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.889381537 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.882604948 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.881226111 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.894118224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.882686913 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.882050846 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.961592576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.881897668 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.947911592 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.384474823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.382326579 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.88196685 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879759445 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.883164409 seconds)
  done (took 185.425301965 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.948368844 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.955295555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.947551199 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.885284074 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.934241273 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.949099779 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.886845661 seconds)
  done (took 15.320079427 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.885908687 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880959211 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.92978375 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.932157335 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880838021 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.063653225 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.892207147 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.886713973 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.909727908 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881029459 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.542638543 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929327293 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.886908207 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.883093223 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893398265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.937594213 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.886006953 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882756718 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.991029129 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029782293 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889404889 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.891207137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.908825625 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895308779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.884389328 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.883487958 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.88480218 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.889509756 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882401623 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.884117577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883333847 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93688839 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883048032 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.88191949 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883591917 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.883217415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882449356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882683137 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882913671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.880896198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883777973 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883126429 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883707227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.883478169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.883111624 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.905769376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882865367 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883463965 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882686909 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883967355 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909390694 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88367272 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.885454683 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891410755 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.930353997 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889765503 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886403292 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.88388047 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.885299428 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.885765696 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884905806 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032868836 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.933501561 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.885559292 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.934163315 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.040360761 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885586719 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.885726588 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.885638739 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.973132186 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.885519869 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.935578524 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.887997871 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.000715601 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.886433736 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.070170738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.908777355 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.888960149 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.888284033 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.885998198 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.893932703 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.887140707 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.886752844 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.892107549 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893461091 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886405528 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.887210633 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.886659044 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.894254168 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.885990962 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.935676662 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.885861489 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.886337971 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.027992192 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.885703646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.995332654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.911829863 seconds)
  done (took 207.387778804 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.893677667 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.893590024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.889326036 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.901401472 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.887193266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.88689422 seconds)
  done (took 13.171991125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.887482158 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.888772441 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.88656257 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.886417926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.886407068 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886081174 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.888285209 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888803136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889850491 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.886996919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.886746111 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.889348688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.887713386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.8863276 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.88877391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.887219517 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.888059517 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886736509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.887166974 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886992744 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.01865635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886999249 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887512949 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.891296429 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.891902659 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.890149588 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.900361172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.888530933 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.88949808 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894821835 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.89245069 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.889102143 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.894259161 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.894156828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892544331 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.892501712 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892710828 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.891490097 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889361909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.890341574 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.889676649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889594021 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.891472978 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.890115703 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.892183258 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.895784203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.894666689 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.90171269 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.890504127 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.891326881 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.891536001 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.889619369 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.890251568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.890751536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.894988955 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894228666 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896162346 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.890140068 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.892707384 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.894833791 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894437524 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.89261244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892980698 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.894227141 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.897986239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.892888499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.895271813 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894056352 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893695882 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.890869425 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.893187935 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.892735661 seconds)
  done (took 139.108602034 seconds)
done (took 562.236041408 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.636237402 seconds)
  done (took 9.459985959 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.067098537 seconds)
  done (took 8.895332435 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.467086287 seconds)
  done (took 10.29495586 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.899451447 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.901807615 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.898668108 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.901530114 seconds)
  done (took 29.43436198 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.179191219 seconds)
  done (took 9.004527682 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.902734856 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904244633 seconds)
  done (took 15.706451202 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.946782036 seconds)
  done (took 8.772595855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.265141845 seconds)
  done (took 9.102932432 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.915590703 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.924001844 seconds)
  done (took 15.685719853 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.895246554 seconds)
  done (took 8.720350062 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.627151319 seconds)
  done (took 9.54710224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907288955 seconds)
  done (took 8.750766781 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933245355 seconds)
  done (took 8.759447481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.074088927 seconds)
  done (took 9.90009975 seconds)
done (took 163.85741738 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.896870229 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.891107115 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892147357 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.892381394 seconds)
  done (took 29.397765919 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.929596847 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.929179424 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.937724088 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.934422988 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.922355667 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.922754689 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.931182616 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.932026384 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.922616001 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.931049596 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932200444 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.929622143 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.931242704 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.942445831 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.939705494 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.929597916 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.930990538 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.931501329 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.923830307 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.940935801 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.930343941 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.93311813 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.898316299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.897993605 seconds)
  done (took 48.111691859 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084544654 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.963032153 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.049996467 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.942793076 seconds)
  done (took 9.868529269 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.897810093 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.96132671 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.948817614 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.942981095 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.992018797 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.000753037 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.951345512 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.107173274 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.013327728 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.02454546 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.908648255 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.919861518 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.922507376 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.95476999 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.00173547 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.899576962 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.899469726 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.017110724 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.961802621 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.108783959 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.899429855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.954552314 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.984774447 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.951184638 seconds)
  done (took 49.053771229 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.903824325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.909676262 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.907747049 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.900440958 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.900789042 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.901247024 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.907523848 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.901494757 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.922810292 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.902685655 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.900165915 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.900698243 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.907530886 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.901422867 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.900319504 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.914123926 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.919096723 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.901670531 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.904786642 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.908095128 seconds)
  done (took 39.946615017 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898138149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.744370498 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.243202142 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.150417028 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.898356837 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.902437633 seconds)
  done (took 31.667109832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.910173638 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.904954008 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.899798409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.955481611 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.033626109 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905205069 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.901044056 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.910189157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.942329365 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.963896834 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.923412246 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92450021 seconds)
  done (took 25.005308503 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.899600675 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.901882815 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.902839789 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.915048848 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.910224557 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.913705947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.909165496 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.90093713 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.915167789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.919145784 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.909880146 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.91254198 seconds)
  done (took 44.744647382 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.117769129 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.127899792 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.124892726 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.264922031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.889989703 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.800950096 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.606112143 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.68858287 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.204950766 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.881953619 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.868931823 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.985829232 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.143675619 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.903990727 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161558312 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.831493935 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.904629894 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173401282 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.905546209 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.903752174 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.195035822 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.960100816 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.11575935 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95086507 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.115723042 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.163476062 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.143363106 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.160558926 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.241327031 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.064019215 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.860805593 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.943102544 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.911106973 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.914055658 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.905599262 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.915865813 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174768399 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.905974869 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.00729146 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.894609967 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.829158723 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.259169705 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.02470856 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.320112631 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034166819 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.146094846 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.908663779 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.857506036 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.957266102 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.196724527 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.0151122 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.117415971 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.829696005 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.284196192 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.034827667 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.906401155 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.908578519 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.605907847 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.14468395 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.984593963 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.268143682 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.020519661 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.907588815 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.995186418 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.906035713 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.018041952 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.092407132 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.911627797 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.903738957 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.910512441 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.00257867 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.117953325 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.905719903 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907032435 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922921464 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.908027641 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.258321004 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.227042616 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.88738012 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.46475127 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.164499698 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.864678389 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.169077612 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.943613555 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.190042288 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.288958692 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.98507707 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.150013642 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.79030537 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.910597722 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.7120776 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.98697795 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.970958934 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.907219607 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.861034416 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.231163057 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.028180731 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.906671301 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.832152977 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.918679983 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.112520234 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.17643793 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955852235 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.908494297 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.907455219 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.910069532 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.908692106 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922881244 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.920541803 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.826863841 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.195384832 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023001118 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.171308503 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.898862798 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.591392901 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.178997421 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.036723299 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.511770919 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.040620297 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.770282552 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043714999 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.919986993 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.91092398 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.096199016 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.321333452 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.864818468 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.144385112 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.983483322 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.940246774 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.914327709 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.988916964 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.134024469 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.908136408 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.163520267 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.154341713 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.553932885 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.980394269 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.980143791 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.917665395 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.124924033 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.991320774 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.442320273 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.132781274 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.264681337 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.885060407 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.506294926 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.212374563 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295944543 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.924847794 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.866652359 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.934713159 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.612912263 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.835608204 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.913614303 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242999298 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.9431113 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.003858473 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.910222237 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.910542145 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.918029914 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.991290965 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.983623047 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.986004098 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.837657767 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.912485745 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913093517 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.910363625 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.441948376 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.667798738 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.202285556 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.909753555 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.983986975 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912407064 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.500994818 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.916620997 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.945480025 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.030917854 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.694157827 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.938342537 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.211722079 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.323505548 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.030996866 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.910402122 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.912727446 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.610457856 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.922487891 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.611740019 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.201176075 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.912414981 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.362558266 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.97748004 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.991124165 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.925448183 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.912529112 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.915799295 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.913362695 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.114951136 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419959067 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.284451069 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.256436032 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.993936832 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.186223778 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.105070065 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.178882619 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.594822245 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.434494412 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.138048096 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913117627 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914270085 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.491513716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.920264492 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.129366272 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.116951842 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.191870955 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.218490684 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.328507232 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.918723212 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.959635493 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.154940329 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.913912641 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.348944466 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.014779036 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.30832239 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.728951786 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.184317812 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.978201096 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.925193084 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.566990718 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054658482 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.867864022 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041288814 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.839180231 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.622529531 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205047789 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.194822346 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.894694847 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.267705046 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.209611621 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.222005781 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.547174717 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.802827618 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.964785631 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.995626812 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.923191122 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.235187266 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.94902055 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.972663 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.921120909 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.915612633 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.918272147 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.595268095 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.994946763 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046580875 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.696228645 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.213231559 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.818339589 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.189512659 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.972099587 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.370960106 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956717662 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.128096911 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.920261307 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.251951739 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.957877997 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.194780056 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.87373785 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.129669703 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.125286592 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.933049201 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.924282378 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.84243688 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.783562461 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.91902518 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.875977668 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.792203596 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.918384495 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.214936503 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.303903697 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.94578607 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922826074 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.287040726 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.377641803 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.101699316 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.924303359 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.130266544 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045732925 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.837000463 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403333724 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.501909113 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620360199 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.929317314 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.119798703 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.288407386 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.986124268 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.947748678 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.988908199 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.188877441 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.896885578 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.91711104 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.437119032 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.016697436 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.157875748 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.233263658 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.220155198 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.344220976 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.159830003 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.920060827 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.157442126 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.286111668 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.163063286 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.975418892 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.008449794 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.133450339 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.201813846 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.800224627 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.631504962 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.161069932 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.924526216 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.846563705 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.130334575 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.41924877 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.282279172 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.458861927 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.883141628 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.941584061 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402281132 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93576127 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.855167487 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.921008846 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.868916622 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.133813999 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.87868823 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.95267339 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.478600517 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.228131417 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.336039573 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.938334004 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.952591459 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.846056921 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.636461377 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.86999955 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.023034033 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96037662 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.992068176 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.923686141 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.123798048 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.359595005 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.976375138 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.458914289 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.131291257 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223722037 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.195665256 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.234028854 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.881227672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193491216 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.869313409 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.227416937 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.003279507 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.997375656 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.921392244 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.924748842 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192779205 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.289927217 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.315989155 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.950745476 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.301909525 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.025945023 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927113354 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.927918077 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.212568988 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.151797215 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.13717506 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.001300792 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.118106405 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.99561612 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.438321017 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.927966832 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.925909874 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.058928355 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.803835798 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.652712338 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.219742732 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.668953114 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.125287934 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.443874039 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.765977837 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.893172182 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.962149499 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.922483538 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.931904027 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.039009975 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.16332986 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.198205921 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.68662853 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.930044637 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.923455223 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.76927272 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.693690108 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.16179072 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.926752449 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.976461507 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.926430405 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.041823102 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.93278873 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.195653721 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.979037974 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.923209947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.93045787 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.136494503 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.437735825 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939224733 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62389135 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126256513 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.930650797 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.407186801 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.386873303 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.962796528 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.9618489 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.895907522 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182732514 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.450956945 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.892296447 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.916919689 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.150276199 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.927198063 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196228795 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198713813 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.926007537 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.140303539 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.194360156 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207738134 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.936142332 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77425869 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.934747762 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200999076 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98015137 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.925375079 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.934327901 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.923142509 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.699620054 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.402597266 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.085605321 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.301758974 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.760689866 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.684444601 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.928136754 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.928951272 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643914286 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.647482829 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.139188585 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.210280075 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.872756523 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.130166767 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.63054498 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.825835186 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.19293769 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.854807009 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.928022398 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.232996177 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.191663779 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.860374987 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.929853452 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.512868379 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.923990332 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.009809713 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.926988851 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0526492 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.196550964 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.358838359 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.045946016 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.568196691 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.694694649 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.86779168 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.980350966 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.735815362 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.489282469 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.640048572 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949897327 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.94298011 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.852935703 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93096835 seconds)
  done (took 1655.508088881 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.993157095 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.993005305 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.940263652 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.982098824 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.011126631 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.971973489 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.93989745 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.982293123 seconds)
  done (took 57.672564109 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933811628 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.939769821 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92949985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.924374714 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.928235614 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.924786005 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.096927723 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.932490339 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928992343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.931308604 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928005858 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.925398968 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.207477964 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.94142128 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.926500338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.925755456 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.939681405 seconds)
  done (took 75.162728733 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.928158986 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.129287809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.980515387 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.927227726 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.863093311 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.930143309 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.911464628 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97816796 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.932172765 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.150803871 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.222476171 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.929285705 seconds)
  done (took 90.740690199 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.931120613 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.927130115 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927158211 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.92620583 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.926370797 seconds)
  done (took 11.498427898 seconds)
done (took 2170.235592895 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.167704073 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.983348839 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.020703676 seconds)
  done (took 5.861877173 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.074198911 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.12023238 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232642014 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.997077966 seconds)
  done (took 10.286651202 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.185615431 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.304378467 seconds)
  done (took 6.348219225 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.280776501 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.930402922 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.288921369 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.928538439 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.932195812 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.93300783 seconds)
  done (took 22.656978676 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.92959561 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.92880239 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.92950048 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.928536179 seconds)
  done (took 9.574262405 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.926309942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.646660773 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927519115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.94109893 seconds)
  done (took 21.301005572 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112977239 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.0396355 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.067658479 seconds)
  done (took 8.078903161 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.147866615 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.14716486 seconds)
  done (took 7.15381122 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.070692092 seconds)
  done (took 3.929348237 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.957402292 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.199393611 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.415394024 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.453861635 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.54062497 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.647716574 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.22885911 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.156279928 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347710023 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.352344574 seconds)
  done (took 25.159242654 seconds)
done (took 135.874483858 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.270740281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941476776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.128083548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.28196906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.153716115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.130118451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.154581277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.273518256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.953473831 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.945187917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.283953675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.150830789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095824763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939205444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.100500081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.943781371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.14974902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.279373215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.967861465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.207287218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.157562568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.934944553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.12963393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.942349611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.151491114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082238744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.47541988 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947136153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.11780674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.484580545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.082239872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349024027 seconds)
  done (took 170.066975432 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.931117192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930068513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931877724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930935678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.228496932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931904093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933347823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931131608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.128929247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.120810413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931583136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.224004436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931251058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.932267646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.933465843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931698481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.263440182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.931646494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931096387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931479239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.931846556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.073268771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931557624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.091947244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.256404692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.930804407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932621004 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932303701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.933859872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932729647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.933410634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932788722 seconds)
  done (took 209.618112779 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933450712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93417395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.9337406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.933773007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.93400353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933312961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932176976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932369877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.626684967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.616908369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.933041341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.934676187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939217567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.933457007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944576625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933880922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.942773554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.933921303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934342523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.940108231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942908996 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.689248378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.940649499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.69655712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937505744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936883102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.935902475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.933881095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.936640006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.937293809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936680822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934792756 seconds)
  done (took 222.704475268 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.175942125 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.934831886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.936452919 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.98998376 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.937266745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.935882551 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.933346312 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.181934224 seconds)
  done (took 19.890329254 seconds)
done (took 624.14944238 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.226014407 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.62226304 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.069985814 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958070559 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.163951658 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.993022842 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.952738294 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01324866 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.78969016 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.021480974 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.336648738 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.958345514 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.699726972 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.975207674 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.077706003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.008280948 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.2924985 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.599289663 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.086808053 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.593481978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.10823378 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.888924403 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.025809132 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.817889795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.353251328 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.912124482 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.979196647 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.295587219 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.956989502 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.109839331 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.548002837 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.199133464 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.966157623 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.953628648 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.005119406 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.984086757 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.155214466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.961931215 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.072701974 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684020239 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.591878464 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.660285646 seconds)
  done (took 102.536695482 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.948161654 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.942426175 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.94252397 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.943410787 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.95171498 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.943126137 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.943050878 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.943789429 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.943950774 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.942609297 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.943157162 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.951566843 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.942950063 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.951372801 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.943380886 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.944310435 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.942717761 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951662074 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.942471679 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.94394909 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.943583902 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.942792593 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.940286639 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.943685514 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.944931255 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.943744414 seconds)
  done (took 52.439887304 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.939482829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.10154527 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.173184722 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954896709 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.938604429 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.942737746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.966535327 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.944633056 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941818013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.941884336 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.056954177 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.943265703 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952146192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.172755961 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.953929592 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.940648459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940700563 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.940417124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.111517306 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.952860167 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.968611546 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.946712384 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.967390711 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.951784584 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941796843 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940731134 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.943705176 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354848553 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.949632089 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060118337 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.983112312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.973386605 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.328114386 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183790949 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.992528024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.948062947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.940839512 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.06380259 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.946199032 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944182133 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.968628694 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94819977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181578222 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457432708 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.952762408 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.942582736 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.355054119 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.070385931 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.981646753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.953786244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.188766279 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.956164913 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.943070052 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.942648689 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.977530169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954769766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.943041129 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.22790212 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.956010629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.969922854 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.948213661 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942964843 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.117160478 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.949324432 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.104866887 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.949442107 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.948426163 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.943367284 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.183045703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.956066573 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.470754105 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.954331787 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944333982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.06093527 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.11098767 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.377501461 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.95409319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119996166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.348763053 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.976205444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.953676975 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.34138059 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.978801278 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.952536128 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.945046697 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.945119184 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.944774814 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.992596883 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.970524297 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.388812987 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.469898606 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.241352317 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.977719618 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.953746551 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.945722594 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.228153601 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.951203241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.944850424 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.172679959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.478522968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.955872065 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.951097613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.455113342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.957062498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972357629 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.953926907 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.195417369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.956972561 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.994006111 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945201805 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.950982668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.947756043 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.971758594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.952600615 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946042431 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.44554541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.077385083 seconds)
  done (took 240.655388049 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944456176 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.945432084 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94298302 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.943056249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.94739046 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947554057 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.945240661 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.944917681 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.944877197 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.945324454 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.944456201 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.944623495 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.945186113 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.948823383 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.486308658 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.960396743 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.447714744 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.958444785 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.958728845 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.96035234 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.559919146 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.964704736 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.960287785 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.964671687 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.960331649 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.96101816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.965267298 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.005414804 seconds)
  done (took 170.228709434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.960589349 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038359363 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.972555107 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.00874875 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.977138966 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.960621728 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.133372249 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.987911447 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.96688281 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.962095438 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.960787669 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.992124111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.968925143 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05575164 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.998887017 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.066194035 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.066553488 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.97183634 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.962419773 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.963495043 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.00951017 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.975161117 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.992857756 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.025099185 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.975010574 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018664318 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.975127591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.962194687 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.962390391 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.093859448 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.982389755 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.994517275 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.99666737 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.98247858 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080799629 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.079597896 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06634492 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.066645026 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.968803912 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.963163113 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.963470045 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.96342202 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.018626811 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.975995989 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.963452767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077083593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982868799 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.964031481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.963985429 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.96525332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.976374738 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.980930325 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.999008765 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086863339 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.014852273 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.989222456 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.059535001 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.080035444 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.964171319 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.058674257 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.972149614 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.076140227 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.984772559 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.964478047 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.966646221 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.968059146 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.013403124 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.073305475 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068163164 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.973417788 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058760806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.021402887 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.978709977 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.96531128 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.965759923 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.020228547 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074207 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.023707282 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.027082181 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.001933499 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.975198529 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.965642493 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.966010843 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.99221895 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.972623439 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077866889 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.081963784 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.974837373 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.96549052 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.965296517 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.966337057 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.98951694 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028119512 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.005315875 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.072371333 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.005759033 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.005322934 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.973399045 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.980463698 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.971099883 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.999660936 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.974018004 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.977281856 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.236312958 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.996263487 seconds)
  done (took 212.406482728 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.336251229 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.010764727 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.041597214 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.254367296 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.329330152 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.865257595 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.00509458 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.016825468 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.036005173 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.142107352 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.08526257 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.057006829 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.005191664 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.987755093 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.009042607 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.038726331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.04346536 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.350296449 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.208488457 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.51872553 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.011349551 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313452357 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.340015867 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.374318747 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.066827555 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.387447149 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628509283 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.109286002 seconds)
  done (took 65.472247381 seconds)
done (took 845.604188795 seconds)
SAVING RESULT...
DONE!
