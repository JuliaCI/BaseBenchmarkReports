cset: moving following pidspec: 6544
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.559766745 seconds)
loading group "string"... done (took 0.519975242 seconds)
loading group "linalg"... done (took 9.545616393 seconds)
loading group "parallel"... done (took 0.16955729 seconds)
loading group "find"... done (took 4.544989847 seconds)
loading group "tuple"... done (took 2.059411911 seconds)
loading group "dates"... done (took 1.378380313 seconds)
loading group "micro"... done (took 0.188997293 seconds)
loading group "io"... done (took 0.521351124 seconds)
loading group "scalar"... done (took 56.809951147 seconds)
loading group "sparse"... done (took 13.601777001 seconds)
loading group "broadcast"... done (took 1.709230566 seconds)
loading group "union"... done (took 10.508424753 seconds)
loading group "simd"... done (took 3.528185286 seconds)
loading group "random"... done (took 13.056110287 seconds)
loading group "problem"... done (took 2.217392256 seconds)
loading group "array"... done (took 24.136194966 seconds)
loading group "misc"... done (took 1.154092097 seconds)
loading group "sort"... done (took 3.673370901 seconds)
loading group "collection"... done (took 21.72698149 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.675409052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.206172992 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173409903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222547987 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277253987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163821177 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155180492 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168955342 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.659002636 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208677763 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135100843 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415716895 seconds)
done (took 6.227699721 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257991037 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240172726 seconds)
    (2/2) benchmarking "String"...
    done (took 0.187123301 seconds)
  done (took 1.139574184 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075788556 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156521245 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107590506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093297025 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092720444 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107137329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091966376 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108412313 seconds)
  done (took 1.475114225 seconds)
done (took 3.664865022 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.511939045 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873868073 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.52775191 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.179922955 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314276864 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30347842 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263096172 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220752569 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090752889 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08415232 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175753461 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.458297159 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.386173247 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.008372978 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067989921 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092291502 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153698116 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.813247426 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077983296 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108790873 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526319135 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212762406 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114015127 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105695734 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184587574 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131707587 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140012263 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101220912 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667398129 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130464926 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213130823 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082216611 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138805021 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163441435 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211786229 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109194159 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666110352 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198596976 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095903502 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099414013 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675790189 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116329948 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.202738708 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104628632 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068956711 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168429762 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1052766 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091770221 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093441586 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085543706 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165657114 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.457982343 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103837055 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.189719517 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0932013 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683064382 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095934359 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276061813 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126001295 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092380689 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089818228 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085914886 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160309689 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094324101 seconds)
  done (took 20.179433952 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.16645454 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184347858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078078256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155928125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120444392 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09670216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082936724 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077044891 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125571384 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177274552 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13612825 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.175989109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091891804 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090419954 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167194359 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227625212 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123804515 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103232978 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087616868 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105709496 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121321554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094396893 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106535854 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09155879 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168922542 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202658649 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108822596 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121780446 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08860307 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093649505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140910413 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143096633 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08988479 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087309058 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169665365 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121851382 seconds)
  done (took 5.257896494 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.239812604 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103670676 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246704576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197744801 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149725908 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181537746 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17296923 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296413042 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.228971707 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161765621 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126690577 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095816609 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078589128 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079094285 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09458015 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.317397956 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191863274 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169886353 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11563138 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183367125 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114821539 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081048398 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084070756 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103454629 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09559817 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120028849 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321528059 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225796024 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092719362 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.061719341 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083795371 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120094375 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113681775 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217352908 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12334058 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119351339 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112365059 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084670993 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223114186 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117793221 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078204144 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113143055 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131593239 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116076499 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108051184 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124533697 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21712301 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086898274 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110704792 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.041976374 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19365151 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14275702 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101194091 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.269419331 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12638029 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099494805 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109682925 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.793959676 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127069531 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081186806 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077492692 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113415581 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078384745 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453219643 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12531857 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.266764059 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081157099 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154106989 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097304425 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119389252 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084698662 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099839098 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113010567 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085285217 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09545669 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087033677 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078605022 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105895037 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08390137 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112846225 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100904983 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079170079 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147414711 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111019083 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108787208 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122054105 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089278541 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084854026 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12758776 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178428766 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080701708 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088312178 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185714242 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116319608 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113829867 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114051398 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14227019 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088102761 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.268893 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095988082 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083200094 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119433657 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099829374 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126199325 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098868638 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079628983 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09912767 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080115024 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079579924 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158058375 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086814727 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079523075 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105698649 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09246732 seconds)
  done (took 28.418024446 seconds)
done (took 54.565865709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416812377 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081258154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081751638 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09939335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081125188 seconds)
  done (took 1.55131876 seconds)
done (took 2.319798317 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309501642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196676405 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085716671 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188713428 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085693266 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191954122 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182342999 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099524052 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203519829 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08436546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189882219 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086826885 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103857003 seconds)
  done (took 2.801155123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101735508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104686395 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100205954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118857504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085397062 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100343147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117508565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10763809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101044953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110421327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085276462 seconds)
  done (took 1.900315746 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098766521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102521984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090621493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115214746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085931994 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098361177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114267024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105055987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09835599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109850136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085292916 seconds)
  done (took 1.874141584 seconds)
done (took 7.341645998 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.198063434 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.838835944 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189119701 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244338644 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34861259 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295602619 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608769445 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.198692265 seconds)
  done (took 15.821514598 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.197445033 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113463866 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094900786 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089339621 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106875038 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094184559 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089614425 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.11286939 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09440502 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094556118 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089979736 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104605537 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089874925 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094542831 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.109117447 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091508452 seconds)
  done (took 2.499650706 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141498984 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138900398 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096737097 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098235808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111371172 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097805532 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100417895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113769416 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092517752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093951734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100434733 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112687954 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096409156 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09224754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113324767 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117337324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09254943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111507023 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114529006 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113573624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097123933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094423765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111598488 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096273632 seconds)
  done (took 3.405139685 seconds)
done (took 22.498056256 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145393467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10107294 seconds)
  done (took 1.022683038 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162139611 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.178699502 seconds)
  done (took 1.121029852 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109267737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089099563 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136528559 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102709033 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090552372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105651993 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11520827 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105125199 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090208763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090213586 seconds)
  done (took 1.820151251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092731283 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094023491 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12102837 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167126139 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116104905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092617163 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094735595 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110775582 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095361926 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090176261 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111622832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109247899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095469222 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125576433 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095215587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094595492 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115551195 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093957416 seconds)
  done (took 2.701448118 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089580596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091320995 seconds)
  done (took 0.966756525 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092770047 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088526914 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091796495 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107492027 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089093264 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089860413 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10485077 seconds)
  done (took 1.449118652 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521677692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234553673 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.367570756 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071872436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121828122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.446351892 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103296457 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072037915 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091245643 seconds)
  done (took 2.851164783 seconds)
done (took 12.715610754 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090019131 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.240687846 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632509252 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111396983 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089708358 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159120381 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31205836 seconds)
done (took 2.424931715 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348263713 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162503845 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083842534 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090978828 seconds)
  done (took 1.472495538 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081658078 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097529515 seconds)
  done (took 0.973857939 seconds)
done (took 3.242279397 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088364932 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.120662202 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105887355 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088403396 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088917754 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087767691 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106470322 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089601608 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088408655 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087546139 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106353992 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087486902 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.087461206 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.104705199 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086953765 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087226784 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086619313 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105321205 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087121848 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087589096 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103828108 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088369781 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088660346 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087615822 seconds)
  done (took 3.073798603 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108675629 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090088635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108855083 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091541202 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09275346 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109544737 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092426922 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090931291 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109464878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09125646 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092443595 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091824069 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106124184 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093924932 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088634626 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111392069 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093293814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090746545 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106465218 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093547993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091442765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107146038 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092946618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09133408 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109363423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092695372 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090764968 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107658986 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092283454 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092670268 seconds)
  done (took 3.717671584 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093868738 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084838881 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087929105 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114050042 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085214742 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089601391 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103285015 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088237453 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089967233 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087493039 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107652566 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089229842 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087502917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105591967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08962862 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09180625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096456487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106740434 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089186167 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090276318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108911179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088576373 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089723676 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.105607906 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089539458 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08571107 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089364128 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106938786 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089678555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088487807 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090678492 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109509692 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089055762 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098470616 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109834353 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089173375 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09413976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102531923 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089981834 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08599612 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085309082 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106491414 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089807154 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094585664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106561236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089350015 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089355972 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08956672 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106397991 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090989038 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085724879 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105757987 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091513861 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091900846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108722804 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086679491 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084985892 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106816036 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088494818 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086159741 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085012142 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111235815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089508824 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102889912 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11224427 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089773454 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089808576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106922664 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095512753 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091135777 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116220518 seconds)
  done (took 7.644087636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.111757973 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097286308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106860866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090619616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090285636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088880859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111766077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090693206 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089482154 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11289631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08935913 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090573412 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107539459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090392305 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090085628 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090033402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111745869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090133556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08819819 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107363988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089419465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093169506 seconds)
  done (took 2.930900277 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236546512 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096062586 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138000709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119854329 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107273737 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119625385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094130507 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095029441 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1114115 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09841197 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099403705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110324588 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107423373 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098775003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116099077 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10010329 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110809924 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101097458 seconds)
  done (took 2.865278701 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102276255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092260073 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153094144 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091907697 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09154678 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109945527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096845038 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109747235 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109864822 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091782303 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098155863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108309923 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092242205 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091354309 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108824575 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092312475 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091989862 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091103907 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115591725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098076109 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095667108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115656171 seconds)
  done (took 3.05558007 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108924461 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091365093 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126164639 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095271978 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090504741 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089672298 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114017915 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091214668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098862292 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110390437 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091229375 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090602336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123403984 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091590098 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096956402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108937119 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092444775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091987056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108096981 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090753898 seconds)
  done (took 2.809360968 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191876669 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124146359 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106622838 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114722456 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12565598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107921122 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133016001 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106897284 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106894634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136316878 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109360466 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106101707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132678104 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111858383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123069968 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115718242 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113792475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132847455 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106962965 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124673105 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119079696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106087329 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13236284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107387333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106805222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124920984 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107183615 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128193635 seconds)
  done (took 4.171978444 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089607486 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090034443 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088649056 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107116417 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089541266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090321481 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089137268 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107851264 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090523729 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09003189 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106816158 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090511923 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089936937 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088980896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106847375 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090033333 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089352548 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108074659 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090271421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089933606 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089588729 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108350777 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090216524 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090160368 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088934138 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108442122 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090033722 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088928046 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107786495 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089928917 seconds)
  done (took 3.644543311 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102335492 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100271354 seconds)
  done (took 1.015434683 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097548006 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104234567 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090240004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108416915 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096922332 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089646059 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114962659 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097908482 seconds)
  done (took 1.613001972 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163052981 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186757403 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095534459 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119341727 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168897053 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.178674919 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128499973 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.113582045 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090862394 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082941685 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.180698057 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081701245 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108951414 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089632196 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090176231 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116386459 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092050629 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101027898 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117791041 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093302794 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09615529 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11403325 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094342055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102516766 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104305443 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095457086 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094478677 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.119819112 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089128157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092484956 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107900864 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0922993 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095787702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094245709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110372754 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169037618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117760113 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088178544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0917903 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116248688 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124112655 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091977011 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.11299198 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091038508 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093526935 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114033982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095914277 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090923588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101790682 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087604121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092234594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104186464 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092021625 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091967054 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108327974 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0979907 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094826959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104527554 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088395197 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088271518 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088830317 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105572902 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093992812 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09442104 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109837554 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092232121 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09085904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109298779 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0954063 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092008759 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108665979 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10791764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092219423 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.112971595 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097378468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093300483 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106464466 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096442322 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091460381 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109464165 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095790306 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121496711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110717955 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088573435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087631132 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097247581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.11153614 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09435489 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083550792 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11716379 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09458713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092612254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102534599 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090826914 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088286157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112371804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085559269 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092462871 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090164239 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115129666 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098446918 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089707119 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112254888 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097702721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097582318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108538103 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157581503 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10666438 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088954823 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094456673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115052313 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087038412 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091903194 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08957089 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108373939 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087894302 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095280668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109318654 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094489277 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095368854 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112324089 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094502699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09386284 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109676414 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088838243 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095848583 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117083602 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094909211 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094188622 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092417747 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111873066 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092408614 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095017494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107911361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097777397 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08937403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.110350538 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094069508 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097765973 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109913611 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088872045 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091330529 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110514313 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092983981 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09533216 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111013977 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089266317 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085158125 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091623341 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105797403 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094333175 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101052004 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107148967 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095584284 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088745675 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118937805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089973912 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097434001 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112230593 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098563487 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097925462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101804458 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093351199 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095480219 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092454264 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107628375 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093521894 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093167492 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117923621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086814453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096603053 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102942213 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09119174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098767322 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.091921461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.113014558 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089110534 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129630908 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122370552 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098095691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09080552 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110574298 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096478566 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090362468 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.114455328 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09832228 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097722714 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108089701 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093006941 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096726714 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106233211 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096497332 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090018218 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111487491 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086343368 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093376575 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083844389 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115425387 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095279562 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096221486 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11545803 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095560409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091196409 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119359454 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089347178 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096761185 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103239589 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098276043 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103289664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098648583 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117280823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095417803 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09020645 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113024744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101950786 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095113052 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110491782 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095404046 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085953694 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104522613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100284861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095231421 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089161608 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111052907 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098314958 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094601046 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109231093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086624494 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096919747 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124150093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089588982 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092615702 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108011107 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091370747 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099482631 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104025333 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090003799 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095774531 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.114638381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093702738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093184641 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09476569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.117631008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095812857 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094585715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109155901 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102150566 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090613127 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110126368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090550001 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095357514 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087012254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114504741 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094631539 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090328982 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108040501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096953974 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099390545 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117349458 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09195668 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098250597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116912503 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099056159 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090798349 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.127211996 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089792049 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085847945 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107044101 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086489367 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094397727 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088305396 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.116872022 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092131763 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091683603 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115451203 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096369778 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090799347 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117341833 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106265758 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086935364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104496586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091673128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091704555 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107699765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091799482 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095708649 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114014424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098529635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096044876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106647999 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09360943 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099728186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088524948 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119093307 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099459405 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09944332 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107646635 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09751248 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0896238 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116498925 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088038536 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092092211 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110302243 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093988258 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090291979 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109197325 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090291844 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08716272 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089082993 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118797351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091989402 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095997275 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112182614 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092447 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089384348 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108511745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100120179 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091518995 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117603002 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09520448 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087995785 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085867044 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118420462 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09335484 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098800085 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108223727 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097480213 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099608744 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115872486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095261312 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101423906 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121101701 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100468655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098083922 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104819395 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092525378 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097411937 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092312438 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115343819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096625927 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087496781 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113411209 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099915571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0945246 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111216935 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087564362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094517375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117261634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097569119 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09769532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095938119 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112624876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089871846 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095747402 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117489855 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094893213 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09896814 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111926096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100441247 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090733492 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.116329347 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095141816 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087781427 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086411934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110049609 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100476302 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087199916 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115763271 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099076401 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090781848 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109842898 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099335149 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090097511 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095762645 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118021602 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091271727 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102884571 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11384106 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092519009 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098207584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118727794 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087455513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092977055 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110234715 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101758524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091803438 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097109623 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114139051 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099554817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094832976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11669796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098828964 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098045066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106316915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102228108 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096181604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114106907 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092542817 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091512625 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087649695 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113554237 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099394358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090245676 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120909563 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099945268 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090746153 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110239917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09981694 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091788639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119744896 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090994203 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094144715 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105713691 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097158073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093242146 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118497913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091838388 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087146688 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097301862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117770438 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097463585 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095207738 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119531306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0888181 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087612557 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115646044 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092446526 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102625545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115465696 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092861875 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092424538 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09451749 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114633355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1006571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088198795 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110709146 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095398734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094676675 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111613665 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089908386 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097460901 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111248 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096855376 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093259846 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107219514 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093779267 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099456068 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090854578 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110869348 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091648558 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099354225 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112775348 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09316104 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087636432 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118305505 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097093381 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100422349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110052843 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094752188 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090851345 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.114962538 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102204292 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09295083 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113514505 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092483543 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099413933 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097459419 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108222892 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092136696 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103209532 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118541019 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096050828 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095852152 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111995198 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100978782 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099885595 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115254975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088944829 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088764097 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09227185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108400051 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097388891 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098039175 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112791985 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092078087 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098038973 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117630923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097285464 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095914574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107282028 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102886536 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091931115 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095971227 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108436354 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088861163 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095191038 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119635509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094495325 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094165385 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115780143 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097598821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08906191 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091150621 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117858347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097592472 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099171207 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113353411 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093193951 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099124856 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122619157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096693661 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093220043 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120587959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10208224 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095023655 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114192089 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09843546 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100024381 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.116290943 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102380638 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09196332 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09241656 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121756746 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102021962 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10160065 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114894016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088967129 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098261137 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111557238 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089893786 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098263879 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120882975 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102942325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094362075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110783818 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104351942 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100140853 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113267002 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093248415 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092048256 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116690127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094087927 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098612356 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090278132 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.121557432 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102442117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100153137 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122965994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089963192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098755204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116898159 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103579292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095125056 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108558647 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089957031 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097453125 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100248444 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121869545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09900697 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09768536 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118084888 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097293097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093792308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111288873 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102649415 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099172995 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095242584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116147066 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093967682 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095428817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117107895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101490695 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101404701 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114849292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105976084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101347301 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112665049 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092600672 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095286779 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.115710931 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096606302 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099363537 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091750893 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109632304 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100241139 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101812039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112978235 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102706411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101720251 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114085783 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098157749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102696696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119085662 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098354082 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095561423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096609958 seconds)
  done (took 61.221355727 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144341693 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10409164 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117438121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100450759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115360152 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118902104 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098180397 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099264938 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118226253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108455687 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096705035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115497917 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11237944 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115916092 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134966046 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106993006 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117032617 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099841519 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096692476 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097930175 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132687014 seconds)
  done (took 3.218776406 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115169529 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108838732 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128319591 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109954799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102795638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129229669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10860517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127383075 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111980505 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10464205 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132098463 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107783934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124595888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106236507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105888546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12440107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112298747 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103777168 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130459292 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109097143 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104931349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129311654 seconds)
  done (took 3.402614583 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128550244 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099621715 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09449725 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117773131 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100622365 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09644584 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12057209 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098746971 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106066554 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091398083 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109609674 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09343252 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095625946 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116411763 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092159751 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097580539 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125947438 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101766359 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102512335 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097563621 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109133017 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097717971 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097427185 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108503792 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103421612 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102813219 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096948669 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121318529 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089402613 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098646037 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117630688 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092607612 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088634041 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107706381 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089371115 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101744758 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099241359 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119650463 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097679441 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089142484 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.117459893 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102381905 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089143612 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096145197 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118268183 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092592362 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100455026 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116571701 seconds)
  done (took 5.819013023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127809818 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.402408465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102399443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134608371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133762473 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106581278 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100279137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135240585 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098263548 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122585792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113682307 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110394411 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12363419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105118776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099192292 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12292322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10365194 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099795584 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125717549 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10159264 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105132564 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122296789 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110472739 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12798667 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104488921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100730619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121321031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105382341 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109194403 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125697998 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105347382 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105071774 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130014075 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103196432 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099159561 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122776914 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112415521 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.100111013 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.1229351 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099570277 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101566738 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125041324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103043841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111081527 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123360166 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101732264 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100177748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120421149 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10960844 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121749473 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107947787 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111902013 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123779912 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102646727 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103369101 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.13231893 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102077727 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099717491 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123786174 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109833732 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098182975 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124181591 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110575613 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101674918 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127873848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111282089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123417432 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104871168 seconds)
  done (took 8.942872347 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132911356 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105200988 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133249983 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113365157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104939133 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126978588 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10548309 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103726599 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127394034 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110506415 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124448171 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.222461275 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125042371 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110507552 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104468982 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127715616 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10574165 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104318017 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127267269 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105751324 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124423013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115364959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105702851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133278601 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117183313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101463715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127920543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105648105 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133254651 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107784522 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11583453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125508032 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107198356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113155468 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140020486 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105575375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098894183 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127007238 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105293807 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10534958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124380363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114638203 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125122723 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10346079 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104974553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125217867 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115287414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116846 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132565342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111318447 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126031378 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113775732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104779485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125817156 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113877733 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119675946 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135517774 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11305345 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126040954 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114805956 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112805948 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141233366 seconds)
  done (took 8.240226166 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099665267 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098772994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098109751 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119292423 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099102488 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099397172 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098135311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120391269 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099471759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099020891 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119220643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099228868 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10043128 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098566745 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119685197 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099673419 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097875119 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119562662 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098897733 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098525524 seconds)
  done (took 2.966612419 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108387379 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114509899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120799206 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108181536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101366017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126827483 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101559464 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101070262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099898359 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122978097 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109420993 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108138253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123310553 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106163737 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129629609 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107347016 seconds)
  done (took 2.676504954 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120308687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117422376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208137726 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102551757 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124811291 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110186274 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101590712 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125944174 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100696554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106362469 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126368177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104947636 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101216266 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100842421 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123438135 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106057031 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099806902 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126558743 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101867905 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.212660411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105390119 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103742783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125775553 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106168251 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102643181 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129320036 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108820576 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101084944 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124605015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103695754 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103033361 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129247434 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101347975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104800523 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123243755 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103684614 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102979724 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101032193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126987721 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103655235 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103334428 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10264768 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104443823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12187252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103454738 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099454892 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128098475 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105019227 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10309991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101057662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130467304 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106501363 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109783043 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130872165 seconds)
  done (took 7.197931037 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115649292 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102820667 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133590872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101510496 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102421649 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101899389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125340234 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103894493 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102398706 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120813581 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105114142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102906452 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123496625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103843747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103342325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123215346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101559942 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10360228 seconds)
  done (took 2.868889909 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108884275 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102334363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1060576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12294034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102145495 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100190941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122380084 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101999645 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10103139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101472236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123946594 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102727182 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10000003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123235666 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10252154 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101652599 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12303572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103081654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101986012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099963146 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123545166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10100605 seconds)
  done (took 3.270600297 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112698852 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.212104068 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107459262 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.219191408 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098668339 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097196176 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134018042 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099127269 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13646273 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098172545 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097550666 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118518616 seconds)
  done (took 2.426730957 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129376767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139142763 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124918536 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103280312 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111219425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129202638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105982395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106245523 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137407069 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117211554 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127556371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116620992 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114691513 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137092035 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110913875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131786066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108568142 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106896928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12383008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122466615 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106853746 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135525785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107319862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10667939 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128605826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115259444 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135325083 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119238571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107072449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13708435 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111633292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10734653 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137006652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116891884 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123873644 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114947183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106506521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142895165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11146815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136296274 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103929398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111237616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136860955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112708947 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113994007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130105417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111510377 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127603037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108923121 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126945372 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133846355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115666878 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132547133 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116039922 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114264757 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148027995 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117614634 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137426463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111678583 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137943155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115654381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111024144 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136009466 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116851522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133943011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115725468 seconds)
  done (took 8.886649776 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141419618 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102893067 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128230889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12006826 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11456962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129662955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107601209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129174765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108642758 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104589925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171757881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107455248 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11455587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137777023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107966949 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128469643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10950567 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114114283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125425521 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129400299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107132607 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137796848 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114657814 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136803259 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118002809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133212058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109509664 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108490142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129414861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111911273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129368476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116201866 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102803146 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136645115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108265135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107161385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134368165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10686449 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132827123 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116884709 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121588818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129390601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108035907 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139074681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108617318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107745385 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129335954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108765201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104049683 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139862652 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119683033 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140070673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118433795 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107666218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129308016 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107583356 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108172351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129099095 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113491028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116662584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130381183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130080831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129122347 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108213384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115968543 seconds)
  done (took 8.845563245 seconds)
done (took 167.319660236 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173825333 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213289651 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.195174367 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157645615 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094380222 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151911954 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12726199 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.195852845 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095434636 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093683951 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093924683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120760875 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164081887 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093515092 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117836 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096552553 seconds)
  done (took 3.082976509 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182948994 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.332889591 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10871425 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121169729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100672185 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098689291 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121005566 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100419411 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098781466 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127791408 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100132843 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095131061 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127022334 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095382383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09859 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120185314 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106910396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09907358 seconds)
  done (took 3.145026104 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119786652 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14225449 seconds)
  done (took 1.17143225 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128696267 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213850053 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285031959 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17014043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119642873 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140677078 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149577767 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133311395 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189927991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133961544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111288785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096934284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148281277 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104832871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114028829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120263538 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128073937 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135660676 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114164899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1008004 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144507175 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103316243 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104284007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136010915 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179631783 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134349682 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10392296 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102727993 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123245285 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114117619 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106258609 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139970707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111305229 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179796832 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102375574 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176617094 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105729529 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122267858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113642314 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098871295 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125928023 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102065608 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133316482 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099138098 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102535451 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105806612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125024671 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103589855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128584956 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107779142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106823583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128824399 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151688429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131080591 seconds)
  done (took 7.902416289 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.871671175 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13925437 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098695087 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.01826695 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145142005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112259071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.863446361 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146459767 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252479454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.892924233 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115465944 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106524031 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261296865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254392246 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290671075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357614453 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.73216839 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112484402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127830784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162916086 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107177491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143945523 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120201633 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.513480125 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100337543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098673936 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13160058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107674494 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177200082 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099974499 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102665372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195168267 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291353319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209344981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099263457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121283482 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09880824 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181633127 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269916803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218453358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170716605 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119587017 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099496947 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106666484 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142830223 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096454409 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17983354 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189047761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165879155 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12719519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107635681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129185228 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174205048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097937657 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356474779 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357721577 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121182293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108732748 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111086623 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264654188 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123473577 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236046057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126177505 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216380963 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12125253 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829053561 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163247 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122390739 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104457668 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106035257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129376325 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10597386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189318717 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.474231554 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133058064 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104280361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099372964 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232784562 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122982567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10056034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179342502 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102039383 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108837482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134577445 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108571521 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187194346 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268991523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110346029 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108813618 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129790281 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11389108 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121923475 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210320462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226922117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174522716 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226980405 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107545109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178894958 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184361223 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105003364 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187872966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108566238 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13373908 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106877252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224229667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155826223 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10259033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1046152 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13268476 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134203856 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126178316 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109125277 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186197365 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553404182 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16200839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118830386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105963627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10884346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180558905 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106534339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264115544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132393257 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161281321 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13070292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097291845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129240581 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156517855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130591693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109467439 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106953172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132171831 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278247838 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218494422 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109966082 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251593974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197203469 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105794483 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19020135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109154419 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186254668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109796063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105611077 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123973975 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820343219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113707067 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131861706 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105348351 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203616262 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100908743 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102814175 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099758672 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120703464 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814521128 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106641718 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097005062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12518171 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105509065 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107456338 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132474196 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105742033 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17819538 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24353486 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108275407 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129870954 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100747637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17801022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10097738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100190425 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124008088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101238251 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109146095 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128947807 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103870522 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191372007 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174651884 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230638809 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.652545119 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100265238 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098884497 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260745686 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102399448 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324549616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108813411 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.254586457 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159347475 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119762248 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362489267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183273723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182784476 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103254557 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18909584 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097626055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132456715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17674123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100666173 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10639879 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176494659 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111964717 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133250493 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277515086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100994804 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249572026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098736227 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187525147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10079361 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12952085 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326020744 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100135335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13712932 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153272693 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128469858 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101929766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.633189974 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101402515 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133258901 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106272939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232631112 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183489108 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109353747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133834489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109992825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178385461 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227812825 seconds)
  done (took 47.504444996 seconds)
done (took 63.713253816 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267777366 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176630747 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280943459 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178645407 seconds)
  done (took 1.90920018 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269831808 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160604968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254201954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096689011 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.266815323 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097935633 seconds)
  done (took 2.083763044 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17870094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169057478 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147420736 seconds)
  done (took 1.438395302 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200635244 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216504604 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328862293 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233275711 seconds)
  done (took 2.005714165 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294386333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117646892 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124365903 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.236665302 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251657634 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210757419 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12381476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177045572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128376693 seconds)
  done (took 2.648470421 seconds)
done (took 11.019782936 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.312819323 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.430988975 seconds)
    (3/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.325290828 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.254869707 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.142629189 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10913104 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.224590696 seconds)
    (8/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113663779 seconds)
    (9/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.250916027 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.235414449 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.365519588 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.254767956 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.300556906 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.086432955 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109720173 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.144157991 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.276753904 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.426965251 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.399146825 seconds)
    (20/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.21780315 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.228621701 seconds)
    (22/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.180613275 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.210796217 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172478696 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.348975556 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.14413318 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140851318 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120156751 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12886014 seconds)
    (30/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110721571 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.175530743 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173897078 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.157469567 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120443459 seconds)
    (35/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.263836547 seconds)
    (36/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.20689328 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134083337 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123884471 seconds)
    (39/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080688229 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199389511 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.382582755 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111009074 seconds)
    (43/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.132882331 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136290393 seconds)
    (45/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148125038 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086141401 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18956241 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10184955 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.137270132 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.198975313 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097263798 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12830733 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222620565 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084952218 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117934534 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.156808654 seconds)
    (57/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.179767208 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.13286105 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08057186 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127443639 seconds)
    (61/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.159352497 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081237303 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127648626 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109161695 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079408235 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.165308664 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109125898 seconds)
    (68/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109411916 seconds)
    (69/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.131326442 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130698006 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12393471 seconds)
    (72/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112652928 seconds)
    (73/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191252842 seconds)
    (74/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145359862 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.208419668 seconds)
    (76/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134417964 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079409829 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198448028 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146817033 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100687433 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105703791 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.110390942 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123725284 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106045752 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0872241 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.177013844 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109694642 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08771525 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099746944 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134415285 seconds)
    (91/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082790349 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154525793 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129992595 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086067397 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126216068 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105298555 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110357055 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103789059 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121602022 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111848225 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08232511 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188370562 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.113403208 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079768799 seconds)
    (105/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.178866491 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082164948 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137436639 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102715122 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086001887 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.124479925 seconds)
    (111/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11107541 seconds)
    (112/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.175741337 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131443912 seconds)
    (114/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085759363 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.133811854 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.147189948 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130022271 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.135056985 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079336181 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.159875392 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079205368 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102695081 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080035058 seconds)
    (124/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078512201 seconds)
    (125/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.105194594 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079201966 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086027582 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.13458974 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.153526664 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100744723 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123617372 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07928122 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.127114559 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082219642 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103770014 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127150772 seconds)
    (137/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081597988 seconds)
    (138/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10857275 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082535087 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133550786 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082638147 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103581621 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116496596 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136205835 seconds)
    (145/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078919209 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081533103 seconds)
    (147/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.13712512 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128097187 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103194349 seconds)
    (150/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084521892 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080290106 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127602711 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087280117 seconds)
    (154/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108367543 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12413616 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079757736 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083356584 seconds)
    (158/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085499017 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100333763 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106573344 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082044578 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085640567 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1097851 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108460091 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109512162 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125101474 seconds)
    (167/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.143766599 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.111314786 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081632278 seconds)
    (170/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079793954 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079669812 seconds)
    (172/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080249009 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.110415251 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083067748 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153744635 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102925972 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.131968145 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080365973 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113590243 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128080868 seconds)
    (181/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.080764874 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087336566 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103979842 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110963451 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123073866 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101259724 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09971823 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105220153 seconds)
    (189/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080385543 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104917106 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081969647 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128053068 seconds)
  done (took 27.304935623 seconds)
done (took 28.252777691 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225790784 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130446928 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111058583 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110818779 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233104613 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117923324 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152320141 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11371956 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120111795 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137569099 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100877775 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123827496 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136069128 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203460112 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139080793 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104049177 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102603595 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146585859 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128055262 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126855407 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234187861 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105494866 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147126754 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102725603 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232569183 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104305747 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110983226 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137111606 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125264772 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111631094 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13732671 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101828551 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126590715 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151123736 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103690964 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111878041 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101604327 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110080752 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112741433 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112671626 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.147767479 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113496569 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110904713 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127476006 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114300237 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112175091 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102061924 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140097159 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101898865 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111838448 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12968863 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127828497 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110357401 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126204373 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102005981 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103487735 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146212852 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103426704 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124699016 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12787917 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105784996 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102844301 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114316736 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126689792 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112138622 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102915021 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135882483 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114082782 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110707481 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130056592 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103533294 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11028669 seconds)
done (took 10.079169418 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10758321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148558484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233449801 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235677062 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130986352 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144210776 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116358772 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126228397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142277489 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122350422 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14036029 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160163865 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.239147874 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11979113 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119232818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139628289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113244046 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112545763 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236279063 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127332391 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153205785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118470813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155629491 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119337943 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106021421 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165387821 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112005424 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114493734 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131006447 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11679282 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.12680319 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131179627 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110072495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124774979 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147683676 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117679268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11937783 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139832846 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108025658 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107314737 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142843766 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123360148 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.1065774 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144323906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115520009 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12151103 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139084716 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119287282 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107952834 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139598711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108809985 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131894798 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14351901 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124237505 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141511538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119367718 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120394973 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119288024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134473089 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12167272 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106942879 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131162798 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108664188 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127912592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135623926 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121510448 seconds)
  done (took 9.77539111 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126093341 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137132166 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142869836 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117727658 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112153202 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124854114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101699711 seconds)
  done (took 1.855779216 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102985324 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.242137677 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216621599 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242031801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240927233 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.254921855 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125167526 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102759787 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165946572 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113068741 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245279467 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272458285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112923258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145245207 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.222236258 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128426143 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.219686386 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130404586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118021296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.246758711 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119123272 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159798041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1175817 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103462532 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.238875422 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104182255 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.292236832 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147049044 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112881521 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117840897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144147879 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184548423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240698061 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117692712 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137163208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.21864425 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241686444 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144215972 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231724551 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134161619 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215970627 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143164011 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118575478 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117619541 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144285321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.230517556 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123658258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118238297 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143188748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.224024409 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140556106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216429875 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142350632 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118509798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113287132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146598778 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124510568 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119392906 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250902364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14600441 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.218653665 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246573191 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244473146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24671701 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127095585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244640226 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20359429 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144709536 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112776663 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118927268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.248654164 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143425992 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116763209 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236826676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121090288 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248926264 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.248202296 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115382726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115914422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133417733 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116462993 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103781282 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.24007253 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117198444 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142499402 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122827553 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115924469 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143762451 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109458025 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126237112 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143167941 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115111335 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123038184 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142645057 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120348656 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250324171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114912504 seconds)
  done (took 17.036138248 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105922533 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104385694 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108543892 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13046449 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106192979 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106052496 seconds)
  done (took 1.682562606 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141308239 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119318626 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15149575 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119795301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166469113 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250168893 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.25915661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111839582 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165530535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130134707 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25275292 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254212041 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254753716 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1225047 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257791018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120548024 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261043732 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11713501 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125661983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142746017 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118724054 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121975571 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142087951 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245573242 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119692905 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120271873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138939772 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128069794 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.124989436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.139917604 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122958419 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137012034 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136177838 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113599733 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259906665 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111617928 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141121971 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121474891 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121183756 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146490616 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230717853 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142838127 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125553039 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121098826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140369225 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111829474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120772568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138722677 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258583407 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122128458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120835454 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145734284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119465549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121513427 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137886901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113057561 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121346303 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.25788227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121461774 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138936187 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11952563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145537877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114653539 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123534611 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146009469 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122124341 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111128188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1434524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116558604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119425971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146092856 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120741459 seconds)
  done (took 11.797655904 seconds)
done (took 43.134509537 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.525173992 seconds)
  done (took 2.54468256 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.9493051 seconds)
  done (took 1.969064968 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.105621474 seconds)
  done (took 19.158764313 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.436407333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468203185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.14705829 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147585913 seconds)
  done (took 3.220220559 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.829712705 seconds)
  done (took 1.872922926 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302003564 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264679407 seconds)
  done (took 1.595428845 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.721220738 seconds)
  done (took 1.758818976 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.531283737 seconds)
  done (took 2.558970976 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286270341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242449486 seconds)
  done (took 1.569646474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646580797 seconds)
  done (took 1.684266243 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.548746455 seconds)
  done (took 20.591435953 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259007946 seconds)
  done (took 1.304560944 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284671132 seconds)
  done (took 1.331500111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.603194744 seconds)
  done (took 4.649613522 seconds)
done (took 66.839864757 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11451271 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116340319 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116333562 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140135825 seconds)
  done (took 1.522109124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122781648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119019197 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147322597 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1191551 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124351707 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118136808 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143491316 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121487269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117810634 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146274727 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118302869 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116492533 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146402224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118595218 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115941294 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145923551 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12121591 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118588671 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145765674 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120511289 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119414942 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145235865 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122043154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121238241 seconds)
  done (took 4.100833633 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115859949 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108895385 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110495239 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133127691 seconds)
  done (took 1.516594133 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127070911 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129564894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153625652 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125598671 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130846332 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155338261 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11805298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114510123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142445866 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12776252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132852346 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156959089 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130175465 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119673437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154379058 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113991272 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118297464 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154133869 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125910509 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127699572 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144589075 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124838525 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124330114 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152645997 seconds)
  done (took 4.249199477 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194124093 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129608773 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175264867 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163569679 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177653253 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116192226 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146336067 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150540491 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124048218 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119700804 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145975928 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1631885 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150277892 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119985786 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118226917 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149183985 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130876849 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124402835 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190930922 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123291386 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151405011 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13102152 seconds)
  done (took 4.241266121 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121039288 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10909939 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105525032 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134945611 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122053111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111716398 seconds)
  done (took 1.758662978 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108909657 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103777833 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104231689 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129288726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107437004 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103093362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102058378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130231151 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103533192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102623289 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129725398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102865594 seconds)
  done (took 2.380993951 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328949156 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108170251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135111041 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112301794 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114334545 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106244779 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146740905 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107352572 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265636069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103032568 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132017417 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19106411 seconds)
  done (took 2.907685106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203752582 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147021677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256604292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.67737159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162383401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189651719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280497135 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187096979 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207000759 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136428784 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214935042 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1616944 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182280125 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186597572 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166911784 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158746945 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19426329 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237795965 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14173671 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239154955 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156505149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202084998 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215352423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14820549 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137831728 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189718245 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118375666 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155058645 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167659991 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192317055 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204180065 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150721124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139364656 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217393464 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261008802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205559095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270363713 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13394793 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198074849 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189717564 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26033412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168970054 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219563644 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152710073 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127865524 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215204986 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179001448 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18464859 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159857331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143891761 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214351403 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17930645 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197504537 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135595347 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323705608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160683105 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143796066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252250923 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215532208 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200231574 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206798669 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122540894 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20193542 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217935899 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214774636 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169409336 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162918834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152695809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16422073 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231687913 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210636684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159526208 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237528571 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160013249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171682298 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196648264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155569775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234774956 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199660777 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119313193 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179165103 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13429265 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126749929 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216024958 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121951221 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2440165 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133241266 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342875477 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207485431 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155179067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188927746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161087931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19088819 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147714394 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130428474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142082348 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188835996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158888476 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127776653 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182319331 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139305873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.155384367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15147692 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148352069 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169490809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133291099 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193831307 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196248826 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132228108 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205476861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14991755 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.187333155 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169691314 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221518355 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129836174 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161710821 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219673584 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19791289 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137025479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200722243 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224461116 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151307106 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162210375 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165819164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221673129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142427536 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228153516 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137933973 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164622031 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141390511 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201161728 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160330296 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1868133 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12829913 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192457994 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219759566 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128545713 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139813891 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209788777 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132906998 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151440671 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136197605 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163133996 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142375922 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148103159 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168101924 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153308491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194710716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164910229 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185665768 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133583483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199328587 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130488506 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196100085 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148375576 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146650913 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176047161 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227051056 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129256889 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208213637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161325417 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210328224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198745808 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128630844 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210066581 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128879177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119530085 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189436326 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196645828 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162978674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216580681 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206974265 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165847714 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18993868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148669768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197461596 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.213156869 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155605023 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.17072309 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171906526 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199456236 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119159725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121944213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155372819 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136885284 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157894715 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138197721 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209695232 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165763944 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204985996 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193113703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138382704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218997638 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125291037 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188202236 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175234094 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166495589 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189414675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219874841 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179070653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170010204 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16134275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.149055363 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125353369 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.160091535 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161081704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136113953 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162843021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141208301 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21947693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199963467 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148649149 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216793435 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192818007 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201173554 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.148230799 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161302907 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198719372 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168285094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186438256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157475318 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160208005 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219026384 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140936761 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219936023 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195517603 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178879066 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225583604 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192102522 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130281608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147491967 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189829909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137411715 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192225914 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145346126 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15872875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152940076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136116036 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168100768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216069313 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143197657 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207089919 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157623387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201344958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125047209 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17035646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17387423 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175113259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104816691 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199731254 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194371051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179010896 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15526004 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201396645 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128168644 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343836836 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214730576 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177075253 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165062227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138487132 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198391436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161470231 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192269809 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184433446 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170106025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207924427 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199703629 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141694939 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159399514 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148698609 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17945418 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141327359 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179613411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162851378 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171378186 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188607935 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165772642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169985169 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2054467 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143985599 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179004195 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138152156 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253785722 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196046909 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172538672 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193335888 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165339636 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212729732 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122773747 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125359489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161418854 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184503276 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159021424 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177153665 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194616167 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210215403 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200362423 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163999093 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138840979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15830333 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165550665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178675323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213547831 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136426549 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138119588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218581264 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157368201 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131186982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159973615 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316745996 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175965595 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17261494 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106077634 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309873625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12925233 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160047187 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162004509 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19821341 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132750977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211645276 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175280341 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169874679 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163052955 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162395491 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178659215 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210794071 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194241745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178628929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174423605 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161422329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189707811 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174843723 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174603129 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147741316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188016262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192651021 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205343935 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130877135 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197284809 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167821511 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200511381 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203152612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139059967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210107643 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127391077 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193163594 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138371266 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123802711 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190566476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19209824 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129830473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205631421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171256818 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130031253 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1556123 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146833755 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193929445 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139443283 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158308175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185966365 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158073358 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183328622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240176706 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128375398 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195516108 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145339624 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158646994 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137800376 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17105106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132961954 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174640541 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21007303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130854591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207184622 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164084304 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194165651 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186044805 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144170819 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262496567 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157740573 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191095953 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180094221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225756113 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150097336 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202889575 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169438468 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17953065 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164467716 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17679941 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220016909 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19433747 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166242673 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160531107 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142913165 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136715579 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162421931 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151894861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197561202 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141983991 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165521475 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167350544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173570678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148266395 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140526715 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227739283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17867091 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18939851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217614284 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136747907 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204988453 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206076484 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128412174 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193982768 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172670247 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173214292 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15199215 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132934379 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166664999 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24186239 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125697549 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161362915 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203502709 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167263153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201641217 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135185948 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207359911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139681391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206402655 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126743243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181574943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170318553 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163876174 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127467209 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19881017 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161112691 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192542587 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141392255 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176165913 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222823632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122410614 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165721056 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286666439 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189654548 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222553707 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137314637 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135636353 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174840249 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157354959 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193690521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169903976 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159759231 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128903374 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173638039 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15780389 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142274639 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196221947 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211001041 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16102054 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214057136 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134552516 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281711381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143286499 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197507352 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.619835062 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128185473 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16832613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134419326 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140716494 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208862823 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243302886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162962101 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176701142 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134841329 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154844049 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131357259 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164325122 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180130243 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167392951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175134239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104180509 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170341848 seconds)
  done (took 86.367485467 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1607107 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150975813 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167079934 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221288082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194450091 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290986769 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228709757 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24629149 seconds)
  done (took 2.797023047 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11766478 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159184482 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141745092 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142474489 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109527783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.48342786 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159942677 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119306751 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160109982 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152642777 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135561972 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572532374 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115690786 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143988876 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120400882 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135179074 seconds)
  done (took 4.101281575 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.797257399 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541904819 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.107564757 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.281148443 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263668871 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205626053 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.786498605 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20211816 seconds)
  done (took 12.32558952 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.164821239 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158025144 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.450440308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.306545484 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.183064312 seconds)
  done (took 2.412720186 seconds)
done (took 131.715635998 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123428856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123788394 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12177801 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154075648 seconds)
  done (took 1.662064873 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195312155 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092096404 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094740982 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120324843 seconds)
  done (took 1.650636059 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467893232 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092852143 seconds)
  done (took 1.738206397 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153555594 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13711812 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166245406 seconds)
  done (took 1.618080777 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134873139 seconds)
  done (took 1.284857312 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130515417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127248167 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271488111 seconds)
  done (took 1.684383378 seconds)
done (took 10.796063181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120535542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925172336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432606114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133013567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711061395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427395759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422629918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176261137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175645334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138065409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133161715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689271871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43323714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.872373902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.392473784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903551367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703537442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112171667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145657238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113367865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402877353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136732505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112788728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111975417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.725137447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420827442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109903628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.92037616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11069597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114279226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427510265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111429545 seconds)
  done (took 21.0084662 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113012356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168375837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147069768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113636654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113871362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139558175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123201516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122382789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205254264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110240306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16154649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110596363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117270109 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136740397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137525181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110747493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113152769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142489257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118645322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112958637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160933002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110491919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111421221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142074634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110454126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131852576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139885987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1238449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109601967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142503649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119171975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110858193 seconds)
  done (took 5.292285422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159544373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178936349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148389025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150137529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189379036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113545106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224576758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151135982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205673642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112609295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132679316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138716281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152563168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112151732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163674058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111952998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113546165 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141280205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119382515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113623026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161954391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110825888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112404204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140948368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111699897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13345842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139211201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123957292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10972375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143158971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117023745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111015535 seconds)
  done (took 5.610388142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124876773 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127010674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132458392 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162680754 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121123207 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123991381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155673055 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121497609 seconds)
  done (took 2.23244597 seconds)
done (took 35.298682734 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138744121 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131215388 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132338076 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155497696 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.255534479 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119256183 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128301571 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118226681 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154919874 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131669559 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110282679 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148011837 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131788139 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122041826 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258346034 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126663882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262803104 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258000977 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119035288 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125016012 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.14951694 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232242854 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155432601 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119656773 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250150785 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114343874 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249322228 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122101133 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122495761 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112293392 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.25911182 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154783876 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120569371 seconds)
  done (took 6.440591709 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242848474 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151790142 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121114068 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119616156 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121306966 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150148371 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245950718 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150566242 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119761784 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119432189 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150594218 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228213556 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157179365 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116296665 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122518628 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110928446 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279101819 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.1223419 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144434528 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095078435 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116376843 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117893421 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.289263008 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.146736929 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120306641 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119236612 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122140156 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155495007 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121699741 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12065045 seconds)
  done (took 5.673563274 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125339778 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133145383 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137685657 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21828433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148389052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162424158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139818905 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133368843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17209914 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114485748 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128457214 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180646109 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129886202 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123710512 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1431794 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131957215 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136163877 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14402287 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123309528 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130208317 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163805531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131654228 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136410682 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151571945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112932977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120869102 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152447821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125008387 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121730301 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156279489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116567876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117716521 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115922721 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17788153 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115357495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156640733 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140525742 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126549266 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154546493 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147667927 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116438212 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143924904 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141302922 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167982108 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144135817 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128182108 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126278843 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128458192 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143810319 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133208382 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184677748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11488824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134726583 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141466858 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11341059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123560828 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11390616 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146477365 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129783231 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115090021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167618718 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120812692 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124312001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144860776 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124307983 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112722226 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112567906 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147444792 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139947406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121031187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180976398 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113850382 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124289604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156384956 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125621607 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125457781 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142467267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125465211 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124347622 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147828521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128525718 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117143499 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116473845 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160157455 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13425741 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157031389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126241412 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126402939 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117384001 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145275992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132569466 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114710548 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149396464 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127890567 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114013717 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146830616 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127222368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125526677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140423296 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141141885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117865114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112783975 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169810153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117172272 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118411628 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154525613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154555629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113796891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156345255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127277606 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112959579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151906889 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11889188 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11273818 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161915633 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130939943 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120825269 seconds)
  done (took 17.056160251 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.358407641 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342922022 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188310555 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.431601163 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127340734 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.275554028 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.341880101 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345678047 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114456734 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179886748 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176215852 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.311894143 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115063864 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175418496 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.347158021 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406062546 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176199856 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150104711 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180760155 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128786506 seconds)
  done (took 6.060866525 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135529046 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149102949 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167016747 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141376465 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.1244162 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160734023 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115207924 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135773036 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155728069 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124241985 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116172156 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16010807 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127586709 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130226567 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159793628 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147587551 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1221179 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148681526 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137390134 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119100192 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132719628 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141375548 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123274041 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165506836 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133966172 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124610768 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141503593 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121081496 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121044566 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122694192 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148299583 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132661465 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150699837 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107261543 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126578237 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128989303 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15212844 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118603456 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119378855 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147581911 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129809716 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126812369 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121404559 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13062522 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133469223 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11164723 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128880497 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156455717 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107855839 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132910377 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15701196 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128786416 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12169382 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165396882 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122651671 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129628818 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155136681 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12972382 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118436653 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141701269 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114457761 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118112839 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122987879 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157769513 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125658705 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13363949 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159120303 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114557154 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117954525 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147414433 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118371379 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128160316 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163185986 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124345783 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120429935 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155990675 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122982479 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095076131 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124628456 seconds)
  done (took 11.753107096 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139578237 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125865077 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132495082 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179559636 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128627397 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119987243 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154569787 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135301757 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128398123 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162801428 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130118791 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128463529 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166842706 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125731887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123525106 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160593442 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129572119 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151832805 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163130223 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142755759 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128380789 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151732782 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127138083 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124855366 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173722219 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127491269 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141089945 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158486873 seconds)
  done (took 5.167479933 seconds)
done (took 53.313922594 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.331744996 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.52111541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.299102106 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.296644475 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.317854074 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.298684173 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.297885172 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.313821585 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.872814447 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.272887193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.298363077 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.295805166 seconds)
done (took 29.610432925 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.390056752 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.81407271 seconds)
    (2/2) benchmarking "String"...
    done (took 1.586042761 seconds)
  done (took 4.587037454 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.287604694 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.286178412 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.542156915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.286343006 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.285995716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.287637922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.285185841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.288309962 seconds)
  done (took 16.447741475 seconds)
done (took 26.899755385 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.322918099 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.483573012 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.553530521 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.267953891 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.316552486 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.288333062 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.291527021 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.314713748 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.295083436 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.266335787 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.693748049 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.544076755 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.288662636 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.66507155 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.278402319 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.288911659 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.3032621 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.542185673 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.286584525 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.31705792 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.264187733 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.266244673 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.298738319 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.286996574 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.292991818 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.289047797 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.305403364 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.28635908 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.478300894 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.317306164 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.317883253 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.290715094 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.307060868 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.291921574 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.30216943 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.297280812 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.494400678 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.294143192 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.272348247 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.318331916 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.482528805 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.307531169 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.289678946 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.316075301 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.266617162 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.321512315 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.275564461 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.421707103 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.311836109 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.293678027 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.317107887 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.69694752 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.296257642 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.293772849 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.288386445 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.516215328 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.307383977 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.343315912 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.316756037 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.296498748 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.288452764 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.30651963 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.356596454 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.290638451 seconds)
  done (took 149.269104552 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.288829822 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.293008562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.293204472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.356105099 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.292329766 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.293520489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.290283072 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.289128098 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.292628048 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.2947665 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.294620133 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.290585626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.293323892 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.31489426 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.299933727 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.300604753 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.289983634 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.291573827 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.315829111 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.29106717 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.317176498 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.295980302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.307308925 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.290760778 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.292614731 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.364949054 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.320527029 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.29760648 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.305416199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.291398004 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.291902493 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.342057097 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920307321 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.141304912 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.300898341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.316261517 seconds)
  done (took 83.553346886 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.291730085 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.29140111 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291249425 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.325802418 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.290971935 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861255237 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859581573 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.271682287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.395133522 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.690061112 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513206293 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.290750942 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381773842 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.302866588 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.291665582 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.306503304 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.317307907 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294002932 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.292439477 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290676578 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869760269 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.306141439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.465578918 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.305827484 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32191015 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.683797907 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.500309717 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293719995 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322413469 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.622599215 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.33898212 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290677243 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596362255 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.937277427 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405427966 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.292379475 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323403995 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.290422824 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.572667237 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.291784356 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.290680855 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.29359988 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89987197 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.290391949 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.849094285 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290984823 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.244260028 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.29091764 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290238698 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.268821786 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.003550786 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293548696 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.289725402 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.292481606 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.288903043 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28896363 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.320192939 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.270499419 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.383803184 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.290322612 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.293546288 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320688161 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.290201222 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.41466431 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292589496 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.59991168 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.346083687 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.38581516 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.846708695 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292890083 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381441166 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404194172 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.290660196 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.289658278 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28878697 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.287972583 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.39819486 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.288167668 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.288520733 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.960517682 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.461512491 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.306792803 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.60938902 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.389337059 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.288726507 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618769341 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.29097384 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.289855218 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970891376 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.290398915 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380812768 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.288614832 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.288676785 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289941951 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.962019383 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833298797 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.530228645 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.294360203 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.850543194 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.292733811 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.289465366 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.137323764 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.828778708 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.882968427 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292009962 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397965924 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.462791281 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305952995 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.290277259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.600886055 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.293970293 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.346874557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.290852382 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.691334765 seconds)
  done (took 383.408180132 seconds)
done (took 617.417854857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.133249629 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.083286168 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.226303515 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.095340976 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.076948512 seconds)
  done (took 11.802057091 seconds)
done (took 12.988032957 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474787659 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.473368227 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348522276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479342644 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323588189 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.491480578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457653021 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.308615462 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396303032 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367099398 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397114531 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340921363 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324991877 seconds)
  done (took 19.372923043 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570534254 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.300180124 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356336262 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558120513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.336632357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.597142098 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.608018971 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.300682673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.454557371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313167466 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310773681 seconds)
  done (took 18.894799848 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.574313296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.301801549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358973986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547652013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.336945296 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573326503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.61559779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302078265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.457939371 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313088427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311615297 seconds)
  done (took 18.883846683 seconds)
done (took 58.340795519 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325971791 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384751744 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.324840256 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.307652286 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.308808668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.307546107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.309774401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.308963453 seconds)
  done (took 11.766456026 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.305767181 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.305660674 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.306550176 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.306654462 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306166667 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.305425891 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.308407552 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.305577538 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.306541502 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.307053173 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.305427071 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.305098272 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.30630686 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.308740211 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.307929937 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.308150161 seconds)
  done (took 22.094061923 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.307422908 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.305575177 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.305821961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.305213892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.307969765 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.308093808 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.306999444 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.305288039 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.30709473 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.306929952 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.306661459 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.308181883 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.307971502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.305906865 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.306310345 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.309993685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.306234965 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.307689674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.311566484 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.307387116 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.30531026 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306244174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.308316479 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.306630918 seconds)
  done (took 32.560707542 seconds)
done (took 67.607972765 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.292547844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.309938874 seconds)
  done (took 5.791810531 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.364493075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.364428141 seconds)
  done (took 3.919108493 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.30788213 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.30977307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30785145 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.306197681 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.308108199 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.307554132 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30748299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304612059 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.307607892 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.308087902 seconds)
  done (took 14.263391379 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.307507761 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.308723854 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.307006828 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.30778767 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.30824315 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.307918406 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.30880433 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.307220104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.308122784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.307890491 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.308564999 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305562256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.306857935 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.308094166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.306181604 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.307000854 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.307240054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.305861764 seconds)
  done (took 24.723063239 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.320348301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.32560438 seconds)
  done (took 3.833897621 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.433295098 seconds)
    (2/7) benchmarking "second"...
    done (took 1.349050387 seconds)
    (3/7) benchmarking "month"...
    done (took 1.41226617 seconds)
    (4/7) benchmarking "year"...
    done (took 1.404797612 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.349346783 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.32806576 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.350901638 seconds)
  done (took 10.817870559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.294528674 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.572023807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.754114868 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.442302554 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.286076284 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.304632617 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.27421783 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.308629419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.308751749 seconds)
  done (took 14.734411474 seconds)
done (took 79.27227115 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.304749681 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.335849295 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.309137095 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.311296724 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.650782105 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.340346725 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.29796356 seconds)
done (took 16.739821992 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.281882422 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.275922971 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.281181036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.303717268 seconds)
  done (took 10.331482429 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.287184099 seconds)
    (2/2) benchmarking "read"...
    done (took 1.620989463 seconds)
  done (took 5.097283698 seconds)
done (took 16.61775351 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308471718 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.30868758 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.307384581 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.308377543 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.308039677 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.307659312 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.308151025 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.309851416 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.307304695 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.308167709 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.306305623 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.30734793 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.308334767 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.308055669 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308644311 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308551194 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307622921 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30758605 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.307740057 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306355821 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307746212 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307821228 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.309892983 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.307463107 seconds)
  done (took 32.583799019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.307582743 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.307985322 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.308658545 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.30825741 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310333167 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.308964041 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.30776077 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.307732137 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.30941034 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.309250754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30720314 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.307865496 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.310905216 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.309669825 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306635728 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.308425239 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.309667941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308662397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308739977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.30936125 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.309610107 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310018456 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.309394578 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309169056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.309651527 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31050103 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.309161195 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.308437212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308723616 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.309491887 seconds)
  done (took 40.457271549 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.31354981 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.314786783 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.308057203 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.310206174 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.310699523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.308494752 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.308958527 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.308976373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.310679546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.310637251 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.309680594 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.309164372 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.309765945 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.30805199 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.309726083 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.309855971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.308379995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.309153757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.310330526 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.310938406 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.310791649 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.309129111 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.309850581 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.310466723 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.31016981 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.310654239 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.309914081 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.309187555 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.309730822 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.311844959 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.308333735 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.310714044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.3107206 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.308600035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.309729625 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.311911146 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.314484958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.315453055 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.309878292 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.310443992 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.310295563 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.310299765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.311801363 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.312712537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310162229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.30950821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.30943243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.309732037 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.309705844 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.308547912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.311881441 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31018692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.309060415 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.310714743 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.31132961 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309759399 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.310206587 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.311376458 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.310913537 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.309754103 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.312140343 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.310609401 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.311700792 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.311469895 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.309981621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3119907 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.310832115 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.312137222 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.312884057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.311184329 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.310415194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309471577 seconds)
  done (took 95.545784475 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.311495318 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311134196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311737624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310842352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311043355 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312576082 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311875987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312579946 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310454611 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313214512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31258163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313310961 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312417668 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312345148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31319289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313830857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312997943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.313756756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313775195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312694816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.313086739 seconds)
  done (took 30.068956449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313356551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312171016 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.312995439 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313077935 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316359612 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312464022 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313388293 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314497269 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315325533 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314007232 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311790256 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313944702 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317854166 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313876303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313114092 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316001516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312486182 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314942912 seconds)
  done (took 24.845384668 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.31478939 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.314169644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.312344862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.312092295 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.315181906 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.315673469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314095878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313319924 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.314473272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.313442591 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.31443189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314826787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.314167465 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314563197 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313740947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.314060002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.314238503 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313053748 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31570029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314764723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314523299 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314826906 seconds)
  done (took 30.107630002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314641862 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315183392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.31512064 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314348766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314071198 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.3141881 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.315187426 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.31444007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.317353015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.314937271 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316599229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315662823 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.318058546 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315592146 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.314445798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315821152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315509832 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316936638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316690833 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315119223 seconds)
  done (took 27.505613266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317497294 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314950137 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314851373 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31560638 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316063857 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315413621 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317576371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317513861 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318112931 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316732156 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.318571007 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316125307 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317551421 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31905232 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31700692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319339453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318631494 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317120758 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316720801 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316390055 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317730791 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316293195 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.317591461 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318106133 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.318883867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.319235551 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319439817 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3181469 seconds)
  done (took 38.08232158 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317876633 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317656269 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.319196681 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.318508798 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317520964 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.317701423 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.318655279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.317192454 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317464724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317319021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.317860598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.319114527 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318763807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318163193 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31779683 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.318713857 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317905286 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.316644509 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317367238 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319621406 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.318611764 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319441657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.321212962 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319063167 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318060032 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.31790147 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319346154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319249719 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31862175 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318400996 seconds)
  done (took 40.749140949 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.338804186 seconds)
    (2/2) benchmarking "in"...
    done (took 1.33696929 seconds)
  done (took 3.875233225 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.320607388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320750244 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.318709236 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.321016422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320520393 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320172275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318611121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319078869 seconds)
  done (took 11.758759557 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.311753189 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320571947 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320961964 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.319692997 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.320868911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.310907584 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321412611 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.326127484 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.313027198 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.313570994 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.317269874 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.318058969 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.317523902 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316688069 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.314468358 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318624399 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.324519931 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.321049081 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.32380442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.321911751 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322184145 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317324347 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320575144 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.325217399 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.313902051 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.323048209 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.32333677 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.326681447 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316078035 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322223983 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.318602735 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.326626582 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.323816128 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.323543053 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.323793814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323742639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323739276 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323604915 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.324464036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327031671 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323798567 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.323710082 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.316989225 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321253951 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321179692 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.328557474 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.324190562 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.324871181 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.316388587 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.320376326 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327357514 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317562583 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.326899174 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322068208 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.322671463 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.330442715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331614503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.318620521 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.323002679 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.326526561 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.333574113 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.331001547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32305453 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.331145647 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325060564 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.333102219 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328734062 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332996025 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.325942364 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.324847224 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.325910751 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335184293 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.332821183 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.332808187 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325767274 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.327789474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321246207 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328433731 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327669341 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.33031418 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.333208615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32750266 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325672812 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332264055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321008841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.331843925 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.327078888 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.327960112 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.319670049 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330619088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.336857347 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.327828144 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318219765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.323529197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.324412679 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.330446401 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.319131606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32222072 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.331238395 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.32613318 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329231636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321969684 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.32954753 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332008128 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327593171 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330061658 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.33690918 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321901523 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.332480365 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.335461111 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326388027 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.323222851 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.325740016 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.333335167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322356659 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.327675293 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.335012795 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.325297664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.334567907 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.327972691 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327190928 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.340459793 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.334705217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.328986423 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.324640606 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.335779814 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330231767 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.329716084 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.335739368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.328939007 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.331423291 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.327931762 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.335802472 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.325055873 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334504474 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325045034 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.332995521 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.329491086 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.330900376 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.326107677 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.329794556 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.329970401 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.33007683 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.332355826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.338405312 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.328602456 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.338668427 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.329946681 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.329742134 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.331018894 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.337089242 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330968713 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.324808288 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.33577041 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.321699676 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330965672 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.322302217 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.332742647 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329635283 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.327613528 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328672007 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.319339102 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317864146 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.325083977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.319877928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.320856263 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.325757081 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.321520745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.323842471 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.30556455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.313131019 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.304524982 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.307670617 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.317167875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.312212647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.314401282 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.309136724 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316141976 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308818713 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308789697 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.303825624 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.309082702 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.313601169 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.311193506 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.315778934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309140089 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.309340985 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.301157201 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.301991405 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.308982861 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.301901202 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.313679897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310820266 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313650267 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.299494952 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.306683722 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.29717053 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.306115932 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.303702236 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.311565374 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.303247107 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30239942 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295394521 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305831871 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.297892322 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.306317831 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.29601038 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.303257763 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.301589696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.29980358 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298840854 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.294559087 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299071388 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.303054875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.300499619 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299220388 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.292491077 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.30244828 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.28944611 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.294005591 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.301796571 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.297646751 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.300338617 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303002273 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294369602 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3000755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.297379433 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.292129862 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.299916429 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2955688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.297422021 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300618459 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.295291017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.289532795 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300148292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296713776 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.289129699 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.297798548 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.300805774 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.291644369 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.286514861 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.29867901 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.293280821 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.294602341 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.294080484 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288583158 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295782043 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.294310115 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.300643213 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.285249545 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.294619565 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.285389112 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.295118217 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.287812434 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.292344802 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29126898 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294818809 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299990542 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.291821603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286405831 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.294908881 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.291133303 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.291692064 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286035716 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.296503797 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296345995 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.293873233 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.290542258 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.289884071 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.293881889 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.284797066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.294491494 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.287003597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302295748 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309364914 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295736839 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.296949361 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.295794011 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295250086 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29671736 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.287838554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288903509 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291293147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.290278784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.287895456 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.296081254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287646649 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.296636256 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292084673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.295817492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.296270339 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.293910489 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.287572214 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.297947632 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294146534 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.295049878 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.286218556 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.296018955 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.290261766 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.296292882 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.29572488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290841063 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301119585 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299758016 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.294264642 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.292505854 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.291114951 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.290053276 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293926029 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.299295443 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.289998535 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.29879009 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.289599432 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.294574285 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.290990497 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300785549 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.30559237 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.289696366 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.299744669 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.295231713 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.287013691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.289813607 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.297191343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301446682 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.306817549 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.289436461 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.297522813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.296458276 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.296989229 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.296383941 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.29685155 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29780084 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.29765325 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301914086 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302642287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.292136216 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298807666 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.305334822 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.297324122 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.297598728 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.289888081 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298644399 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.307470495 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.291477047 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295150363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.292884364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.29931301 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.295739925 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.297953263 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.297621613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.296506287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301063346 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.30241747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301173778 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.29687933 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.301733594 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308211051 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302536512 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.309621161 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.292407086 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.302865317 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.298225693 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.292937792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.294812601 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.293912445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.300976147 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290415485 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.300757248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.298178445 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.294717815 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.299008732 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306144896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.291135103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299780772 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.311800678 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292063201 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300934888 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.298946956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.292023222 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.30155168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.29913483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.291054731 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.294660297 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.297688656 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303616573 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.293516256 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.30252183 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29394709 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302380906 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.300454565 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.299976349 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301146704 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.30131613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.29330156 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.302478319 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300581783 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.311124673 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.29597041 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.301379404 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.296350086 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306142846 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311473932 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.296732575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307246036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.302206159 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.29522584 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299410472 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.304959874 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295524673 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305303382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.293862513 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298252131 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297775587 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.304521944 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.305093827 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.304158546 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.294977666 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.297861711 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304953667 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.303840378 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302749334 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.298775447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.312202515 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.289444723 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.288146274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.297363761 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29066409 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300413943 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289490654 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.293210218 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294880238 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.292881572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.29123422 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290349573 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282128606 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284772062 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296963891 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295281382 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289649109 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281571044 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287173071 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.279415818 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28340512 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28365987 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280761748 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281552682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288921351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.276260365 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278366739 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278076768 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286527579 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286496897 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.28583125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278856337 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29273541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292888175 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289814321 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.276105741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279938564 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279252271 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.285409025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.284552976 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.278050731 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291932845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290696044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288018108 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284434043 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28469824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277189402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286643315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285227922 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281907527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.291407544 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281378573 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292587386 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285691216 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284119787 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277636686 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.278903378 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279597912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.283063849 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.286907399 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283817586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28910282 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283114642 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290163063 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285322889 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284254334 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285591822 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278225237 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287056138 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278971578 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286925617 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.288217401 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.279832522 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289041199 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286559824 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280935803 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285117444 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290007726 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286729219 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279146212 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285751192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29047391 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297609916 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286906871 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280606631 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.284718309 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.290940539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286814115 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.287454817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280543686 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29669041 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301197174 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281362857 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.283957142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290782754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.298211002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287213733 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287862287 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.284031778 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286284312 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291420631 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289154716 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291846168 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293660009 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283797122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.289819295 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281378798 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284615616 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288790262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299281492 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.288480497 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283040029 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29730891 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299937128 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287108469 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307312458 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294930798 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289704126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.293116343 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282060285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290885748 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.285643733 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292807383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.289027889 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288745642 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288606706 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281041581 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290490091 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.297012147 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.298635415 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290651693 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282574205 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285540516 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.291059986 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289278095 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291477169 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289905265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289790217 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.291106394 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284593175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301350081 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30525757 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.296330004 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.290421881 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290211298 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.291820436 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294252007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288812634 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.295326473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291517047 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290310332 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290484168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301033585 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292120022 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284481265 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285987158 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28713758 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293332421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.298451736 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311023206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293378728 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295650333 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293185743 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292706422 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286528845 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29459484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290753387 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287134429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288592718 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294763204 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.293136704 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.2934367 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.283086059 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294070008 seconds)
  done (took 778.034075163 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290833007 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28941841 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289634753 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290681657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291061425 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286114362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285899328 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286941935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28524272 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285429264 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284665879 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28451469 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283029891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28186549 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280185416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280628785 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280449588 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281248969 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279468434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28038541 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28094952 seconds)
  done (took 28.154694578 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279198672 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279389348 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277652925 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277666555 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278401729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279445296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280351609 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27852397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277499491 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277301715 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27854552 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278522207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277737899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277944568 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277269441 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279468703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278773772 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277987118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278476717 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278730066 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277574015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279725968 seconds)
  done (took 29.29126897 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277908959 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278957591 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274051299 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.28186447 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.279115798 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.279203966 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279202935 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.279723884 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279117673 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.272089927 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27374363 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.273957339 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.275722201 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.284152943 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.276701137 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.283675428 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279013338 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279367565 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281582155 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280431319 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283506579 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290887097 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281364278 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.272058079 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281424275 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281443566 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.280397383 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280041895 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.272084379 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282551243 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.280405201 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274057297 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282537218 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.282535606 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.274382216 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282245782 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279472872 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.280350628 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.281544518 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280249197 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.294466405 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280951167 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286019327 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.294811745 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.280970635 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274753917 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285906247 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281022815 seconds)
  done (took 62.618326545 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282373538 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282746514 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281988234 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282995248 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281381662 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282062871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281355425 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281696423 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281868263 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281946294 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28441214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282293235 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282178994 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283325084 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282306124 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282380674 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282358409 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283463755 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281497517 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282142567 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282634061 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282260337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282243144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283320345 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282959725 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284161584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2841049 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285007804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284909314 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282847028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28324176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284944766 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284965302 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.285077355 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284112516 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285562111 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285029998 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283694352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283582563 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284930028 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284497456 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285686261 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.2845331 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284555217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284748477 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284497551 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284556677 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284760596 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284815062 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286651796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284839541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284053495 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285261728 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284310413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284652156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284878942 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285785545 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284436582 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285306273 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286232289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283902124 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285928317 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284619774 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28501668 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285222335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285586195 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285622771 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286230906 seconds)
  done (took 88.478088855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286893905 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285712092 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286532235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286496354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286599957 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287787694 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28655312 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286994222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287497211 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28663595 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28659688 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286134301 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286830849 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288707865 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287071152 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287599009 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28739294 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288104107 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287253601 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288889299 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287464381 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286895595 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288190003 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286983058 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288824754 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288677622 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287722933 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288139086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288328586 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288311531 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288056067 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28788247 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288987501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287037034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289041244 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288966618 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288666513 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288187216 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288586195 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289840201 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288416544 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289875165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289527065 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288779625 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289599271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289442479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289556124 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289659221 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288196663 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289266488 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289871086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288873782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290197095 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290077905 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289563041 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288314208 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290695363 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289280316 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28942378 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290458488 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290377654 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29065474 seconds)
  done (took 81.050253915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289353051 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28976434 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289741291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289909066 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290647011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290633243 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289898591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290084307 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289376139 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291545821 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290965306 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290922692 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29229363 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292159989 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290312203 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29192326 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290924112 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291841727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290845764 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290860545 seconds)
  done (took 26.989301655 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290354513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291628314 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29021429 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29105053 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292104639 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292311267 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291245185 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292069175 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290522216 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292070399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29054969 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292006459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292451407 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291762617 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29288048 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292808837 seconds)
  done (took 21.84195612 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29250615 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292877273 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291539198 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291868621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292654145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291593265 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292288064 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291810376 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29316654 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293873829 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294538176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293587023 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293455968 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294034548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29296419 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.2943515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291779815 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292530928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292499172 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29405355 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294550825 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293357816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292272845 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293208952 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292951145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293618064 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294210122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293735067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292998549 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294369373 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293713412 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295978696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294905695 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294180856 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293963229 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294791837 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295236859 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29433334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295941226 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29481338 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293675081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294096021 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295419127 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294677197 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295020577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29749664 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.295294094 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294888784 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295113671 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.295794939 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294823656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295612547 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295686945 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294678623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295462649 seconds)
  done (took 72.347502346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296474356 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29635177 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296225086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297078083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294684472 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295524778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296283338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298150589 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296160061 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298126616 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296418065 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29823562 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298205105 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296565252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295374901 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297388433 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297371705 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297959744 seconds)
  done (took 24.521928456 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298369598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298394238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29710065 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296818997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297868769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297958587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298206267 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297836171 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297316157 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298555261 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298295709 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297776993 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297342748 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2984403 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298527251 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298730799 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297663271 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29774278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298138836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298428868 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298783189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297876754 seconds)
  done (took 29.73709674 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.289444819 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288374753 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.289464442 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.304397008 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.3014478 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.288247907 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.289930514 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.289964046 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308956654 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.327356262 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.320284624 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.302698113 seconds)
  done (took 16.783386683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299677357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298633559 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300356752 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299416703 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301196978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299681454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298564534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299431848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298845938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300488684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300130698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299039703 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299548167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299659656 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299753552 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299632108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299879352 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301841001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30031443 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300688642 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299611866 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301692804 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300880033 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300957398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301733578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301823813 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301794895 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301060575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300423039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301604138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302328451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300814496 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301490021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302430952 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301257246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300880788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30126933 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302210621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302030871 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301934581 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301263918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302323621 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30268251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30138789 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303383011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300819212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302759582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301260481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30180219 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303764476 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302750713 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302252401 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303020859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302729217 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303552843 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303764388 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304056113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303893105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303472845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302773176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304259718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303732824 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303609464 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3039261 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303433377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303510401 seconds)
  done (took 87.08585574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303942268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303650816 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302863034 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304385626 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303096903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304836013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303776178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303107669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304441161 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30420945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303882034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305010341 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304201851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303785756 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304079372 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304020836 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302906402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304142588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305352386 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305590875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30440812 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304930392 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304736422 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304352613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305807982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304524816 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303990763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304288233 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304355592 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306040249 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306325031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304792498 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30512239 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304781165 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305499232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305453898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312567629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304848155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305184857 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306389946 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306060908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306110523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30516093 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305877918 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305871082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306380982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305083366 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306444241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306679922 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306736619 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306506379 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307327745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306062434 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305623193 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306471472 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308251702 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307023003 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305746203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306262797 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308116663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307556013 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307625869 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306897883 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306736982 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307427135 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307938712 seconds)
  done (took 87.349889653 seconds)
done (took 1811.051772462 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464361359 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416924162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296931048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.314292493 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298444292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.297678808 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311790183 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297242313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298486706 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297740641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297653318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489368341 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.333112918 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298179144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298488653 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393842021 seconds)
  done (took 26.593876824 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321371659 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311364885 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.411567272 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311224828 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.328352078 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.480576782 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363807846 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309281586 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.465602879 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329435883 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.308473282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327841232 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307949285 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.306056883 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324872769 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.483268197 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558708115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.316692137 seconds)
  done (took 28.757121855 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.720397431 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.322967723 seconds)
  done (took 5.238655348 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326018508 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308088819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308850194 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306679713 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.299629449 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.317563155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306000412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.312258224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.300836084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428221646 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.313822459 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321845566 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307019224 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309369134 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317978501 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.351367152 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462123447 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321384508 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.318013921 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318179263 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310283111 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.397193131 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352391293 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324835926 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.426425679 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.311502287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319863163 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317551225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.430630687 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320207772 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308556447 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310952721 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310650706 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.256780573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.849630741 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.308332953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334371179 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318190702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318414253 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442555297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312687466 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315823638 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.301285454 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.861421531 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.417055993 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424902412 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.313387106 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.315114886 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3105699 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373037917 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.315194829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312753169 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367381175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.102169854 seconds)
  done (took 84.067013884 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.357591734 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.304505497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484221874 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.327724337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304839919 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309627016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.310465616 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.572619694 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.317158592 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305603386 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614538514 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901926122 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.322351721 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.371226343 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.346550731 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.355695919 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305913317 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.305112969 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30607165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.308471514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863300211 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312113667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.306482157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.380771115 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344327746 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833440426 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.308365145 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.310615611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311161536 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306630992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.88097328 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318789107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.363300966 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.306685407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586716967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690212922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649026345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.317227665 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.325708784 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309363112 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.331111466 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826664336 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669975982 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.313734368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307326556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822033335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.310211691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.32192426 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.317147981 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573484598 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310656788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307810368 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307068704 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.312876602 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.307082589 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.359399614 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.353200008 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833003306 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310411998 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308092736 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357600707 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307170504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316099061 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312854579 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312212531 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665922223 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537836353 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315042725 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662798501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87285946 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313262423 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961460792 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.313610961 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323364387 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.342022484 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308268193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309441564 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838467638 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.338609961 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308992132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647959627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312866996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60901775 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326431762 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309935205 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881646716 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320024264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.354044789 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310689158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310199788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324862553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315064992 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.594333687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.35792908 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310425149 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312214224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349983412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310953365 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325418832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321490239 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.944229708 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.315893115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323342575 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311570388 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311606226 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317733952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.312760924 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311658553 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587609065 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314316066 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335886398 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311285398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313181807 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.323686067 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387679252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.321702986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611758768 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32002046 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310896696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318544618 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311556655 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.329183692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314078059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.328017061 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.310757191 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.611498032 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327453175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329009887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312493089 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311521427 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316719095 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313958806 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.367098728 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316978795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073449065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.356622985 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.358449424 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.312543062 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319585262 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32302547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320475688 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313319779 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611773453 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.595703763 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.539502994 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31347959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313308036 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.101016684 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350315588 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494294255 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332011293 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314732694 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.59175282 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535937753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317016125 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.313822828 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.316221981 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590651904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313059024 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640485741 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908113725 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320115155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321233062 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.072325073 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.124905698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.319732007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317345865 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.608546521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.331256321 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315427385 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.315875775 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315404256 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315071964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320263236 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323370304 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.315224454 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.314064036 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.656572652 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507239482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.330393011 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31569297 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840809573 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340981694 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315440652 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324830316 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319276061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315223055 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36358769 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.314966611 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.349042833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.318358761 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322502709 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867278281 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320189785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.317240523 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50913099 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031441336 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.321914518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317271918 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321051024 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.373246964 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872082295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.344991007 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.617618553 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.331576301 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355523162 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316583889 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336410954 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873589897 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324452188 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319412512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044805116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.322373651 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.749068243 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.31717539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319321896 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979254544 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.322812866 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322734568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.322489062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31926873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644669199 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.320167696 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.366189139 seconds)
  done (took 493.974296845 seconds)
done (took 639.819949264 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317501797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.317709694 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322133581 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32334529 seconds)
  done (took 10.491819174 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.334084279 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325279363 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.333228811 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323684944 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.338562139 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324773047 seconds)
  done (took 9.191708582 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318469682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.31876755 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323759114 seconds)
  done (took 8.173168025 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.520399681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.349084243 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665599577 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332456798 seconds)
  done (took 9.08002818 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333569676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.332826914 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334561834 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334819437 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337807766 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335765113 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335736679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335583154 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335751969 seconds)
  done (took 13.229435724 seconds)
done (took 51.377604414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.345480773 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.552228522 seconds)
    (3/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.487662442 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.333553449 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360087455 seconds)
    (6/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359761235 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.389320602 seconds)
    (8/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.356853674 seconds)
    (9/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.393723818 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.473114187 seconds)
    (11/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.303954568 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.812093654 seconds)
    (13/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.656435825 seconds)
    (14/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.436571565 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.35622781 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.428668824 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.492479196 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.323851478 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.468812129 seconds)
    (20/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.300930158 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.445594856 seconds)
    (22/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.302320296 seconds)
    (23/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.373274987 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.461146324 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.336196562 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.436943627 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.337719775 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.592385059 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.402767056 seconds)
    (30/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.596582767 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304569013 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.42544264 seconds)
    (33/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391055529 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.423629111 seconds)
    (35/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.319853912 seconds)
    (36/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.400860882 seconds)
    (37/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353359689 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.409809395 seconds)
    (39/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.4034147 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.426970077 seconds)
    (41/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.597097836 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.393421687 seconds)
    (43/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.527297948 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369662873 seconds)
    (45/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.56109492 seconds)
    (46/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.478097251 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316976222 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.4272593 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.493274858 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.416797772 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.304973463 seconds)
    (52/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.425983412 seconds)
    (53/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.302503423 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.488476585 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.456817076 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.478596211 seconds)
    (57/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.529918442 seconds)
    (58/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.421834287 seconds)
    (59/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.617362552 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.568872049 seconds)
    (61/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.400221212 seconds)
    (62/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.495262264 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.433517455 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360402833 seconds)
    (65/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.418405905 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.307970129 seconds)
    (67/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.659665869 seconds)
    (68/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.361985164 seconds)
    (69/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.461005497 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.510377907 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.420348328 seconds)
    (72/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.408182716 seconds)
    (73/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.305140848 seconds)
    (74/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.508381592 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.644850332 seconds)
    (76/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.361727111 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.355036524 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.671490407 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.416836269 seconds)
    (80/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.505954137 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.438691207 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.329282302 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.414962739 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.392939879 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.30436902 seconds)
    (86/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.323385515 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370770463 seconds)
    (88/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.304386818 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.447207452 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.362815068 seconds)
    (91/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.498336409 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.668699356 seconds)
    (93/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.448678949 seconds)
    (94/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.476960163 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.404618755 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.440703725 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.80900483 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.470733791 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.330368906 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.30981304 seconds)
    (101/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.572387698 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.30951159 seconds)
    (103/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.30905526 seconds)
    (104/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.391994137 seconds)
    (105/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.307221658 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.475328035 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.500558307 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.450377205 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.672412048 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.39264825 seconds)
    (111/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.405674339 seconds)
    (112/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.306769452 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375060067 seconds)
    (114/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.328868183 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.411610454 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.56774039 seconds)
    (117/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.447850957 seconds)
    (118/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.732394135 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.31137139 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.631367881 seconds)
    (121/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.312040956 seconds)
    (122/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.336819164 seconds)
    (123/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.342162404 seconds)
    (124/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.524621419 seconds)
    (125/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.42714746 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.316963995 seconds)
    (127/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.564584469 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.608337214 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.428078076 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.437502984 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.465276842 seconds)
    (132/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.399467145 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.460966878 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.567440453 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332760603 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.393170852 seconds)
    (137/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.313904064 seconds)
    (138/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371717415 seconds)
    (139/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.435366512 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.397561307 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.505157294 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.426850541 seconds)
    (143/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.330540092 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.499604189 seconds)
    (145/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.393973961 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.541976119 seconds)
    (147/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.363212709 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.332007767 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.484710937 seconds)
    (150/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.448760285 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.310447996 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.482709558 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332955901 seconds)
    (154/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.363165018 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.436273788 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.429586535 seconds)
    (157/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.314071888 seconds)
    (158/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.543287484 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.399199864 seconds)
    (160/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.311812826 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.605832938 seconds)
    (162/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.538832588 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.3736971 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.540980969 seconds)
    (165/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368388072 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.442293229 seconds)
    (167/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.532188942 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.612275033 seconds)
    (169/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.329141985 seconds)
    (170/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.368025176 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.32281482 seconds)
    (172/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.318930692 seconds)
    (173/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.561469925 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.478875838 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.583577821 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.351813263 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.416488714 seconds)
    (178/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.464337625 seconds)
    (179/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.410642265 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.481833018 seconds)
    (181/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.40946779 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.345340251 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.336424488 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.657163024 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.525891714 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.420945289 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.44603549 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.31643407 seconds)
    (189/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.317731318 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.584575444 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.599845255 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.443568223 seconds)
  done (took 324.823359403 seconds)
done (took 326.037661505 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360632559 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.426852723 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339392086 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.340193687 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342156136 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.332278494 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36661475 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34204791 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355537557 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.354814655 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.333273019 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357661189 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.357549373 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352197953 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374967169 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341751089 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340563344 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.349906014 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356625185 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.357518805 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343415899 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343455557 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369433096 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340170014 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3502176 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349066207 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348136225 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.334650744 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.369411063 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358247991 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.343580437 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.353184479 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.360372505 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353913415 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343872198 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352827812 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34361537 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.428519248 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.363681005 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354696666 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351149754 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.358847368 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347568295 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349052127 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.355259246 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370642935 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351880117 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358523064 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.341184291 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344758736 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36821343 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356314481 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.350611031 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.340610758 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.34947413 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364231556 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353623716 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364694671 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353026054 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34592165 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377845577 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363468789 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356891869 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352425325 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353241528 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359005844 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35522246 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.360911398 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.352291905 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34644173 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34690206 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353108005 seconds)
done (took 106.766937315 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.467273617 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.343284151 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.499923242 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352742107 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.512215916 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471820969 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352188242 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354025768 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.353806917 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.150164001 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353822996 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352957776 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.341404176 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.354341246 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.468943852 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352981747 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353400285 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.051525606 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353015349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.483476065 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.34657412 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353465038 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354123895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.153432497 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.343577076 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.340781802 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.482537038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354509662 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.051537223 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.339436477 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.342499306 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.052008093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.483297802 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.373289522 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364158852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363110734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.512892776 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357627332 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.471091062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.471679993 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.504342297 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392385434 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.340106568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.344323478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358464604 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357145892 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355015956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384153356 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344500382 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.356436819 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.056768063 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.366214014 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.356479616 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356007153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356405205 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.385670201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356848186 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356715722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.485142706 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356518514 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.472753334 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155897829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.155171016 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356886187 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.3429193 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356708841 seconds)
  done (took 109.47444683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.416759088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.424305749 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.45775955 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.351727979 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397847109 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45809825 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35220497 seconds)
  done (took 11.089670973 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353656646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.356514929 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396284868 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396015184 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356979946 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520085113 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358387126 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36055792 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355838496 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39844751 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357929982 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356964079 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.366500908 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.346456106 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395526246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360498375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46725421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35078753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.360082022 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504221914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358678312 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368367565 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.400295988 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36100696 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359345126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356703256 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.133770022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359419398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35935979 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358986751 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359427108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.41613808 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359374184 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.348576898 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359758096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464233773 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36060493 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359720151 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359073933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351305877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359225036 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358976239 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361070402 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360812428 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.360007337 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374860057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36031901 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.360482839 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359374368 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359590938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.39817953 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359694368 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359590499 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359478038 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406069299 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369857274 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.360829225 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.360509049 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361362456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360025147 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505895028 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399541226 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360346581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398281463 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360845595 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361088428 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360422007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.35877161 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443121584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361234181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399913199 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360905811 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.534247183 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377448655 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362537617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356710788 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.356613322 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362538374 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.350118204 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359651405 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.362397407 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355303775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.361151281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362561949 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36226858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.511980754 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459673986 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.362972928 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370006877 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360825116 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.363609575 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40481445 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.362743278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.363626006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404601524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472039724 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404786486 seconds)
  done (took 139.793899291 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365521217 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365948327 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.358577127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381131519 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355490668 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354392535 seconds)
  done (took 9.418277202 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355807981 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366556929 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364279962 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363829247 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365075507 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364916871 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36395571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357208822 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.366685254 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.36607249 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.365761961 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364291766 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365164913 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365979752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364980202 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36506027 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.365345228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364345028 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365685132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366074371 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35395917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367132426 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366635116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35852916 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.367583896 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.366608735 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382111808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364974619 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.365306486 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362951927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.36900458 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.366593886 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357371097 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361710047 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367896359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358919475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369124921 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365536575 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365386596 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365709242 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365977916 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365669273 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366377311 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367354924 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359674394 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361271084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369032295 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381693896 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367179622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368079452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366925472 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367351416 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367635591 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368090703 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360891437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363657233 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369717372 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367325583 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367724852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361863873 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368465856 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.367727733 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360194955 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.371004018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367806184 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368111724 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360313321 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371597401 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368735245 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369244613 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.367657019 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367914196 seconds)
  done (took 100.572117595 seconds)
done (took 371.575997305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.950011991 seconds)
  done (took 4.19109507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.355334965 seconds)
  done (took 3.598932515 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.495330216 seconds)
  done (took 22.740881206 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.382356451 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.387260053 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.352314855 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.361291116 seconds)
  done (took 10.725240761 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.624799283 seconds)
  done (took 3.867236078 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376363266 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.363539183 seconds)
  done (took 5.984691177 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.550189778 seconds)
  done (took 3.793248028 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.585624116 seconds)
  done (took 3.829514482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.386002697 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.378929149 seconds)
  done (took 6.016413037 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.333217251 seconds)
  done (took 3.576755745 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.833551945 seconds)
  done (took 21.078978548 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.37684508 seconds)
  done (took 3.622536609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.388091873 seconds)
  done (took 3.630575456 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.891317988 seconds)
  done (took 6.136148351 seconds)
done (took 104.0346619 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.354325139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.361642532 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.356655656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.354644082 seconds)
  done (took 10.670795968 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.434248883 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.438201673 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442859606 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429152481 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.428160682 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.436138821 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.39736087 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403003409 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.42743619 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.424287347 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.438694363 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429298349 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.438083292 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396711 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42368032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.439834185 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.426215821 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444368573 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398928013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.424941192 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.372759954 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430038905 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423652474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373051578 seconds)
  done (took 35.365369398 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.858528404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.432347027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517079771 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414025777 seconds)
  done (took 7.466144737 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.47709917 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.47540682 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494807029 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.531396624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.577896267 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.490032377 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398939587 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393018707 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379716148 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47702782 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.561853087 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.475197027 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.691346123 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372498279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.691662116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372735874 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.372918529 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.476683457 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.527429784 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.555668309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374284409 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.476941047 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480981664 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.478391721 seconds)
  done (took 36.849972715 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380772147 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.389497547 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.373801031 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389423312 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.375342936 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.375695048 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.376745733 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381270853 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.374916476 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.374891848 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.37566883 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389305573 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376643453 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375771038 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.383122911 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377076678 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.377682656 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383015854 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.38310479 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.377096292 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375467198 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.383071899 seconds)
  done (took 31.595913819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359736206 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.359778702 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71100951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615192192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.360508826 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.360363007 seconds)
  done (took 14.01482755 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.432852916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.575569473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370691984 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.709798806 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.798921905 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.372380784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368829748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607862289 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.901769437 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901785294 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421558908 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437930499 seconds)
  done (took 20.149088725 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.37420112 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.366462979 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.37863639 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382656032 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.41995108 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371113967 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.375061803 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.362190985 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424718105 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.427643742 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373927214 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421504302 seconds)
  done (took 21.928108214 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453387641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372316014 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37844568 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456812215 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376406091 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372751246 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449400109 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092932996 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382798095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647345717 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378546772 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458259259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617771256 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385167603 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378966471 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.326452036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605383857 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848689754 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374807288 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385941867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410634691 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386438791 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38032651 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583001929 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379965657 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371588424 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.636433075 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373183226 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654137009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629374328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632094102 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379551406 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650892072 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016436053 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485188464 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577282689 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374756523 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381389827 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.347956086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.398637322 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396944187 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380962744 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628216663 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377628007 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374436877 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382572421 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103131855 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387671988 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.374892886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377253188 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631153202 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464667474 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380658753 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376705136 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404109154 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379717468 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380690444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508786918 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022788952 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375386523 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393274601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.381493482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387135153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383259679 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013433282 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384983176 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.382659234 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382379435 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377380002 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378146861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402435711 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376652299 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397853842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37757211 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137013782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383455697 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384366776 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904692057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392700554 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.381040699 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600944075 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378829895 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37863242 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377968094 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376091434 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088868843 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384579848 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.346582256 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424878817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096485708 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586290179 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402348323 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407980751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.598241823 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.347069903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378070817 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.390645699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384338424 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399889624 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099600973 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383342266 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.386260702 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626030775 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588534772 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382770909 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320646191 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855265644 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396129954 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408924117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385687965 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589657354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.993818205 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641028733 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38896727 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416775383 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37983642 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143046057 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390250444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39124921 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381585898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678753187 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154904698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382564746 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454537556 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381082188 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379944487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379753752 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402959357 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382231919 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.563427272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388884297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640833618 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383002602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380941169 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.386063536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385184654 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.388231438 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601137195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392049286 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659541954 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383014594 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382241487 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382549009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599385527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.384960036 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393165918 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720946068 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384106227 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390226435 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643220011 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413345937 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494803835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41368669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.383615841 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632594886 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388322885 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387705865 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382858597 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388249738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387172598 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391980225 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376175175 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014756297 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360485683 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390648387 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382934767 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.400019693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457209146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39210086 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588668743 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390960071 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383553295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413090462 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.383919534 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609586949 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638700931 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.391997362 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563232904 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.853746148 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999884643 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401715916 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.383730165 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.385921094 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.384024586 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385055767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383774607 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383879547 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589549446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653565498 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381855694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006824738 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387405802 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397551038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396615653 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641425722 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.396961485 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385502047 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385651945 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413427889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397025428 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670534777 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610420364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401864578 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386074723 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905375846 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392947881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38781738 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386624523 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412940029 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385004001 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276624032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728899592 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395589555 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64914825 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403310254 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410079677 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.38632242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396929269 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404125049 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.40655185 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399796421 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.594380698 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393195127 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394017103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028420371 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151664548 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945259253 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3989814 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.397003535 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392510184 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114254696 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391358906 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387417652 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631074012 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118920525 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392493919 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863283965 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.396184785 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139300483 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651273855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618412558 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394131892 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.402629721 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652925587 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604727516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414061976 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393586634 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393617754 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.358855302 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939301641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405984039 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573157557 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116559325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405590071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396456084 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.442102999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394943127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786548267 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394107122 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390333572 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39883453 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394339438 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234869948 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39733233 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390291845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025860381 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400034743 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.871237099 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395114595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596756681 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654277726 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.629112707 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.399215997 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.400636934 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639259743 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650359025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396704924 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399026731 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953357275 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.259218722 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398135652 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391503902 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155092909 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403521154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679616806 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.397447034 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400663504 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405358432 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393258265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390401504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.390764049 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40132753 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365675532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868448687 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.410608782 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39485437 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398327133 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39830951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638017857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409605919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007235319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625413649 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384910638 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447007928 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.396203736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394365723 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.368866649 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392188163 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393267111 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406955462 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617607197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396940071 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.367284115 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405900227 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607622579 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393603229 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394176309 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616675375 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.399820102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.413666218 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165786809 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429238037 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39422671 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399419439 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409232195 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437416054 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466985126 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599928673 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.659499982 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658470486 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79291174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400606691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40108238 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410069368 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476027276 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395780662 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.407099678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.399243444 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007644858 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17261341 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021272537 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656004699 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401750529 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394407764 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395500983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635777117 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393886355 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671862011 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395648957 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.410148925 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422639105 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396041594 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402036446 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611805223 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670759751 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396278121 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406023824 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401589877 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.396363356 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659899386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613653457 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876538354 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929134372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398206472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402542583 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133425755 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678818553 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396754366 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398043366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396504899 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.401236112 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406680931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410215971 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40289503 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626065105 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65469363 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055616751 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663056116 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.431343433 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.397945343 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402972784 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648262775 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234817937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604846019 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025857267 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117403038 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654224133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471340613 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605175062 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.403970573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635755288 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.398323674 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402704051 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400543197 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398524099 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.398376063 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657236845 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02250425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655805544 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403358364 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.397700555 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44788367 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.607908765 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625081683 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113603092 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618376376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66453812 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407790515 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399251307 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023868532 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667775866 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404121441 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406108384 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616963622 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40551343 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4362634 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.272501598 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399993808 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933244602 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.610861125 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422333132 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410680477 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122148015 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03045142 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.411233354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885674491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402747315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402700119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683663167 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40977142 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411038761 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686852438 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408156856 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411500815 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616531399 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.021461513 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162194798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.415072883 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409613986 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.409264734 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403169304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465137799 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407698482 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412615797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.800822804 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407576594 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4013838 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416907332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404353212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41883157 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.407798017 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403915146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411959977 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.394765239 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.397384606 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418165139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533339821 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970614256 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411361959 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.017983253 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737435882 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649004313 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412807323 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.379300311 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409634522 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404904588 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404584394 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406289352 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407925544 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943950722 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.410942327 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.669952021 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415698105 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614458383 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615802323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411277482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619545541 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417072094 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430240645 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.375095453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404167731 seconds)
  done (took 989.035630604 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41830382 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.412547723 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.415271252 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.397233724 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426011437 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416957664 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.422042517 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482056603 seconds)
  done (took 20.669048536 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.408379229 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.408841752 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.407230567 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409019488 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.403630395 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.884368285 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.405427224 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.404790145 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.418932429 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.409606554 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.411242864 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.029277885 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.412632408 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.406228533 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40715596 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.41174296 seconds)
  done (took 32.918778818 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.157094787 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.435176726 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.027904598 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.451184074 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.412726512 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.406097765 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.563935568 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404103256 seconds)
  done (took 26.141086365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411431458 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411531438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411928238 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412004647 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410314483 seconds)
  done (took 8.338504983 seconds)
done (took 1256.38796833 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.412978596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413947408 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.413969055 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414877251 seconds)
  done (took 6.936410995 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.377664869 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.377643322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.381345003 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398218339 seconds)
  done (took 9.816567094 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.076237123 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.913932155 seconds)
  done (took 5.272118357 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918726812 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.91986207 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.913081965 seconds)
  done (took 7.034297467 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.678863402 seconds)
  done (took 2.962180879 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.354566759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.404791985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.404530078 seconds)
  done (took 8.447250526 seconds)
done (took 41.750217909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399736516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.158399031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.555358729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400974796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.559465878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.554956687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.649701895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406758868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401049193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408767928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401196681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.561123305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.637437343 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.162675638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.638637247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.165260105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.567744604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407505416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401070032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.403148412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.6526856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400542301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413271023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410127232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577251974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546910507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410038932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.166189088 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401510975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400749107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.552040965 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401431758 seconds)
  done (took 83.457082654 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402397501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.411847396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412355003 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.401236184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431470906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.414170137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.402183644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402115387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402111058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428898038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402235001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422280303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40435267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403071721 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421960018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.404027321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428409241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412476243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401870027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.418483537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.403809541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402575514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415947116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403192783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.408410202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.401952532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423813234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.403827298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402742716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403264793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408264728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422918129 seconds)
  done (took 78.413866933 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.403299045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.407795416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419571526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409554911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.408202248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.419286771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408197189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416557028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411211922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416483564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413768438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409185711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409411171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405420146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41164985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405153103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409963396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.429232652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410323747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424325943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411222555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41140967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.410124479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411560977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410271307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430305818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415215554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421949779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411521041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409839945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41418516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409959873 seconds)
  done (took 78.502904437 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646655267 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.419935315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422900773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416341833 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423025392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.419047123 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.415791601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.649767365 seconds)
  done (took 15.101700485 seconds)
done (took 256.758771072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.422066899 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.906323391 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447901273 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.415720365 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43834765 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443209089 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.618589783 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.447339163 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606878574 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.430712605 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437475362 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.416236796 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.211843313 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556959457 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.221943971 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.348900651 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.284643493 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.428458446 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.973207418 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.640626026 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446545851 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.408654279 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.231278131 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.300963886 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.393724986 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.484808589 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.48365118 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570427132 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.534996298 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.47586089 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.895686058 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430238073 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.426616528 seconds)
  done (took 65.069737254 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.413795008 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.424352286 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.423318311 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.424985552 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.425552142 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.424495788 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.414514462 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.424058508 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.425194892 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.423235499 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.424576938 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.425495705 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.425420162 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.424331217 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.425648158 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.397750478 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.41515158 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.424367545 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.416186039 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.397894038 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.423381643 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.426198251 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.425405672 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.424195497 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.424678148 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.426087425 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.424178574 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.425824775 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.425423402 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.426664169 seconds)
  done (took 43.943125488 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425984166 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.968589291 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.155775539 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.427998683 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.416542941 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420586281 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.703607809 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433480138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419866491 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422281372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.893499344 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.428827126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448711402 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163642135 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.421073022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428262501 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426299276 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.419363901 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978836733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426523527 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.702056352 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43309212 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.702685212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432815079 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.421428923 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419223352 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.423226549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.201788618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439436725 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.894631793 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.191485895 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.705139809 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.145423278 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.212589885 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.193305131 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434568546 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.429324853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.900681423 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426890018 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419814895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.702331407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.421316564 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.168707501 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111812045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439273214 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428161828 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.241935225 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.898823999 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661007605 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431265922 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211054869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424094739 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43040024 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422438556 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.66143059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425678423 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.421307053 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275289403 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.425500101 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.704373772 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433829644 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.421312974 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.973226382 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420541306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.973700988 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.424518985 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430496889 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.422063047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.171486692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42946477 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.133744965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.438828423 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.430403708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.899653995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.980943721 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.279680559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.423964381 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982348848 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.174394852 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.724721347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.427157931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.176736812 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.724652209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426409659 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.433686639 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432622037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431097393 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497044945 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.702843749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047238571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.116817304 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.281600313 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.708487159 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431395929 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423577827 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.275435506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.431736128 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432535589 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.169036354 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134403163 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.440090326 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430522311 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.10912511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443697319 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.709446659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430030283 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214469065 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43010056 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497542669 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434155966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.43077889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.428082887 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.709292511 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42809843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.433802725 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.110977065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.929084728 seconds)
  done (took 198.045224635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.421336941 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.420784239 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.418619096 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.419129563 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.418805005 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.429081424 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.418581622 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.41870858 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424958098 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.418652185 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.419962922 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.427501451 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427020047 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.419519103 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.43155707 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.421829309 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.42052471 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.43734452 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.420562108 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.420643161 seconds)
  done (took 45.753913227 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.435993956 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977692886 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.946046351 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.442166505 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.435374681 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.427727765 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481219183 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435194918 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436206248 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.723946846 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.601213869 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442075885 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.435872786 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.436589849 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949261582 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413617072 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.722916519 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.981868226 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441337991 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980491974 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412096597 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436149312 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427380699 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.978793136 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73188769 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.707536611 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489556385 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985162909 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440616452 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.436118644 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982184193 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.441194821 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42779248 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.969124095 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.442311676 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450198493 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.437181864 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486044323 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.486533905 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.724661284 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.987651106 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.72167512 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448218594 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.588964387 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.444009288 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409108657 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991136725 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439665992 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410675802 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440555979 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.443176437 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.967334734 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.43071788 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.96951536 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.438340652 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438533475 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.982058158 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.96667702 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.958130984 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597000147 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.434142449 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.712363648 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.439173505 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993735787 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440574093 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.439570697 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.440630965 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.600038582 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.990075447 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.714240886 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.727452551 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.726904154 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.440269222 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.497749659 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.440098402 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.727925159 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497555603 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.813500552 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735138323 seconds)
  done (took 129.227032876 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704949142 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547624097 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.800824958 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.995706104 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.929179502 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566339483 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542482433 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.672891602 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.442873334 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544356554 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.072104441 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.522871355 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167877088 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.501487236 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.534921985 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.551770147 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.82479854 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.393381291 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.08301954 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.048903425 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.438883551 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543322428 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.968216886 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.635955873 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.428453826 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.00171224 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.355865335 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.9378069 seconds)
  done (took 54.065874683 seconds)
done (took 537.393319854 seconds)
SAVING RESULT...
DONE!
