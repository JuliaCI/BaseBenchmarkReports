cset: moving following pidspec: 15866
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.511007606 seconds)
loading group "string"... done (took 0.52900429 seconds)
loading group "linalg"... done (took 9.034640031 seconds)
loading group "parallel"... done (took 0.176397579 seconds)
loading group "find"... done (took 1.299382074 seconds)
loading group "tuple"... done (took 1.954034527 seconds)
loading group "dates"... done (took 1.385086688 seconds)
loading group "micro"... done (took 0.199181006 seconds)
loading group "io"... done (took 0.51667723 seconds)
loading group "scalar"... done (took 51.468708746 seconds)
loading group "sparse"... done (took 14.360292383 seconds)
loading group "broadcast"... done (took 1.340306879 seconds)
loading group "union"... done (took 10.353535524 seconds)
loading group "simd"... done (took 3.094467979 seconds)
loading group "random"... done (took 11.711361393 seconds)
loading group "problem"... done (took 2.27116646 seconds)
loading group "array"... done (took 24.725615618 seconds)
loading group "misc"... done (took 1.161489237 seconds)
loading group "sort"... done (took 3.845269832 seconds)
loading group "collection"... done (took 19.610766879 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.621240561 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184850398 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204982039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.289841612 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240815398 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156283502 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137795417 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.263550756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.798396179 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21488621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129869674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51137392 seconds)
done (took 6.577830437 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.312835187 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180578088 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166314112 seconds)
  done (took 1.11931299 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074015277 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152244165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089598506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106991726 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090473796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105568959 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090624693 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106506414 seconds)
  done (took 1.518992632 seconds)
done (took 3.796871343 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.532279117 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887234415 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.52637787 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164692873 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.302446159 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297380612 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333067082 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200524931 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090588198 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08758207 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174516725 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388866804 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.432960471 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962043801 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089076583 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111040688 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116814918 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773823587 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077697324 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111762298 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513446399 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192607383 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095670466 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124243985 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182182458 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131033032 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160589379 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101036291 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661888999 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13299299 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186594053 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095549496 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157872603 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.192221891 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207887335 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089952101 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679015256 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205215179 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091409571 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097329428 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664532172 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117891847 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188193036 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100808637 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089081464 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182556901 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097006424 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076031344 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114336815 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082869123 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163010509 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459517084 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10804627 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171008113 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090327447 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.680897014 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100095046 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277305792 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12416251 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09048016 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089558871 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086371712 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156709337 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092709833 seconds)
  done (took 20.169812865 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147683673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165595619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075742858 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154288139 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123424939 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077212554 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098791226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076508654 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106578774 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.241450981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134413816 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153113318 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071533151 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.102129176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125474665 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247185262 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106679799 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11844673 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086637266 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087607054 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138499484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093937045 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088941872 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108170469 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167270955 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202496656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108671232 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122068857 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086091264 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094917297 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139102301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143204735 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091628734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084489451 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169463813 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121427052 seconds)
  done (took 5.25254661 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200762188 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122185297 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215146008 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162286062 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145048409 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166953677 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145186649 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.284300411 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214858357 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15962088 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127249409 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101846384 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075765487 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076951974 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094484059 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.395215227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179363564 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129705261 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153407485 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085570603 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097122322 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364874829 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098110986 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078128637 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083181532 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084345019 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197732557 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08524365 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.099103376 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081970492 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085309649 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134797925 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192326494 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132969928 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121022563 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083995344 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096381278 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214251388 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091425911 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074559369 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124927416 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103098551 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132428359 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112108228 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100544713 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091961788 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223677325 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097336039 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101674173 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.089693974 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.1974372 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126473653 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077990804 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285717021 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115681494 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084164117 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078479489 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263523959 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113682013 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078010587 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095599409 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085021169 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078151603 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094775544 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.435043599 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092191178 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.8053036 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082891213 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16096727 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086045723 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103845611 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083731694 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082370258 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117078517 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078416398 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076372046 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094539542 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079360454 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082063918 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109386219 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08360734 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076462251 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16038668 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.145454426 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114066867 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100251628 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123505584 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086511531 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076721216 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125862861 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080190625 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08113977 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171711996 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084420137 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110324156 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081474139 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097878294 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127334287 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078680955 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.223373686 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081726023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105068776 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099285532 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125947251 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101790723 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077366861 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099381089 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079687301 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080235304 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159988476 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082244022 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082375979 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082875005 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112787486 seconds)
  done (took 22.767691957 seconds)
done (took 48.957639354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.448203699 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088584837 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086693854 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106245801 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087026813 seconds)
  done (took 1.666650855 seconds)
done (took 2.491299164 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326559882 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199194831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098953147 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193735826 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084305188 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203081594 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18866904 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092481455 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214295612 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082473486 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193566153 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081992907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101400296 seconds)
  done (took 2.912422156 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098992689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10712201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09803017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099800687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079445359 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096262897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115016115 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108463192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095871417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109490766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081047763 seconds)
  done (took 1.932589826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095805642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10222009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086719086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11336557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081223774 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094750257 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112594657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105508021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094118687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108991592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080324403 seconds)
  done (took 1.904129705 seconds)
done (took 7.57249852 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.174146298 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.152124123 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169295375 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.292589768 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347847412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.25580604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.676874501 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155790771 seconds)
  done (took 32.206715079 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.164438601 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110107829 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091426123 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09041873 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085984008 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107075692 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085800954 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08630747 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103999519 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089136308 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08683753 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08927243 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109053287 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090563219 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089171336 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104266288 seconds)
  done (took 2.471756439 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13976342 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111544456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110532859 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093914363 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088883912 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.112760181 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094827362 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089680206 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.107931988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089361975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096540584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109549379 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092336117 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087007504 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109245925 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120135145 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087899078 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110149172 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118504259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092495976 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112223354 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090999515 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090499746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111348131 seconds)
  done (took 3.378101815 seconds)
done (took 38.885126629 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151483773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099508745 seconds)
  done (took 1.081795569 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139374454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157647268 seconds)
  done (took 1.130681546 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107788126 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084091793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134776844 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099124109 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084885106 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102048147 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11292185 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08508741 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10309308 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085503045 seconds)
  done (took 1.8392491 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089063502 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088545327 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.117587915 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138422564 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092403869 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106788784 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089439468 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08707681 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109487988 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084774015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094273839 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121624453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089904654 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123517044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090678301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091210217 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111380227 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0896385 seconds)
  done (took 2.654957855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084788048 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085767428 seconds)
  done (took 1.010626713 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088260171 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084169403 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086532396 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104933897 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085743437 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083524776 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101763024 seconds)
  done (took 1.474541403 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498256644 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265524305 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374072675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102486624 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143699905 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338805676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142598108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.09912003 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097301819 seconds)
  done (took 2.935076398 seconds)
done (took 12.96084514 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091114597 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216530521 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636185227 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107319874 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.203333188 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162014487 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296593558 seconds)
done (took 2.55954809 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352012128 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150470681 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085894718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086527993 seconds)
  done (took 1.514482746 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07965909 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092421868 seconds)
  done (took 1.019192524 seconds)
done (took 3.379356568 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085646772 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107125974 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.101877529 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084186643 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082976724 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08246939 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103133432 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083216181 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083024954 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083026021 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103525516 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.083628659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08352465 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100497756 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084069396 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082144782 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083289276 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.100296794 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0827353 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081644719 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082113967 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101450956 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082938927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082544605 seconds)
  done (took 3.011450903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108519661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085310638 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105138461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089451514 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.087376762 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087349734 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106978346 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085586635 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087777519 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105179579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087959107 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08670435 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102970865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088483404 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085894361 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106501211 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089509655 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084488889 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103562402 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088507529 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088136545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101833918 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088911866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088737376 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104227388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089021221 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085078178 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084456347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108066797 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089090557 seconds)
  done (took 3.650303932 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095954704 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083121348 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084769786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114038185 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085092576 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087664472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101663484 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085879238 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087551002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086243295 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106985518 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086237451 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084790238 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086597525 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10721641 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090560626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094035155 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104016974 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08489964 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087482383 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.088948572 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102852979 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086831346 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086166618 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10490651 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084981336 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08712211 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085352828 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.106029873 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087202886 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089346841 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107317942 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088382279 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096715339 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089895946 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.105723149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091807289 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084172976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.106015321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085476328 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083032907 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.086522476 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.102044008 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093855111 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086577826 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.106164954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085138625 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088620415 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086600631 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.109495362 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08448719 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083946063 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.106502127 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089880102 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09008559 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082444367 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.106460111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084912721 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087993024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.086822412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.102854266 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084546922 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.091848314 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.104965783 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103010452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092570321 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.101505105 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090645282 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.088068749 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092521023 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108319146 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097975612 seconds)
  done (took 7.553358484 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099629663 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09388127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084452235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103958259 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084218791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085796691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106640815 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084724609 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08505283 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109602739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086248628 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084740667 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084149943 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104460168 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085075966 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08484772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108212712 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084223289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084927419 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084768419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104231609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090149913 seconds)
  done (took 2.881221168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.230126702 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091936861 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135909768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116482562 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101921006 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115370046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090384975 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090435155 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106144465 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095109554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093629137 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106955206 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103952697 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092056478 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111494083 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094914462 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088060012 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11360739 seconds)
  done (took 2.837608366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098851761 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089747032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12738589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086664842 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0868437 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086810228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111210463 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108861625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087140795 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.105307377 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09486426 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087125004 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106678588 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087474812 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087339995 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107277343 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.089613574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088304852 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112566992 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094535808 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093052683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110966645 seconds)
  done (took 3.006382168 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103108005 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087714206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124668989 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090557025 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085599422 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086364158 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112007582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086972118 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092052723 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107679565 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087603924 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085867237 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120760466 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087515511 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092079739 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105111858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088201178 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086753356 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087118191 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104729545 seconds)
  done (took 2.781379562 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174836068 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123642313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107666411 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113355322 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123854363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105677244 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113383422 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124888105 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104819972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135878262 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107994302 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132521464 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113001481 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10499588 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132984675 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115042874 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131171621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106896895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107043597 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13708574 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105188311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132851317 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106681538 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105837689 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124167925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106483982 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110347883 seconds)
  done (took 4.175716652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087556924 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086362016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084278608 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103073559 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086146599 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084369871 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.084162201 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104316986 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086634935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084569708 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08474572 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.105944534 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086522276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085877799 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104270065 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087122829 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086687605 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.084570431 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103252169 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085324721 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083958739 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085285261 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10560361 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085431075 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083967122 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103518597 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085459585 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08485306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08540861 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103455304 seconds)
  done (took 3.579651485 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095363861 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09157532 seconds)
  done (took 1.051212547 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093787573 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101367361 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085830848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104673907 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09287401 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085766961 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113519881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092365918 seconds)
  done (took 1.638822731 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144901913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163745406 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091930111 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098394776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162966475 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155795107 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133016501 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090716464 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10733922 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082664691 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157284766 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082550609 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090408832 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085140489 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109662371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096569054 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086283299 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116563164 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093723038 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088165235 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111470246 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09638797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091845904 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116582117 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084746517 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092698491 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113494578 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10272286 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085645259 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111997914 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089300273 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08628102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108804036 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09362256 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08753576 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163221261 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098109306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085428181 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110551589 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093044291 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121261208 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107169608 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091815262 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088084809 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112917007 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093384684 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091533482 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085383597 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102131678 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086122004 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087209725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104956479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086504559 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090803545 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108456607 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098689431 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088590973 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105429365 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087682664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084504483 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107156516 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088500477 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092728369 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089677329 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111216072 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091310126 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088687339 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10559002 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088599287 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.088101954 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10877414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106260761 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090332562 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.111802196 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09338864 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087539108 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104817014 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094362452 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088530015 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110325722 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09250198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116480735 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091295852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104689099 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086025764 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093714057 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.109264273 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091143369 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08219353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118314756 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092640026 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08796039 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101884019 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089308489 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086288779 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090111936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103677801 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090829534 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085055941 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111315064 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093141733 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088854494 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110750882 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09443568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093754219 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107521048 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.136942879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086267834 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106432363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090552114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092214293 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103572724 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091726118 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.086486072 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086771997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108010328 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.093188475 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090888259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.109372228 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092632826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092629081 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111422977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.090647235 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087504094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105826116 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093699821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096660437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11187288 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091620097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.088093034 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086519219 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109703751 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.092148383 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086563142 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112972817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08899644 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085522228 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088837512 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112996724 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091034049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08573447 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108565494 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091708048 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08913121 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110859025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092469004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085004899 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102204418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092053703 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08510938 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.106127418 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098079156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08620249 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09030645 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107685019 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09684438 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086122307 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112710274 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091821519 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093796273 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111743587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083872252 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087196737 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.108795245 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094295778 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086507006 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086268752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106679372 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095102184 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083160804 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.111237882 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08383312 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08753597 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111206912 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.091183837 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.091389676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085437917 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147798969 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100956319 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093363912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110000379 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091195204 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093692633 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109772488 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094202303 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094462971 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113111433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093037327 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089710254 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112639336 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088751398 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090027689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087718946 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112144109 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084279657 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089027465 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101798964 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095066185 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092433728 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110982904 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095082872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090555055 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089332875 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115997189 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087893022 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091566841 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103368971 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095675024 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097993999 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113986928 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09514588 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09272468 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107077539 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090293594 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097120182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089676663 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110496405 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.089678166 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083812248 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103735795 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096329593 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091787218 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085919075 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.106000162 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092935951 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092693708 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10939387 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084446487 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091582508 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11482083 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08743552 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09125364 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106835094 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090180839 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098109892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102985582 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088221574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093176915 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110578132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089842598 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090309618 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090139543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116119243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.092127833 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090694134 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107548451 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098905117 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088327538 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.086430395 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106899114 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091383059 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084077169 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10830089 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092257873 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087593813 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106422543 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09699044 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094663534 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112120868 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090932785 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093641228 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.094015644 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11608011 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089001773 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093681578 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10665209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084012978 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086251937 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103072008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0921133 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08739075 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.092372724 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109687934 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09081249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.092301581 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112858223 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08900753 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093991116 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123023401 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085567133 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084189876 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110311184 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091810073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087640711 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107904526 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099242277 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093248368 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111576617 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097007651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088655415 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087639354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114572096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098203897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094634291 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114718956 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095612079 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08605504 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.112426199 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089725058 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096539051 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084515683 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11233618 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090799206 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089429824 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109215433 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089937937 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085865865 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104390662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088486204 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093799598 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109113828 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095346202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09043645 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108122235 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089597866 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087641483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.094682909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110223857 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095431247 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089130619 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104251535 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087015408 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094659186 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11074985 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097372292 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0869997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.091909942 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114721591 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093200927 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088112723 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117848769 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098909971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095368346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116605675 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086191378 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088146722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114376987 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089684169 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092294514 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.090932335 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106328831 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095726245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.094079084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11409428 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090871871 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084466208 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087943639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.116261419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092665553 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091039677 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.110640607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093451655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086014001 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111224735 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096366947 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092405202 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094934688 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11241305 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.0934516 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087652948 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.114881318 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.089799458 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085395952 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104782083 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090396898 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095495988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084933996 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116088393 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093667698 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087351027 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108817368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094026316 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087818526 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113953803 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094760649 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088962929 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118131897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091235205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089926973 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093072053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115192028 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085275561 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090398889 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109587325 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096721491 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089802594 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112836339 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093096567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09382954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092004005 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114761782 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.094791552 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094386603 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10566018 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09715474 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095278302 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11069281 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090721787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089535747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084720189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111116947 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.095697909 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088652835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118227549 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095264073 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088849167 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110081022 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096551062 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091205785 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115291596 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089945879 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093575792 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084740601 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115589663 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090855729 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094599396 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108110336 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08741268 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093639273 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.113204537 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094991417 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095669629 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.11414399 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086562248 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085437639 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091063841 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109426194 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098597935 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094469048 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109635788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091993537 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089858701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.108546029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098660212 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086341339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088213635 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113582092 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094034049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089983454 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107243145 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.094866232 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090176311 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114344916 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092331047 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086736816 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11094003 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098432053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089840399 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087339462 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109538518 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097576459 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09145711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108856967 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087731044 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09773717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115168709 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097101982 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087931643 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112967531 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09059681 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090181374 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115562193 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0919243 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091726805 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089375195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116146815 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098091252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084499793 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10989723 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099677978 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094228599 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11597639 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.091032539 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089963853 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114964058 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097436863 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09142439 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086170141 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107674849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091456128 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085030958 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.110276127 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098647653 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090026369 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109222011 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095146931 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093549727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090801821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.111018352 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086702611 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095888893 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10882987 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097167902 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086143143 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105571609 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092604561 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096075697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091328825 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112853295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091462145 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090721447 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106454781 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091770665 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.096025749 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09319575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.116724021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092516473 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090289533 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113817834 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102394833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090898886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11221651 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10235569 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.096160221 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114232443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094233067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09615925 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.116013314 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093034359 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096439693 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089661617 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113704251 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097865989 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096652778 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124296109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09290679 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085989622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115476046 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091812709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086398155 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116696456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099348486 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.097278364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11231665 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092045234 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100413812 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097803444 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113876548 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090364709 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089799223 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116533769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090763578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093386825 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109867404 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098447643 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096468453 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095393488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120729753 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088005812 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098541282 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116620345 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10084802 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090068096 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108533835 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088477972 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09196552 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.117172796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100922092 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09452551 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095146607 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116216849 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094643067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09392605 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110063412 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100196541 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096045212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090771456 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115945524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092126073 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093445552 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.113625002 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097925664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09735932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11553022 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102788975 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096432065 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111973243 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092410354 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093707694 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0925233 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115303358 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09634122 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090391199 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108479757 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098397693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097964323 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112893895 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099933844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098243142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091418094 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11858117 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09927216 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09392118 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.112900535 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095724947 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093660891 seconds)
  done (took 59.547736165 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145294162 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098645461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112516501 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093424642 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111094737 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113887114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093726279 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092731411 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113461119 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105464964 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09227211 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091948958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130362509 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114669692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133534999 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102786008 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091820643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114691305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093232272 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092536066 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129228407 seconds)
  done (took 3.187633194 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11256515 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10738122 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124716022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108315176 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099193362 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126935153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103566165 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125075348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109142328 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10053019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128075404 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104761181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.100154059 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122600533 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101115522 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121378522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107905361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099556561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126404171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104416048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101714447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125924184 seconds)
  done (took 3.378700236 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103844369 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.09757225 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09901944 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113000235 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098648785 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092303191 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121138616 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095299811 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101227317 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094822755 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110008177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095159359 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099195958 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113738296 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092184031 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093036583 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121516782 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098875622 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09839111 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091866266 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128005817 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093216165 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.092372122 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110351234 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107446956 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097570823 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113474498 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098436321 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089565278 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095771135 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114964144 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094859775 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.094822679 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110328172 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090394575 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096254597 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117453521 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094259213 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092788633 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.095475505 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.116103605 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.09874932 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097890713 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.114278968 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096452226 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094246949 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11795527 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093952779 seconds)
  done (took 5.80976356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125421418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.152788681 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097481024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124535595 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130706337 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103891721 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096835385 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127085944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094877961 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117382072 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11142743 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107396105 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120407904 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102108485 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098035706 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120887004 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099679612 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095642194 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122930666 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098225705 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.101359031 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120699003 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108596571 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105759051 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122231991 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098293234 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096640333 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122664439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107548268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122424344 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103684989 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102632784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128979367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097202859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.363373311 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119597802 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112275937 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.098495531 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120922574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097278907 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.099298126 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120692702 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101289768 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109573002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118724177 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100266748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096807463 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115769372 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108368485 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.099492215 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124181105 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10977476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099359427 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119551198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101674152 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106859415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.118565235 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096163397 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.098001041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127951061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095522139 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099745395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12927421 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.099236888 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123030424 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110001573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.098015139 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119470465 seconds)
  done (took 8.807497776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132408313 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101664688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131009613 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111204227 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102248045 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12348504 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102012772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101172471 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124200223 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107935752 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101558714 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.221119753 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.118954096 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107020563 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102255362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123282017 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103045574 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102090369 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123284361 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10287482 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101473232 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13124307 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102333738 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110489511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13452801 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098251428 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122264825 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104355738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110942042 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122002281 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114744221 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10151482 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1251288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111425637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135354036 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104031207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09585632 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122905538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103798426 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1014392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.119709431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112204412 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101707403 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.119522499 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104177573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102283602 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132041459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114872105 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12663886 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109486344 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101565595 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131445279 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103926283 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102456379 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133137726 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117590185 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132718917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112133623 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101543377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1329891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111420022 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138896188 seconds)
  done (took 8.090578661 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097276822 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094388482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093243692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114708272 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096276457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093411488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09423662 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116681083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096594221 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094461701 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115332535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096307301 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094644673 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095104954 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114391223 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095485175 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093665348 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093126306 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117073711 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095558069 seconds)
  done (took 2.937479565 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106248461 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113629259 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.095517916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124859631 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098640929 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101036453 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.119978067 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098018802 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096150408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120357738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106828242 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105882014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118774546 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103649434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105261966 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123982052 seconds)
  done (took 2.678338674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118374603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114074322 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.19242495 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100422661 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119015338 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105747975 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.097577246 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097628447 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119586017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104049599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101130291 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122329356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098200638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097743336 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.11904879 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102321807 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095673547 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12135892 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099771078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169870917 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123405899 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099026942 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097653707 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124528426 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099873288 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100956164 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.126408447 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099100101 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098917553 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.119478968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100239568 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104684197 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.116360173 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103870407 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100299444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097164207 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.120470099 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.09976719 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099784404 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119705746 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102296317 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098233189 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118951925 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102458717 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096293392 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.097725742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118303699 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103412461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.097837059 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122021127 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09824255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.103902527 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124684781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109149792 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105527542 seconds)
  done (took 6.985308282 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112228669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099847218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108870171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119129478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100063624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097846144 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122414526 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100435021 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097788315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118222359 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099377359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099801084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098216024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122940031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098798888 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098613689 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116861183 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099874803 seconds)
  done (took 2.858517812 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104071594 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096681692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102176292 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119732799 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098270148 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097451774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117073088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099319114 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097371109 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097069261 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120166663 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098830954 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096684741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118995299 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09948574 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09766994 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.098087423 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119020977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098172317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096462935 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119788688 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098942108 seconds)
  done (took 3.23972385 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11168912 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184091035 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107350377 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193277596 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098343749 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096142796 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128171597 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098460837 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113566272 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117467985 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09841069 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096117545 seconds)
  done (took 2.391460416 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129247218 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137163797 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120413568 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100381724 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107980786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124200401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104885777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101662778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132987645 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115171812 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101663809 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134466839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109890072 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131915027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10872197 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1056564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124412675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102996747 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097709063 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141502612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102613282 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132113649 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103914572 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101857105 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124505654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112853101 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110737523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13721403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102513466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132589407 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109988153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101510378 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133651719 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115341299 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098638392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134325654 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1029714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140488634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108768221 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110530001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121055213 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108414576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110966883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130717969 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111416173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123834936 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110045978 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102542032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124952718 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125971273 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127830688 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112642105 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107025455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132600844 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11210922 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148145297 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116623321 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111358367 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132546378 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115422558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133920773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108485738 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110747593 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137378959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108110552 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133344574 seconds)
  done (took 8.719249057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142384846 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098329277 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125147764 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116280327 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109825923 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126899024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102528671 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102204059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126678721 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100180049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16994193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103627236 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113773077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134948572 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103299963 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124201867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105466907 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111865505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120900164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127791609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102214252 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134984227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111468826 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134251528 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116303107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10781529 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125130426 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103014401 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103121689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125659779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109908862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124322328 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113889483 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098732986 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133271849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104103283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103209758 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131451947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104129988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108008022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135141369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120026505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124832016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104490764 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11407137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126264807 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104972333 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09994587 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125913543 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100545955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114646293 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136931005 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115138956 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134333306 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104198368 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101883081 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125951854 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103928047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102730664 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131727171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112786068 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124828734 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128939337 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103474731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126116838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113745499 seconds)
  done (took 8.652778966 seconds)
done (took 164.298482814 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150859209 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192146203 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145631422 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179859002 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093638299 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127335304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148251889 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149445722 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092580948 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11561234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093811098 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0953929 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180870827 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093930191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092585642 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094218778 seconds)
  done (took 2.995778589 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191723401 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310519518 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109208533 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119465633 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103286423 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10004627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118504207 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100590777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097304046 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128181673 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101098259 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095819395 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127590517 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097742754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09793328 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098753689 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.129259451 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10041383 seconds)
  done (took 3.192552271 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120943992 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.186069658 seconds)
  done (took 1.273010124 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130430184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198209684 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277421397 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172983711 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1217422 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138308653 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153344531 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134004344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180017079 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132684453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114399189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097070815 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145776272 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105583946 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111738824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120996105 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127698886 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109014549 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131213279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10160677 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120073738 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.1267561 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104966046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109699762 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191428132 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.111153238 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1267425 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103503701 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099767229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132642358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106326914 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13573517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112465982 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17515266 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104865727 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173243794 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109155853 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098144885 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.13201713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098761829 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101893766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12639378 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116687009 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119592785 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103586502 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108606769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125063005 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104573425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106856424 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.13245563 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108426465 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127270682 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148568511 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131056496 seconds)
  done (took 7.902627614 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854186803 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142396457 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098106359 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.006128045 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14830665 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114206113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.848265729 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143893097 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232339317 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.907722835 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115821188 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111997952 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241548499 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274143329 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181575827 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36955734 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68857908 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13622934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128182598 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162562182 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108290619 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146895561 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121925789 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439289253 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1015211 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098779979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128358927 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112935182 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178298469 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099894258 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102145291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198592969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288307204 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210052013 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099297664 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119882268 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098616221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185845775 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270722771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221798066 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161430769 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117743731 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098582457 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106485469 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141801375 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095875867 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182350343 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190611455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16872855 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125004868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111904476 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130305674 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108438673 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178544949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096634717 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354261361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360874488 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121308999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107706532 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135337713 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267922972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100597175 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236324297 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123433999 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215115095 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121340058 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815161279 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184315701 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100489475 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105029054 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127893344 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106215665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105891758 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182573659 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40270798 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11313029 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103080722 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121079293 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226651213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101773848 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097844493 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183624815 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099250837 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128794501 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114306196 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110158474 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192539775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269084872 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110159864 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130588864 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1048536 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133353556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101460589 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23137259 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23134415 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153009129 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23368957 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129612215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160242555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186121512 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126973968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167248453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130150717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115427142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128708685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226952018 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134268711 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.120974865 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104888127 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107743985 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160842125 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103132314 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108092584 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188412683 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464391402 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185596263 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096161981 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102109825 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131938353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179164655 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108707231 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268711456 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108463341 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186485377 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106375718 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118733723 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107914838 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183078025 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108571908 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130580512 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108950243 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109757185 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27244916 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222679687 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13403076 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24259337 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167113579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129417058 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172114666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131552928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164904751 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133116286 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106273522 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1221836 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801941543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113516469 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106915042 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128597014 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182209234 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123207879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101877327 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098168494 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095790291 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806225556 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126369522 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09695166 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099574753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130003485 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107570217 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129090413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10645159 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180901362 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247336402 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111896244 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128869046 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100374673 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180245114 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101161856 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099885242 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1211799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101259059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10799543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125814665 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102107105 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192295827 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154360496 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253504237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532533659 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10128604 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100272072 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241449158 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12252414 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319919765 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107792511 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235756927 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186151501 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09691516 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372714317 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166263424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205844114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1026186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191255002 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09654517 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130804324 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158216922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122682745 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107615983 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180226388 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114334431 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135407339 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187552952 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100238018 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252215113 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096841029 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189658877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101180501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130374176 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32885558 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099813556 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117493319 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181613468 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125718025 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101561738 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.692291481 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101750198 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110193492 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130481408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234556656 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185967107 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113964783 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130835146 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114786025 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18294709 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233355237 seconds)
  done (took 46.033124447 seconds)
done (took 62.354498805 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29008066 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258045197 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307686646 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215878416 seconds)
  done (took 2.125962136 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.290898944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164994305 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235652117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098647298 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249889167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097395729 seconds)
  done (took 2.128645858 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498817436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.390593737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344864859 seconds)
  done (took 2.228235112 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.247730485 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.259502666 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349886233 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416234383 seconds)
  done (took 2.353976614 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.301558939 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133541869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12607566 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.21466284 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.285264829 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261022859 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153268674 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204525078 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.153654678 seconds)
  done (took 2.87393118 seconds)
done (took 12.693161208 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.303143769 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.306972527 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.340870565 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.328084664 seconds)
    (5/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.247532412 seconds)
    (6/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.148978204 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.194277285 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.281204527 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.337275608 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105547058 seconds)
    (11/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.249227365 seconds)
    (12/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116626638 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.230303792 seconds)
    (14/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.238709846 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.353196952 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103653729 seconds)
    (17/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.25521775 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.289358023 seconds)
    (19/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.093000423 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105039792 seconds)
    (21/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.2752454 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106654771 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082869198 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.344670916 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.266422027 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.203557194 seconds)
    (27/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.171466255 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121290278 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11509378 seconds)
    (30/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243636533 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.226017767 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.160510336 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109574259 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083973035 seconds)
    (35/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.129943875 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180900791 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179115155 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.160595342 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.164904663 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.130564884 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.1896687 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.160962202 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127085875 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10535653 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13023056 seconds)
    (46/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.185869477 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137978097 seconds)
    (48/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109021965 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109053697 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.158554212 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129621237 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.085367767 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215986867 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.135650654 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13935955 seconds)
    (56/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08378146 seconds)
    (57/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.1139202 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085670821 seconds)
    (59/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18350921 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204473215 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191287122 seconds)
    (62/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184211033 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221827678 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104180271 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12960149 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084860483 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18372989 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.293197866 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08290271 seconds)
    (70/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.140051122 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085494679 seconds)
    (72/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084126535 seconds)
    (73/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083970568 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10532954 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.108901152 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11082455 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12544466 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123747371 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108099707 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.146914336 seconds)
    (81/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.087406548 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130949675 seconds)
    (83/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.146077425 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10536577 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130279894 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107174992 seconds)
    (87/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09417499 seconds)
    (88/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.203194237 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108157643 seconds)
    (90/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.159263101 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.168656899 seconds)
    (92/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17805841 seconds)
    (93/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.145245165 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.131319395 seconds)
    (95/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084941315 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124427079 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206147915 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.108874844 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084020332 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084624168 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.201380001 seconds)
    (102/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.083205762 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085632483 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129338677 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107377855 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098726866 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.105568627 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.132573377 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114860239 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106247836 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.132075456 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084073093 seconds)
    (113/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.158989739 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.10644795 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101387067 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176511313 seconds)
    (117/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189284256 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084206677 seconds)
    (119/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088918046 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084124267 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09977865 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.131915395 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108131146 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105143813 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.178935194 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.084358929 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089542466 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084528041 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082781356 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132050747 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083840875 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083515929 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084475847 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131213319 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.085814245 seconds)
    (136/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.090015812 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106590382 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132853033 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101139766 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084900449 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083903542 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.10828491 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.149244166 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124911644 seconds)
    (145/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083136231 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130958645 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126216768 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084570232 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.202229968 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.084285745 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15727284 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123832113 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111599898 seconds)
    (154/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089667239 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099362321 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.10712964 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085908747 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100482966 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176110302 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.108981794 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109316951 seconds)
    (162/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106132732 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.141428483 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108029987 seconds)
    (165/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094394326 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098954713 seconds)
    (167/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132674608 seconds)
    (168/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084536718 seconds)
    (169/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.084066125 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11049292 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13231363 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127312195 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101385392 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.209868356 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085127443 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090214904 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.110410361 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.084628132 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08566332 seconds)
    (180/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089727395 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083410589 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.109590375 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085404506 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124342581 seconds)
    (185/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084922483 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137769329 seconds)
    (187/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087144325 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.085404188 seconds)
    (189/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082956819 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105827889 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.10999432 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.085853042 seconds)
  done (took 27.587958752 seconds)
done (took 28.588470609 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.218244175 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130940424 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109487747 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107649601 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206290566 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120138954 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142711156 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112469647 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113964524 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131616431 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10130601 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117321781 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107340504 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203321061 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111607862 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127638853 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101055018 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115340831 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144252578 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119918783 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207189519 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10323408 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114560096 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126638643 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182741263 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128614417 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110077417 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10824645 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115305193 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.135002924 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108181814 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100886635 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.14358035 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118541052 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100153272 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133209106 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102047133 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089755234 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10591415 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134267105 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.11644987 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.107175589 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135139115 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103819931 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10800829 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.13091716 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102289303 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112501246 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122784122 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110084246 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10341925 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143876776 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109628476 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100599242 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098973259 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12715961 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115822413 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100272621 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.143253337 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101985202 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101615832 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100472787 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136729807 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102506596 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107303167 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126335782 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109152439 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108782067 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.132439687 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105826873 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1018547 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106791028 seconds)
done (took 9.786930202 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108451246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157911018 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.206930144 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213371927 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132793828 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142982156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124049082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.130128604 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143980645 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126784098 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.160056974 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132034205 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215239697 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114598598 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117296375 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135368576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116925851 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11333242 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.217866707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124256262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159573695 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113363282 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162087644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12541487 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107669688 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165255613 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108802501 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110749908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.134386604 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117086269 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124763088 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.135620645 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108420777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151754856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124019751 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114929338 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142834321 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113408953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107430216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131412656 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119627861 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124893574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131664602 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119156597 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111050082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140943406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116595706 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114055731 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.13644886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113304774 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110518048 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161855762 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115573734 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.115020436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.140119652 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116308489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.114583775 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141485615 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108470925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114715143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133345159 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108871169 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110572424 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.158271293 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109816531 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138485116 seconds)
  done (took 9.756893065 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12763235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136767184 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141605374 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117016405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110646436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124758682 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099160473 seconds)
  done (took 1.903270735 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102717801 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188184837 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210645242 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211161392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181877721 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.222119513 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146982417 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102132429 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132354964 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135150385 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188889903 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241570319 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.10740821 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142249805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189633853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126534039 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191265487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126767678 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114363845 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213538861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11567338 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128354454 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139654295 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102716479 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208195003 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103541555 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268264621 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117437018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107019982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142213185 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112959695 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206566787 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1834743 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142092933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106561928 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212181016 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1814033 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138865617 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198607912 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.131606463 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185271656 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140064768 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117402622 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112401449 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.142701969 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171790121 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14672965 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115440086 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112541181 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221753343 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111454471 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212069294 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.108611245 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138198378 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114397762 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113656022 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147139781 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115461863 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219454395 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117096924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.2116332 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188260005 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.212830077 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210258112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125084538 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212678719 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.18227301 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.137247721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111448304 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113081565 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21416977 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111273273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138725024 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176471063 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142886677 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.189201789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.214156918 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111249261 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113468826 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132782746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110818947 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101184867 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204198424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111437009 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135655044 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120856177 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113818009 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137996516 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108063031 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123645201 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139682849 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113944989 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118233013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139744649 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118626782 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218548442 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111796948 seconds)
  done (took 15.717500226 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107616722 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103993006 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107565518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129738723 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104081651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102709556 seconds)
  done (took 1.723189785 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143196151 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113049658 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14981221 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11582311 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166627575 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.223200363 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227519369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110555048 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157444815 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127611767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.221850643 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202207209 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230805427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117605002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227785452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118435522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.228752226 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112212534 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151255333 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11169518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117537858 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144742941 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112630366 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.214091265 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119654337 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117957562 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137608088 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127269753 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122258242 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.138864719 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117380717 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117906455 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136874397 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111599303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.230689817 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109421698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135341927 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124954095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116687462 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145561084 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.202740834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137171433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125250598 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.125745757 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137491097 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111179818 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124036178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138110862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.201646138 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150195662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12458945 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116608081 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145783757 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127710869 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110070646 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140399809 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125667725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.232473282 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118840816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109881006 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142910362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120544404 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136997442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125988697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115904535 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150316337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113069916 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11556361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111440091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142781164 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12563554 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115598858 seconds)
  done (took 11.34791635 seconds)
done (took 41.492064916 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.566855595 seconds)
  done (took 2.631196151 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.970129229 seconds)
  done (took 2.034069834 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.942683728 seconds)
  done (took 20.042684892 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.541557098 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.620281899 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.061415382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155637936 seconds)
  done (took 3.446884889 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.015832849 seconds)
  done (took 2.09933612 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297663219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26625952 seconds)
  done (took 1.636815523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783453228 seconds)
  done (took 1.866804977 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.542764583 seconds)
  done (took 2.616948662 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36281964 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174110821 seconds)
  done (took 1.622346784 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626382062 seconds)
  done (took 1.716782739 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.61527628 seconds)
  done (took 20.705551594 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247338865 seconds)
  done (took 1.338483337 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287760235 seconds)
  done (took 1.378844775 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.789580484 seconds)
  done (took 4.879470307 seconds)
done (took 69.092654827 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115469385 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116749408 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116017737 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140655939 seconds)
  done (took 1.567482112 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125129436 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118798728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121888819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143066205 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123697874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117167517 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143061688 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119890352 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115875787 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146517001 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118922033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117215204 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146783063 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118355209 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116666425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145174209 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123386966 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117742779 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.117497601 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145737237 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119486015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119606114 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149036949 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122039255 seconds)
  done (took 4.142483432 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11534318 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107481562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109449714 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133280116 seconds)
  done (took 1.562706262 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128525124 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130292856 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154113238 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127029266 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130930928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154628596 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117860766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115771027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.1423911 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128440645 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135099116 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158165011 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131195393 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119387642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155532352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113162322 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119455954 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15514261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126219018 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125909152 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143635012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125804639 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123135211 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152425471 seconds)
  done (took 4.308149179 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190587136 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12597849 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166753012 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15883177 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170860835 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113303828 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.13748797 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14702613 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121222466 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115074104 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14431964 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160992877 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144954971 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117345759 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113914641 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144228812 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128061982 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119717621 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183731196 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119672258 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.119884985 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.154130053 seconds)
  done (took 4.193075884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121506597 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109688908 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103666765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.140106642 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120280636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110549252 seconds)
  done (took 1.805213339 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108201023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102610067 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102314124 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128392825 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108650708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102013096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099925607 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129471283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103162792 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101786191 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1271792 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103321901 seconds)
  done (took 2.421538838 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346348342 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107846566 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135185619 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109057907 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113312918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105248612 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148953533 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107989623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271938387 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.107300698 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146398235 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198113442 seconds)
  done (took 3.001400289 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206318882 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142882622 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301717594 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366880638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162447834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184730314 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26739992 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190022595 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203809739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134659078 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240666856 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15240684 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173494834 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172647264 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161233576 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.163385077 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192716344 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18859255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171805885 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197148408 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18170842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163021414 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204704515 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172959951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133022714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158218101 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.142584359 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124927318 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19245264 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162165555 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199841463 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143329253 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164702714 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217990964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230529916 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202495678 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28758885 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156761024 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177634672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208174577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257543713 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136967741 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216302941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149176552 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154258168 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175796267 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179908038 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.16958749 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15398452 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13861847 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208106551 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196482484 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.179282057 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161144819 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288049891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189267025 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137377045 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197219218 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206838815 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186413834 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189170073 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119846536 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20570661 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206030686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177533188 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163601521 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165959002 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147178786 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16538996 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216845826 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175828156 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183421808 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225136036 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126708061 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18068071 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170450437 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2018476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173520782 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184338322 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115276282 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171330879 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132620669 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124168158 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.225284655 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118840883 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224210755 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128491611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344828199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216626476 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15384071 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186245161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155330692 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184686765 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140861689 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136081147 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144209044 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157673228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180617798 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12800697 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181561048 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133606016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152225942 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147780126 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117332847 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182941114 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132381921 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189123836 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683469 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155174153 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161342949 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171806222 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149316586 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194631756 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17808154 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155301489 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128012069 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212623413 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152705637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1542889 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173479981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20720421 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147201287 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160095809 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160414324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2138321 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136834206 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210773755 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132499522 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159303436 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.146699127 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185066747 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154969458 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178007956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124750992 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173472996 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196128978 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150831113 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133076208 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189899121 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130232403 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120512631 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163312768 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131869227 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164227077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142990991 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130548822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178422727 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155298607 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180720643 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154469913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159433178 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172521642 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156100065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155610899 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170370915 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115277985 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20055094 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181767101 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152450139 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200514931 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189954376 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214643966 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155096968 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156450776 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174733308 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150222 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116844121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156430365 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179182442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15798009 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.20387959 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212058131 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19303193 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147582997 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171361437 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167712739 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200179083 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149268638 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167759112 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154202803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188635592 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117053157 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119265413 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.150491396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135673056 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12514118 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160188072 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203372141 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164693708 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20754599 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15370086 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164111213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178081673 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151516216 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157767243 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189224005 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134508088 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206252502 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203219183 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165198117 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135019367 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187696148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115858627 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15009811 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129284237 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189414921 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133852811 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13041685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167863714 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179097744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199814499 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170213539 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198480888 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193696119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216354269 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116182416 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161714263 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19615691 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179040393 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182704476 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136241509 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185486983 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174478831 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200337 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184028664 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182932397 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158613016 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215467803 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.178368378 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128323587 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1427288 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184144598 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133505179 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192227371 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142053147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154429337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149852467 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16186065 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122829715 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214186029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139336295 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196790955 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155649054 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197162622 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120579136 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166551796 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157083075 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168852346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115080637 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167639795 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209443171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167849226 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153368291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200148986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126721798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343664475 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186715411 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204716116 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131244555 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165732139 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158856197 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187296653 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159587733 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206105575 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136362833 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203102893 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155079611 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167378729 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126643149 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171267106 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149658536 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146282038 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.156725807 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150608643 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165987566 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212421968 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136359282 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155210512 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184490197 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14405667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176738807 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135901563 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221436872 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15214553 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200873978 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150257789 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193755861 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218393128 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121236941 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123646618 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15539026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178195929 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153070727 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160564338 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202118462 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217580718 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160264995 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188140455 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133399158 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.149561255 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156798128 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143793775 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218347315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159821758 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134387802 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219308416 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135015628 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154781874 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158210963 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302939814 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141636439 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20036495 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120536408 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.299302161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126329084 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127368761 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188422345 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196292767 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130866127 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178912737 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186463793 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139177502 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189138449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133031272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210658802 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219439631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164494907 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201650488 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140767769 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188179125 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1568057 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203391383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1384138 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170254826 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15718153 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209309322 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177964701 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157876442 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154990459 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184066419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15352535 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200172306 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132716915 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218199975 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124836348 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189395419 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133631062 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149755698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156630146 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20354974 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128293711 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206036091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155257774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158164822 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123193511 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169120455 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154603788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133649292 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15619311 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210413078 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126589063 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159745064 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206915639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126311414 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182502514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142955286 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12481778 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167701916 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138373031 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155484017 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169021766 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20918506 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128775063 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203970675 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162800504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191494893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155982896 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167667856 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662438196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1230364 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207294045 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143300012 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212520971 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173783037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161132039 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154718229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175049176 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159212658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175612512 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23570608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188575511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179173893 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130801987 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138015854 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165748188 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130137653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175993743 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156050323 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13634824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160509923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15354067 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167640732 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145691108 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134583639 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209443907 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171993806 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184576491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207779888 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132918069 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188809491 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171684891 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156675881 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161593461 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200474224 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138349331 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173714445 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129247142 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132034198 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207288302 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120497499 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183528176 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156506992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184196338 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154157414 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159800182 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160330843 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163299188 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158130924 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12314767 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178158477 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156835819 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158530839 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123909298 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155786538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187577219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150422867 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150912383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169203782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210852324 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120814363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128021924 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305388388 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185611204 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189509825 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174676662 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132820072 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139935733 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180507963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151425563 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187594267 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125597851 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153904066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12831733 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.171345718 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.179298528 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155971221 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204044279 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157419783 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220401029 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131041974 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.315473493 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135078767 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185607795 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.126612794 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123732349 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16693568 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13039221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166029639 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214799142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178548833 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151722573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172964666 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125139271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151433736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128438133 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16087655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178576015 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155770659 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170563048 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112814606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168529851 seconds)
  done (took 83.111641826 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215750592 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.16447674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171142472 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225170067 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199135126 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292272022 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230982693 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255788426 seconds)
  done (took 2.931968093 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121287097 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16169807 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141914008 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146571171 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118133549 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454548002 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158332409 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119789224 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166462843 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160303756 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142164713 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618704495 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115030625 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146403685 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.131063042 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.118553282 seconds)
  done (took 4.19728784 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.524577469 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.596667908 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.338294308 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.282605607 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236131084 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.1828888 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.810015137 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194594214 seconds)
  done (took 13.354538592 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147399594 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135242585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.847122838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.263633547 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151394161 seconds)
  done (took 2.736792691 seconds)
done (took 130.413060303 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121892988 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120397876 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119561079 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152798504 seconds)
  done (took 1.692822854 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186676196 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096392252 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098731427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123087797 seconds)
  done (took 1.692360737 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442459979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095861624 seconds)
  done (took 1.752458529 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149861622 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146823741 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165058152 seconds)
  done (took 1.663542283 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142386058 seconds)
  done (took 1.333699279 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12864336 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121209985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241573543 seconds)
  done (took 1.688755117 seconds)
done (took 11.019632253 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121692955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420357166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433092145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134945466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710402156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427236562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.062191852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174824419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17762504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136764836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133097506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688840971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046558033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.365499739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004294971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.391515002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696520012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111430536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14563758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112441338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.045009635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13602572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114330158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11216938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.689925954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449800239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109500101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372910955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138797246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113408346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398982933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1390846 seconds)
  done (took 17.497706906 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118686601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174227128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146238095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112991706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113187822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139156011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122822767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123183418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205914941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110473807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160480752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111333235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114872617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11019225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16472721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109728978 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112417765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142475561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118909213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112373426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161300105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110419776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111775267 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141527543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111590825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13200034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138447813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123481982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10963555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143049302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116651014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110642692 seconds)
  done (took 5.332262636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159528654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18106659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148427742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148147741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187850481 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113831062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195165787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177259969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205328873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112247248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131798213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136863149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153790773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111489113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163923745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11248707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113357174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140766372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120831698 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112111307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161189266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11082744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112659911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139312736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112400075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133847353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.13892387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124183554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109671453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142104231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116992363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110331937 seconds)
  done (took 5.644382032 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126805999 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126012093 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133294837 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163681423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120899383 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124914075 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153921779 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121609225 seconds)
  done (took 2.279332343 seconds)
done (took 31.948560268 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136120567 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128959275 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130758176 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153716648 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195218064 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146284856 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128053255 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116153535 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152851447 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131862168 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109697036 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116601569 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160648799 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120773727 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.227251352 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125869835 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230879284 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197195459 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146188438 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125639238 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117411082 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23351711 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121215097 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116198689 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.23506847 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112567771 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.217359558 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120421469 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14877792 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114381556 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.195735942 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.15281534 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115981123 seconds)
  done (took 6.17593108 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213151582 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117274513 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150247978 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119551395 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117677068 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148226394 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216309924 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147852363 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120898481 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11883712 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.1193253 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225357686 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122954816 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.141064495 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120069609 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11588865 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24547371 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120034458 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110436483 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097018286 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.141595355 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118718585 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256882799 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.11185831 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118988897 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148047867 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120894568 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122551063 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117751115 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.149092271 seconds)
  done (took 5.508477715 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126600021 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131868029 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136638993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215354352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149213327 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161025427 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142027963 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134640892 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173419464 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11441445 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128789378 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18160583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131063414 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122904701 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14769759 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133778021 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136236676 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141941131 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122120926 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130295103 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16203655 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133143608 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141233181 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121036749 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.142538676 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120685047 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122188066 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.15852744 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126175179 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128290482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145416424 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117393977 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114737831 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178543833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115608979 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126167664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168720815 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125403006 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127428165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175516031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117639686 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115891955 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169441007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169431273 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11379197 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157284398 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125065314 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126333825 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140035521 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134040218 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155811509 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141618724 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136275964 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113723736 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.139247477 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12363363 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114027876 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115313532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157548015 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117846665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137026314 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151075137 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124419405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115266711 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152319862 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113928586 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111958383 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116449892 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170992279 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120802525 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149403648 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142690258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126437609 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124175142 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152700284 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126258367 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112773773 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12293397 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154688609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120991277 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125288063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146468794 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117714227 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129619329 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164728402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129799969 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124830017 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156252948 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11805958 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114273731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158895572 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116236712 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118892635 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125715714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145116232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117294547 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125788221 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154937156 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113641357 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138515912 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146939477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114469734 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139873381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11893569 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.150262908 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124141109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154540484 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144395224 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126012127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125987753 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144802314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121788682 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116825178 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.142810698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133769085 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128124767 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.148866512 seconds)
  done (took 17.08229862 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328429309 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.314788728 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182950981 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.317244281 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126312124 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.244331633 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310255143 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.311925205 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113066419 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184229679 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166147515 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.28227391 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145521741 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142697914 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.316368131 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369234786 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174564208 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152076933 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182065513 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12800953 seconds)
  done (took 5.70691054 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137757069 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149813524 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168516382 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145141012 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120890627 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159636608 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113911304 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133608604 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15219049 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124865351 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11674255 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159369943 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12382692 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128212652 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159147581 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155140655 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122447098 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147519474 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138433354 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118147155 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.108554095 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.174605335 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122514581 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166313774 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130303195 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125114795 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141936656 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12148431 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117187852 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.119448348 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148553409 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135601606 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120238111 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.140845266 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126683153 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130853666 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.116629355 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147419582 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119048179 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117456286 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160252224 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124844947 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123126708 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104314833 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.162179363 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117724877 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124858796 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155672517 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115672531 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129386667 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127074137 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.156031601 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122333834 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131444423 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.148301078 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131249574 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124721971 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.155027784 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120613455 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113229573 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141542942 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120195691 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120308608 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124329212 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.158389601 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137352275 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129904471 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14420152 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119908587 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118261852 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148954157 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129017321 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135954408 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150883702 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120182123 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12559238 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.148049204 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101887328 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12506013 seconds)
  done (took 11.788739361 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140946116 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121556246 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132763184 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182208057 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125859651 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119868089 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152691989 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135682901 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126587845 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162851075 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128918737 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127105502 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167863947 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125741164 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121048386 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161330089 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126693755 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15346216 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163788707 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142969421 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126412179 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151243813 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128572532 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126540964 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174893467 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12730261 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141436227 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157599526 seconds)
  done (took 5.192530003 seconds)
done (took 52.660951439 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.338875105 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.561327139 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.330161279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.32659938 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.348753886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.333631542 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.325322237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.324233366 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.896154978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.306634674 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.326172614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.326605756 seconds)
done (took 29.972267118 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.444028238 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.847508082 seconds)
    (2/2) benchmarking "String"...
    done (took 1.633453884 seconds)
  done (took 4.718666339 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.318535457 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.321324625 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.54370916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.317446535 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.322889336 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.338276363 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.330350545 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.334674301 seconds)
  done (took 16.73043284 seconds)
done (took 27.431850584 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.348474503 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.620313758 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.587853486 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.321011436 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.339117588 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.344550674 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.325260164 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.365472216 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.330768216 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.323888867 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.742278236 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.615277887 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.340030508 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.747483351 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.326312719 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.322428313 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.337860964 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.630607084 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.326513702 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.356370236 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.301034356 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.307173864 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.344725902 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.330748448 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.32780907 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.32775008 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.359169831 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.323960315 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.609959155 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.334149972 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.365144376 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.326376656 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.358882162 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.322920375 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.330104154 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.334554335 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.575940446 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.333543074 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.309254519 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.33752583 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.566677771 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.341874625 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.323014096 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.332699222 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.326568756 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.331741189 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.316267536 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.438344841 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.344984497 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.331767595 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.400848525 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.701540372 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.33789919 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.345565717 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.327984054 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.609230503 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.345844816 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.385054038 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.35313028 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.35026419 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.324005492 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.323261619 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.369932044 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.338571247 seconds)
  done (took 152.201627109 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.324541632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.328225441 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.327728959 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.390120897 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.327944592 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.32877584 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322199805 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.322291172 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.328602421 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.328551833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.328507783 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.324707676 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.328207762 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.348145885 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.329779356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.34575272 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.328712663 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.324624023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.346633567 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.324448829 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.326533892 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.329929877 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.326941384 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.325642639 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.331959559 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.408542353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.36732198 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.337618827 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.334553799 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.325670267 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.329161281 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.37745467 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960322079 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.191954461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.334659085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.358496776 seconds)
  done (took 84.84988945 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.325501037 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.324091157 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326190921 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.358508828 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.326180749 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.916965309 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919685244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.086866517 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.746240363 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.749197308 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654550214 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.331277523 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420708306 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.337590088 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.331142609 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342796006 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.35531418 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32623151 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327128893 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.91862487 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.345024598 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.513934256 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.510162827 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.343396041 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360985921 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.720494227 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327233821 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360858068 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.662439234 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.378244036 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.326260376 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.736652018 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.990368585 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.44543272 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.328331907 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361243854 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.327206046 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.61163282 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.327534368 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328478655 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.33131101 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.327239412 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.032697805 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.333112127 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922329769 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.33232595 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.348506334 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.333310078 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327101577 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.616329401 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.091273634 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.333491609 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.329119909 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.330295913 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.329076419 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.327838514 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.362540349 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.544002804 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.42764898 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.329096755 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.332293443 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361522731 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.328578916 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.327361198 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.527815427 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.333125793 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.648953952 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.394362885 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.461938915 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922098494 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333674058 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42745099 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450652692 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.32878101 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328251893 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.330170891 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.329636348 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.441009002 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.329900156 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.754557434 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.509813694 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.34631079 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.771563241 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.336510659 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.427651904 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.330120554 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.735263218 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.335099216 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.329784036 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.137932266 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434259319 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.329452061 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.33132865 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.329816983 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.752461238 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.331526146 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.922992999 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.611360333 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.335719308 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.719118988 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.336302547 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.762213776 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.915823646 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.056134503 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.335953852 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442589972 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.508382915 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.348641942 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.330200571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.754412735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.335744735 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.385761518 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.333110133 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.727565051 seconds)
  done (took 381.892613814 seconds)
done (took 620.163351096 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.217645324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.164640774 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.312191389 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.170491978 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.151862084 seconds)
  done (took 12.244753854 seconds)
done (took 13.471805343 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526217248 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524846619 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391232408 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529379382 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363005864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541828811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516664828 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.351587315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443961547 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.414446844 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440592425 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.385750005 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.364949716 seconds)
  done (took 20.02406976 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608395286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.338733933 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398965986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593077508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.38052189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.631253034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.647152452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.339170763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48482347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346116011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345680455 seconds)
  done (took 19.344348121 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610053069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.340678524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394804467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605489227 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374101808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.611407355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.687669837 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.340413039 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489052532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347155901 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.344301631 seconds)
  done (took 19.375026385 seconds)
done (took 59.972333031 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.206290505 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 18.326914765 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.36881648 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.42630066 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.345382944 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.361524314 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.426589741 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.34835664 seconds)
  done (took 30.039931418 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.346243953 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.345047864 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.343437633 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.345717664 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.343100578 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.344824563 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.342881213 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.346310694 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.342810791 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.344975331 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.343946154 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.343741648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.344931689 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.34572138 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.343297887 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.347833191 seconds)
  done (took 22.74619451 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.34750653 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.344459736 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.344796873 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.345002244 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.344761565 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.348257458 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344789807 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.343943147 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.344959761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.343602258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.344937887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.343552919 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.343287497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.345836599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.34334941 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.345521975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.342679842 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.345868293 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.349341627 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.343986873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.346669383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.342777046 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.344389716 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.343973824 seconds)
  done (took 33.509712237 seconds)
done (took 87.525092044 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.334032666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.337432758 seconds)
  done (took 5.902894937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.403334452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.4069484 seconds)
  done (took 4.040397863 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344163502 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.342924768 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.3481183 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.344264176 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.344287285 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.343148927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.344172833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.345573143 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.343803235 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.347396962 seconds)
  done (took 14.67925091 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.344745349 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.344496363 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.343185398 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.34842428 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.344922345 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.344072143 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.344612446 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.343353726 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.345128267 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.345025987 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.347432307 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.345132176 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.344953262 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.346711716 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.346668107 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343912096 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.344103715 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.345434495 seconds)
  done (took 25.444813052 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.358973114 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.366671984 seconds)
  done (took 3.956729109 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.484956 seconds)
    (2/7) benchmarking "second"...
    done (took 1.387297514 seconds)
    (3/7) benchmarking "month"...
    done (took 1.467345821 seconds)
    (4/7) benchmarking "year"...
    done (took 1.451407021 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.387441275 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.367257327 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.38876208 seconds)
  done (took 11.166927562 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.346257798 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.557865226 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.685642249 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.88670959 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.349933669 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.351805339 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131824062 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.350515643 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.350417851 seconds)
  done (took 15.242981998 seconds)
done (took 81.664340334 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.335362255 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.405575185 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.353377221 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.361405832 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.684915557 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.347936241 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.340645238 seconds)
done (took 17.061222593 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.322448618 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.332290964 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.339489589 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.355234442 seconds)
  done (took 10.582344512 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.341507499 seconds)
    (2/2) benchmarking "read"...
    done (took 1.635019298 seconds)
  done (took 5.207883199 seconds)
done (took 17.023482378 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349654575 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.34762504 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.347225211 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.348320799 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.346549685 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.347820806 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.347829238 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.347786268 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.348805696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.348827404 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.347663483 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.347433198 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.349839704 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348888752 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346586435 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347737888 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34888353 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.346924741 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3466231 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348970601 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.348069173 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350488743 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.347756554 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.34869966 seconds)
  done (took 33.588373276 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.351082843 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.348759846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.350088074 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.349670855 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.348462444 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.350599065 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.348705079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.34923099 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.350558567 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.34980868 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350294329 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.349659422 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.349189344 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.34852715 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35150406 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.348113365 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.350157298 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350193681 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.35132084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.352172029 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35049469 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.350162805 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349975203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.349842568 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352405719 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.350787054 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.347015014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349045468 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.348990258 seconds)
  done (took 41.733002484 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.356055855 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.357867189 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.35275437 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.351042987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.353404193 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.353303489 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.353511852 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.35314705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.352942725 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.354561798 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.353822748 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.354579624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.353816903 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.353814005 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.353670038 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.35473207 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.35381427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.354021315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.355571328 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.3541012 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.35490589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.353672309 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.35392526 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.354368645 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.353939539 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.355776407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.355865469 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.355216921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.355195564 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.354604191 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.355540175 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.355173949 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.355151605 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.354738554 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.356614213 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.35621303 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.359419129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.360796539 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.355836966 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.356492652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.354477976 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.355896155 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.355253414 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.35728071 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.356793293 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.356159435 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.355875918 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.354830063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355780185 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.356060629 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.356737555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.3553042 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.356667214 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.357394301 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.356864265 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.357546252 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.357069327 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.35595525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.356363106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.357976996 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.355831118 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.357114448 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.358296428 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.356045568 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.357645763 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.357511484 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.359156035 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.357502066 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.355696929 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.358969338 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.357831969 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.358223349 seconds)
  done (took 98.847691779 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.354820582 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353104748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353166766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.353417362 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355121462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355830431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.354048403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355130106 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353992071 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355684996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355138255 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355482495 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354207208 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356195032 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357156686 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354257983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.355592693 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353799519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.355439777 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35735582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356357179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3544669 seconds)
  done (took 31.048558753 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355875657 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356909778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.35667361 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358783586 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357669568 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358470759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355875143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357187512 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35723873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35651113 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355427484 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357562773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358228483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355166546 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356444442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357707498 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357124682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358177498 seconds)
  done (took 25.667157699 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.357152386 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355878773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.358887187 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.358276816 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.355440837 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357782605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357963208 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.358470793 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.357729276 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.357507495 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.357500746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358718766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.358140523 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35745522 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358613378 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356730456 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.358030373 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358265023 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359135891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360193112 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.357791429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358282476 seconds)
  done (took 31.115189221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358997501 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359374894 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.358952508 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.358129388 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.357457852 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.35765429 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.358561772 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.357610266 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.359429165 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.360436703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357754813 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.359744475 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.358458341 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358737715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.357617969 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358159812 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360414575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35814912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.362272933 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357652887 seconds)
  done (took 28.418836835 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360108118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359803069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360593939 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36122024 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361149744 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.370078875 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359964928 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.361102948 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360520927 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.3614172 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.360807366 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.3623061 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366740846 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.360549194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36120859 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362784411 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360691344 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361353115 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362995763 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366630851 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362304076 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361901712 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36119618 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.361845089 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362608316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361395904 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361650091 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365037635 seconds)
  done (took 39.384042337 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361593978 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361350906 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.359132083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.359898179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.360295383 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.361868642 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.359943344 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.359962033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361690642 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358905072 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.360826928 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.360356779 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362909804 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.360133581 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.360456372 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.360507374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36069953 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.359899397 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360327402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360348399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.362687112 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360446857 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.359858936 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.359164984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359916057 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.362196321 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359601301 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361640869 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361104597 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360468127 seconds)
  done (took 42.061642531 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.408526843 seconds)
    (2/2) benchmarking "in"...
    done (took 1.409394826 seconds)
  done (took 4.061482668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.359976461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363957733 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.361742005 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.36251195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.361000504 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.36148967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.361480953 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360471405 seconds)
  done (took 12.136871098 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.35748549 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.362902347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.362393554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.361861997 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.361766582 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.356660716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365397279 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.367338588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357310937 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.359168581 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.362512695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.361933303 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.360050118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358562191 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.358078578 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360273332 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.365556724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.36320773 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.362925405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.364308973 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363278209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359115532 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362691031 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.365936121 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.360250855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.36888336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.364847204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.369835554 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358592019 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.363267304 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.360781266 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.363559803 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.363893295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.365251237 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.364904249 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.364522773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36765174 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363704318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.366913233 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368992751 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.364076633 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.36299947 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.359719604 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.363428312 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362236083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.366795237 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.36660231 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.363886412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.359935916 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.36394664 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.367631891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35936488 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.365779345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363515089 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.363765008 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.369378735 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.369772753 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.363019064 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.366754559 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.370034488 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.376926568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.37243565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364766672 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.368631566 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372053162 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.37855048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36886958 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.369657398 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.365753121 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.366382299 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.367795617 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376712963 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.375103019 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.368045247 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.366647961 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.366614698 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361835542 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369198094 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368709442 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.369412519 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.369294804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367111731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372635373 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377751089 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.36308888 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.367642571 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.367890153 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.368482487 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.362186148 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.37202956 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.373207476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.365961068 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.362265456 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.362560925 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.365198423 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.370755656 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.365185655 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364778768 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.368163163 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.369381 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368056337 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.367596731 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.370040038 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369096095 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367667277 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.369009487 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.37007225 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362122766 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.369381381 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.371503698 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369379329 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.366022794 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36916802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.368089848 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367854502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.369775783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.370253753 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365845003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.371083559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.370001008 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373381051 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.385187126 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.371770357 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.369382947 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.370084616 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.377166371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369882976 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.366744368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.373029692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.368722212 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.368857753 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367637896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373967065 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365730774 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371665924 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366003357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.370770743 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.370094482 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.37107538 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.366769892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.369714762 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.366211067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.3681686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.37071046 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.373083401 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.369296585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.378649185 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.370140635 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.370097237 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.369219566 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.371706592 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372415303 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.367994616 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.373164032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.368035465 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372221575 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.368057099 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.374407877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373885316 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.373287131 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370602386 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.367664997 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370978419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372930727 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.371420863 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.370008916 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.373292395 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.372696116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.372810617 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.367577895 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.373668626 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366618807 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.371405883 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.378444299 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.372969717 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.374185417 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.369588133 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37450653 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373454702 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373407633 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.371064097 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.374076481 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374712023 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.375917773 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.376899675 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373823406 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.374639375 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.369073653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.368848051 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375096711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.371514397 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.378752143 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38172738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.38167173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.370399955 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.377565889 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.36868633 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.375819209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.373543752 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.376066991 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.375647532 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375410014 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367898169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375644976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.371375246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.374681241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.369479172 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.375403334 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.374624111 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.375238129 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374257944 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.370313748 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371505262 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374884546 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375842265 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375000115 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.369219229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37616943 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.368381094 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.370927914 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.377326305 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.37550757 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.376480578 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.376316122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372328379 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373858286 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.373677334 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.371656852 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.378349359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377054688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.376600242 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380464358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.376857067 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.373037643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.380549448 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377272793 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.37302239 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.376956974 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.379819026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.375713396 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.374700658 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.382268642 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.381079366 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.377099665 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.37804424 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372661975 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.378538499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.37987284 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.378657983 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.373184777 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.378444889 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.373590449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.377568415 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.374419633 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.376251353 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.375463702 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377109201 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.381455724 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.378946045 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.374119242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.380428775 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.378354842 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.380124697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376234954 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.385222791 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.380522742 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.376759365 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.377772474 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.376188888 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.381863181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.375019924 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.380693527 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.374102278 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386329203 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.392563477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380067485 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.379036423 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.379839839 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.380507051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.379310041 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.37725886 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374936865 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375897849 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.375688009 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.37679679 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.381213355 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376384378 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.381901736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377949677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.379133112 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.381479393 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.381084472 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.375065312 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.38098644 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.381604264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.380417128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.375461435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.380055219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.377595788 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379152801 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.37729169 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.376899354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384816259 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381349227 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.378764162 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.379065885 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.379745177 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.3786375 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.380351614 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.38470959 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380965246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.386724891 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.380268173 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.384224912 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.378853281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38521873 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.384787113 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.379658615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.386752152 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.381269436 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.376610856 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.377428689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.383554641 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386808008 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387124343 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.379776616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.385682991 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383140043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.383340065 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.382570171 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.383405408 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.385067431 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.384949672 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387965376 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.384183942 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.381852543 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382864396 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.385977427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.383820629 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.384030496 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.378303453 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383194656 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.386682864 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.380980844 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.381126277 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.380464785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.384661428 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.384948136 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.385786359 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.38481774 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.385949519 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387628463 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.385108557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388583505 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384379474 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.387173254 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388887883 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389085431 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.388932619 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.382852312 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.385857327 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.384221364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.381423645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.380484622 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.381872924 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.386453268 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.381626404 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.392420866 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.386393001 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.383131664 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.382637188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.388596224 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.380879818 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390769366 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40214666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.382766934 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388689528 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.384482243 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.381886605 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389290166 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.385922529 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.380161932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.383383896 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.390214891 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.39287089 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.382359675 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.387661365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382384163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388623717 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.387055474 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.386132101 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.387036987 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.387222697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.382184388 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.387831906 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385542023 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.388772246 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.383895321 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385327872 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.384482671 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.39266182 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392400189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.385034734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390215136 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.388598918 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.383869819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385620627 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.390957604 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383811095 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389043054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.386589535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.390616451 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.388196214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.388991681 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.386963257 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.39121022 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.384864295 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.385791031 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.389943081 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.389867817 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.390974167 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.386176358 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.391605905 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.385795808 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.384446568 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.390260682 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.385955829 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392258649 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387892079 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.389744437 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.387306604 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.389267508 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.389555857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391170858 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.385037805 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.386274648 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.395323049 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391596821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.393399038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.391912025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.394098098 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.386658014 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391539864 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.392276767 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.386434591 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.387296853 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.392472891 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.388812867 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.38902042 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.389249961 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392707122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.394263665 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.391042669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.387583621 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.396505076 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.39360011 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.395231157 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.389510925 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.390234663 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.389056913 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.39256116 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.395245475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.391191551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397671487 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.393813406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393467609 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391053428 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.389189918 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.388212671 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395744398 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.396448207 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.389437384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.395014851 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38775041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393181783 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39379844 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.392197857 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.387762778 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.388850131 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.391495621 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.393753665 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.392847679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391032589 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.390533947 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.390854515 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.395297332 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394481014 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.393712776 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.392868105 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.388738065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395120177 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.389248494 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.393033861 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.39257626 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.390192856 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.39719114 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395072343 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392740954 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.397863735 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399441115 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.392902772 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.390318811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.391199381 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.393478518 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.396941507 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390748522 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.392515331 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.396119713 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395867102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.395156412 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.392545453 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.405350229 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.40063082 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.39048686 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.392145691 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394568446 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.397582043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.395220826 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.39754082 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.393105847 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.396079527 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.40123833 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.39703747 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399306109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397642264 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.394027577 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.40023644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.394493483 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.396807825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.394874402 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400790663 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.398195108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.395461153 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.405522802 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.400973481 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401567725 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.41749667 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.396179395 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.394302738 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.398017901 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393877493 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.399249612 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.394978568 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.39960571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.398460911 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399467398 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.397966258 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.393846469 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.397041237 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.397870747 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.405980368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.39760912 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.394312092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.393832547 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.398113227 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.398382429 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.403522026 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.398978138 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.398573409 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.399386865 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.394234895 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.406549018 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.407401942 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.40089631 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.400191459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.397478931 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.397803833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.399175123 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401197043 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.404509708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.399419473 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.399911239 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.39580855 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400914393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.400090022 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39531286 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.395429632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.395955928 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.400399421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.407702987 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.411558434 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.400328385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.397032916 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.400872185 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.401820356 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395810206 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400733251 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401602685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.396878911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.398632684 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.404974619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.401164673 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.400938321 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.398951083 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.406281322 seconds)
  done (took 824.428433477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400401021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40050907 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399959413 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400362344 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400916513 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400189934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400276078 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.4000726 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.400296379 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.399771852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399279556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401616524 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399562018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40122782 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400129411 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.402241686 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401843508 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.400941068 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.401989298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400422909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400299828 seconds)
  done (took 30.689363286 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.404537384 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.401365316 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402130665 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403086886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401511797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.402997044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.401554696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403388611 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.403157659 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402104471 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.402896802 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403342602 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.40131827 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.401836843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402090713 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402855438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.404162467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.402725431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.403104723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.402347501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403339409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.40329685 seconds)
  done (took 32.13893688 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.405159373 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.40431373 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.39968627 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.404335491 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.404164377 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.401987507 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.404651678 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.404019172 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.403675102 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.398678079 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.399454146 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.400803848 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.405384085 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.409044322 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.402208604 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.406968414 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.406427479 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.405714054 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.40367288 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.404334832 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.407348221 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.40820014 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.406233382 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.399332289 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.406369902 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.406584046 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.404116275 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.406501501 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.401573528 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.40780363 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.405312625 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.400954211 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.40432667 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.402420833 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.403569077 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.409028063 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.406901395 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.404108391 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.404957719 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.410597201 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.421399283 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.407628208 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.40903884 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.409335672 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.407414639 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.40651794 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.412079434 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.406152951 seconds)
  done (took 68.741955849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.407076021 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.40777867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.407238859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.407634558 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.408233244 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.406926299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.408344666 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.407902392 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.406021715 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.407174585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.408170692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.408663168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.406079732 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.407353391 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.409338608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.408329465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.406956234 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.407819887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.406619864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.407997468 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.407110132 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.408471721 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.408312121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.408106464 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.408597502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.406851172 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.407465624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.408330591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.407580157 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.407490452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.407767986 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.408652957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.410313442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.408865918 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.408261701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.409152961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.409272272 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.408155634 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.409046039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.408403743 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.408445292 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.409656592 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.408949082 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.409559674 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.409414744 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.407676494 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.407707933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.408145531 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.40865892 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.41005928 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.409300224 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.40733943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.40919812 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.408425624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.41116862 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.409681902 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.408896846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.409976108 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.410574989 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.410462489 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.409909159 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.411257057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.410265897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.411651616 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.411692792 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.410048169 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.410877571 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.411854727 seconds)
  done (took 97.072347262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411049954 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.41176265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.411565649 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.411456666 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.411434399 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.411313173 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.411910209 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.412728727 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.413025071 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.412425505 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.412514922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.412863736 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.413355639 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.414056416 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.413520951 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.411256256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.41443641 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.4126748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.412664265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.413846886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.411688 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.412234757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.412960772 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.411749146 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.411318908 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.412589908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.412717235 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.413027838 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.413603173 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.413820476 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.413193996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.412781569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.413238261 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.41463475 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.414726236 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.413881503 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.413930897 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.413216196 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.41445311 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.414062988 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.413403351 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.414196672 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.413174867 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.414003532 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414271602 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.412878944 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.414617955 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.414490816 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.415765835 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.414885748 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.415081747 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414822969 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414918797 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.415080042 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.415883338 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.415176883 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414640804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.414222061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414343382 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.414994771 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.415935333 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.415864102 seconds)
  done (took 88.925941783 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416348747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.415651458 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.414312483 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.414047941 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.415727102 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.41405678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.416053077 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.41749912 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.415957838 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.415843236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.41740739 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.415936506 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418082584 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416878035 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.415037952 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416218494 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.415558651 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.416704226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.415961537 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.415429899 seconds)
  done (took 29.608463998 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.414830421 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416905694 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415062497 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.416033905 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.41674953 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.415271428 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.416923999 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416545976 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415844791 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417388666 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.41749988 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.41781977 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416670659 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.417668911 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.418251363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416456807 seconds)
  done (took 23.956368097 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.416924774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.419119688 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.417241531 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.417197661 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.416896002 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.416959642 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.417819577 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.416779731 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.417649016 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.419106328 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.418240777 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.418108208 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.420480113 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.41793241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.416987156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.419121947 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.418015001 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.417526871 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.418256718 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.419320976 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.418567638 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.417727148 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.419948851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.420405286 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.418820234 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.420008616 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.418827269 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.417430052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.41842269 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.420157244 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.419132541 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.418956635 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.41899744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.418330623 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.421008614 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.419305886 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.420346488 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.418670787 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.419880642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.420051204 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.419561845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.418263004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.422338724 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.42047221 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.420829248 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.420298469 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.419817137 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.420123006 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.419026926 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.419844657 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.420933985 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.42249557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.420912998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.421497622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.421173166 seconds)
  done (took 79.344191941 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.424365703 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.424251409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.424074794 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.426370016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.425439938 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.42579749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.427053322 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.425621247 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.421328224 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.423315582 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.420846471 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.423411412 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420455809 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.422714814 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.419888413 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.420892305 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.420676763 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.420138897 seconds)
  done (took 26.910559097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.421612494 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421972723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.423225504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.420917046 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.42091002 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422867542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420850698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.422952448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421976549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.421459572 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.421313878 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.423729126 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422757012 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.423508922 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.421683357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422026371 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.423060099 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.423181045 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.423058428 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421458902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.423983132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.42331468 seconds)
  done (took 32.587460451 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.417489674 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.41751391 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.417402473 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.434106243 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.431949324 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.417860143 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.418396301 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.417899765 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.441081137 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.461410329 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.45474766 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.43259196 seconds)
  done (took 18.458617284 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424953631 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425795246 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42531455 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426207434 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425534413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423976047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424698019 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42465533 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425760325 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425309407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425119817 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426925553 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425792724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425373255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426351137 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425641049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424600416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424793192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424950119 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426535644 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425231232 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42579262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424962293 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42520277 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424912638 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425939487 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430112335 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42734784 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425917535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426938055 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427099351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425124606 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426713689 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426947463 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427067607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426859634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427285695 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427654963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427330417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426272342 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.428974799 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4270987 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42747752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427336339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428793763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427242387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4261452 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426151559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427081262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429003978 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427605734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425508317 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427562465 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429823717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428842845 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428213031 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426996834 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427048932 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428691 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427275896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425960785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428036181 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426833235 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428427617 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429011422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427403727 seconds)
  done (took 95.456495655 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42779203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.427476185 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427801659 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429588869 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427909405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428556205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428293466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429503743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427811776 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428478625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429687755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428375397 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430402904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428229039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428651507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429532005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428166318 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428886251 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42860172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43051062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428679759 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429022819 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429065032 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43015089 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429377421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432441432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430690488 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432618744 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431305152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431192207 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43016139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430115453 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429644971 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429148981 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430307202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430330069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429902775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429963707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429435108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431802389 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432033162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431644702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429035626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430446353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430492434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429093683 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43036844 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431091134 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431009894 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431569376 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431838934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431353194 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431667388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430978988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431222324 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431070604 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430642732 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432097067 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43159486 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433203504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431466077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431023589 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433793356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431547994 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432870448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431860994 seconds)
  done (took 95.69742094 seconds)
done (took 1933.312168867 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.593679497 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.548046737 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.428138977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.446604534 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.427417494 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.423379614 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.445826536 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.428391922 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.427534473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.426843438 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.427916546 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.618373027 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.423991918 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.428900203 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.428157171 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.52614544 seconds)
  done (took 28.753872403 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.459085175 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.438994078 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.551611059 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.437610006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.458772028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.629959481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.495734523 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.438055125 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.611732626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.458289809 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.42915475 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.455025088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.433047586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.428337965 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.452115482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.627557821 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.693683434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.438056313 seconds)
  done (took 31.242977289 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.899848194 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.444337597 seconds)
  done (took 5.649839217 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454028064 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.434377882 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.433903142 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.430558292 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.426739458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.424468258 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.432234685 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.44002973 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.433061804 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.56815289 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.442606651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.444937552 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.43156879 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.434622348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.436834075 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.476317273 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.584869378 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.439106596 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.437780407 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.440108225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.432381813 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.524359003 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.480793352 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.438076704 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.565139816 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.445739579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.442250624 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440627205 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.565368495 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.444527017 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.434462657 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.435171122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.435887374 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.428625386 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.923862033 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.434655227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.442115406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.459927639 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.439680713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.584321218 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.436171364 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.441949056 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.429512037 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.907373525 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.573846503 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.56516274 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.443568674 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.440942579 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.436602743 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.499879909 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.440195011 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.434510274 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.494035087 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.302756659 seconds)
  done (took 91.004885126 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.473158706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.426805012 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609352969 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.451304738 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427746401 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.433521342 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.432798582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724408581 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.486218923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428263166 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.745875283 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.024527609 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.438455257 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.500134486 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.387414837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.53706176 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430113083 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.426674879 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.435582048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.429358585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.988014368 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434833344 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427494084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.562354748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.467057903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958515148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432624159 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.449929382 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.450587609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.426980677 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967639319 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.437640284 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.524630384 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.432843505 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.708015225 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.825640457 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788132076 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.460240961 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.444685595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.428969796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.435599711 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9389381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.808969984 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.433996242 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.43369217 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945014766 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433729168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.436243223 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.43779751 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.683579849 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.428392237 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.429212774 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428510638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.450807872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.427102702 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.474136205 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429390574 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956438092 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.432858338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.43234475 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.4555504 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.427862573 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.429300156 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427444186 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.448072812 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.800223813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.633188842 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.430317627 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799135585 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962153881 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433419123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024454682 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.434889507 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.430341417 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.676871682 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427890852 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.428740315 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953308775 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.479737478 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.430932035 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782750196 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.439834299 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.73258529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.450439891 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.430381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.014048534 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.436862233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.447288937 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.429295715 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.447176097 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.435349039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434435307 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.712071779 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.471151789 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.430065448 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.431765313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.450755295 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.430701583 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.449801498 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.437257343 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023801681 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.44635585 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.430880575 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432810999 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429967873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.437279022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429933544 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.43305912 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.704894166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.429860586 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.453979234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.431019141 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.430709301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.444480096 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.514027718 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.437301353 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.748829993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.435828748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430603221 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.437112405 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.430439579 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.468474066 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430516226 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.438815376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.309763127 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.698186945 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.448858729 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.436687798 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432096129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.441328842 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.434423607 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432993002 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.490838839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.434813854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.235959694 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441086837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.451851409 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.430471516 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43662937 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440658299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.43861927 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.434159363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731609428 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.718234279 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.618597793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433552726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.445794995 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.207612924 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.487269953 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612823058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.45073809 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.433322903 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.685817136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656842572 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.434742081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.434574761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.433782148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.700302186 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.437628343 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760531982 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.997714892 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439182795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442814256 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.244727985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.157147904 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.435507125 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.436197272 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.729501491 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.457675641 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.434179862 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.4351253 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.435245657 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.434151359 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.435997715 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438712119 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.435811524 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.436375345 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.737925218 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.62793651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.451664521 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440833112 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956563083 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.473277271 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.436530225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.445123889 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.43818806 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.436266003 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.534777185 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.438160346 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.43820555 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.435434816 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.441889019 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969566508 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.455816091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.433612972 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.627102088 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146502816 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.442554437 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.43638528 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.436832155 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.361642932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983829145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.450312903 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.755917882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.444680466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.477734576 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.436994738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.544496942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.982261628 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.44478044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.437251159 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.116202992 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.442261247 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.940653621 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.438459293 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.438367187 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04521636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.445445507 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.437875976 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.449870098 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.43818822 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.759988842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.443314171 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.44232096 seconds)
  done (took 521.840321263 seconds)
done (took 679.794679751 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.436759735 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.44497207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.427125779 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.442720137 seconds)
  done (took 11.067190168 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.478806592 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442854382 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.450383278 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.443013314 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.455360734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.442540735 seconds)
  done (took 10.028199918 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.435837445 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.444587331 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.443285977 seconds)
  done (took 8.638330195 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.66173721 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.469609365 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.816273129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.446525368 seconds)
  done (took 9.711113685 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.451931444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.450355683 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.452916188 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.458239103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.479151889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.480114921 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.45728743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.456648217 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.479210293 seconds)
  done (took 14.48106435 seconds)
done (took 55.242138172 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.470347688 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.439310699 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302755052 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.433677542 seconds)
    (5/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.421323445 seconds)
    (6/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.53177558 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.507662332 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.143584452 seconds)
    (9/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.190888241 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.473729741 seconds)
    (11/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.419687166 seconds)
    (12/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.646818908 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.575155446 seconds)
    (14/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.609143894 seconds)
    (15/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.786616708 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.556525796 seconds)
    (17/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.544876707 seconds)
    (18/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.546315994 seconds)
    (19/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.569331233 seconds)
    (20/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.474389316 seconds)
    (21/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.421258731 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.468312666 seconds)
    (23/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.577072802 seconds)
    (24/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.424748111 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.666682368 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.308401119 seconds)
    (27/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.428834493 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.131832663 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.490167728 seconds)
    (30/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.422312292 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.446789435 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.600259578 seconds)
    (33/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.112517106 seconds)
    (34/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.427716709 seconds)
    (35/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.501542599 seconds)
    (36/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.272601097 seconds)
    (37/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.270611756 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.567029758 seconds)
    (39/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.587762756 seconds)
    (40/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.472544161 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.423376866 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.553268673 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.52788954 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.603826837 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.604584141 seconds)
    (46/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.427149191 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.487161565 seconds)
    (48/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.440977432 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.490704326 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.620847571 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.545771076 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.433984181 seconds)
    (53/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.475916248 seconds)
    (54/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.476391276 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.713518764 seconds)
    (56/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.429898019 seconds)
    (57/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.712957013 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.431231853 seconds)
    (59/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.450070956 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.58519724 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.58784395 seconds)
    (62/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.108445948 seconds)
    (63/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.426346954 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.624328932 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.565500363 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.25846429 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.563505979 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.672375271 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.612039432 seconds)
    (70/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.657253686 seconds)
    (71/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.429672335 seconds)
    (72/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.431451671 seconds)
    (73/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.282587305 seconds)
    (74/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.482054912 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.424401913 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.523791541 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553657769 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.554094533 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.553771359 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.510616323 seconds)
    (81/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.672607538 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.45110404 seconds)
    (83/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.488619733 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.557026995 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.536744443 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.570869892 seconds)
    (87/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429217529 seconds)
    (88/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.594272838 seconds)
    (89/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.486420557 seconds)
    (90/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.573169282 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.543338389 seconds)
    (92/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.274743469 seconds)
    (93/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.484994784 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.560450079 seconds)
    (95/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.432044956 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.535868787 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.42639905 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.670919979 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.448592246 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.432748023 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.613850002 seconds)
    (102/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.520282049 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.450541361 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.563012205 seconds)
    (105/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.479503098 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.571101987 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.481792754 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.447135276 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.677447382 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.563035535 seconds)
    (111/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.511058583 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.217984627 seconds)
    (113/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.683374235 seconds)
    (114/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.115652198 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.568010628 seconds)
    (116/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.364172367 seconds)
    (117/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.435233806 seconds)
    (118/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.492314397 seconds)
    (119/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.577779723 seconds)
    (120/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.641073129 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.449841012 seconds)
    (122/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.515336185 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.57550583 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.488336512 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.710201525 seconds)
    (126/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.22375905 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.72391644 seconds)
    (128/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.44722293 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.557962161 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.721238944 seconds)
    (131/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.614014024 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42657547 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.436723399 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.498208483 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.435304901 seconds)
    (136/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.583568854 seconds)
    (137/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.663385068 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.46765266 seconds)
    (139/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.537255195 seconds)
    (140/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.208671822 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.613378515 seconds)
    (142/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.314171743 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.542223928 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.581761311 seconds)
    (145/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.276237026 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.501618734 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.538030189 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.740896376 seconds)
    (149/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.560590992 seconds)
    (150/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.432151547 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.680899734 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.63689664 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.672809289 seconds)
    (154/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.688354617 seconds)
    (155/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.525722056 seconds)
    (156/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.535671342 seconds)
    (157/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153105719 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.573238716 seconds)
    (159/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.639285646 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.348572565 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.716930102 seconds)
    (162/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.493113517 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.611414136 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.60332761 seconds)
    (165/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.427154776 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.531425776 seconds)
    (167/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.486706233 seconds)
    (168/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.481975809 seconds)
    (169/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.6658407 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.484891565 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.611157863 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.570143469 seconds)
    (173/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.459778126 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.57268545 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.632677383 seconds)
    (176/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.432413735 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.21221012 seconds)
    (178/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.543241186 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.319820104 seconds)
    (180/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.640016757 seconds)
    (181/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.570451241 seconds)
    (182/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.441110152 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.43983542 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.675233025 seconds)
    (185/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.433561516 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.518734177 seconds)
    (187/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.433299693 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.439738062 seconds)
    (189/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.616878724 seconds)
    (190/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.493731126 seconds)
    (191/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.437328731 seconds)
    (192/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.175269167 seconds)
  done (took 364.987000658 seconds)
done (took 366.305860351 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478495441 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.538769303 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.459984333 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459464806 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462291346 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.467517925 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.482281904 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.460108509 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.471223729 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.471307257 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.467688133 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.472263208 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.474530224 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.470818552 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.494526224 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.461461548 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.461275233 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.46919036 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472210233 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.474229803 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463148551 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46286889 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.481456693 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.460688193 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468662763 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470923312 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.468588348 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.452837886 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.472494711 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.473122492 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.467856851 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.473779578 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.47511133 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.470644874 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464372029 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.470253374 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463312456 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.541496973 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.478515891 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.471250054 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.467732471 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.474407088 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.466391659 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.468950292 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.470314136 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.482065858 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471468396 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.477582407 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.466836531 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.461194753 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.485896354 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.473909569 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.468658703 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.46475812 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.46613536 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.48410238 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.470224074 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480130452 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.467928368 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464581987 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.496470287 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.478972482 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.473835125 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.471342982 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.468257133 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.475512597 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.470422676 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.477194918 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.468636901 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466187613 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465539268 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.468615882 seconds)
done (took 115.365722576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.590973226 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.462469081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.61022515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.468386676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.629800745 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.601081792 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.468326039 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.468817528 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.46800439 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.293227731 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.468268901 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.467912849 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.463116739 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.46932299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.597916396 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.471918476 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.467785729 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.183937946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.470701078 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.611847857 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.46237351 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.468347998 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.470324614 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.295646262 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.464049292 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.46063563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.610848642 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470511201 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185744433 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.45953172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.461979315 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184861165 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.61324621 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.490188877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.480038569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.47878498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.631496334 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.473542541 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.594043359 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.59461567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.612381101 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.509388205 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.460263221 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.464597765 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.474600182 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.472564727 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.470595339 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.499119092 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.466046021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.47030689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.186470614 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.480380514 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.480523483 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.470992604 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.471088753 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.49314994 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.472881762 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.472272915 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.616841908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.473686013 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.595790131 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.299992143 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.29975917 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.472429412 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.465188874 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.473326041 seconds)
  done (took 117.543052591 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.53525802 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.543094866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.580442931 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.468052423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.517198698 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.581772503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4686934 seconds)
  done (took 12.028910742 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.474395636 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.475324907 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.516670641 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.519224292 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.473203636 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.627202384 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473266192 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.479362803 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.471472766 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.521147561 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.475487794 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474144068 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.480315504 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.466782157 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.516049664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.4803035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.583935094 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.470067001 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474397598 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.62324415 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473814301 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.482591747 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.520320475 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.481803427 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478280793 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.476370755 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.237419119 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474502193 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474298123 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47842538 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.474330438 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.524073881 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.476656342 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.469776648 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.474460231 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.584803428 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.475973415 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.472597897 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.478918786 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.473514189 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.479302489 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.476335623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.477595394 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.47428322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.477224363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.495090571 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.479615722 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.479195136 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.47742216 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.481362365 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.521592055 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.477968198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.475210336 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.476537901 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.526643382 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.485694244 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476841749 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.476214456 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.479928482 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.474967887 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.625944541 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.520672957 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.478629726 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.5187819 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477875311 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.477859303 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.480100885 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.477738783 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.564498505 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.477187849 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.520704821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.47592848 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.652260669 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.497252496 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.480117839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.475714604 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.475638997 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479184521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.46987731 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.47983121 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.475587969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.47513112 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.479763601 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.476382271 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478325054 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.638041996 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.581671445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.477607078 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.48688 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.480918451 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.478514576 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.526574829 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.479397488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.477433259 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525975181 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.588615445 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.527486565 seconds)
  done (took 151.327156067 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.487437155 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.487357671 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.476541339 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.500335248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.47433282 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.473754607 seconds)
  done (took 10.239568286 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.477143115 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.48131385 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.479738885 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.478527572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.480905486 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.483962015 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.487461287 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.476423634 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.483284461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.482863744 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.484261423 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.48811843 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.493225818 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.480456659 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.485089754 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.482569223 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.486559251 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.480157329 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.480410424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481314709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.475651031 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.482535862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.483617099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.478996953 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.488166741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.485325133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.498925125 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.484577946 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.482800115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.484917582 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.486608862 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.485895521 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.478352001 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.482551303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.490452045 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.47877998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483554646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.489618589 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.481002993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.485821513 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.489173751 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.483270107 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.485879775 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.489216497 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.479241653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.482930177 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.493299189 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.498915972 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.487719217 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.492068472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.490895278 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.4830128 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.487028897 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.489772336 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.479931342 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482438866 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.492988376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.48873769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.483990875 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.481149948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.485652702 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.4878199 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.480366793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.491200354 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.48219847 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.491605429 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.4795003 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.486909873 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485470618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.483860602 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.492000382 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.484523029 seconds)
  done (took 109.2588943 seconds)
done (took 401.728460805 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.815796223 seconds)
  done (took 4.160909934 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.604489505 seconds)
  done (took 3.949731098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.600209083 seconds)
  done (took 23.951277083 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.48912198 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.509047271 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.506928754 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.47400099 seconds)
  done (took 11.324236369 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.793976626 seconds)
  done (took 4.138149902 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.4771 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.474559199 seconds)
  done (took 6.297038629 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.806334556 seconds)
  done (took 4.151614484 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.832108214 seconds)
  done (took 4.178100777 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.495377807 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.491101716 seconds)
  done (took 6.338614634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.469462642 seconds)
  done (took 3.813481323 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.881206059 seconds)
  done (took 21.224615568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.484567201 seconds)
  done (took 3.831903007 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.531657844 seconds)
  done (took 3.875402999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.191842468 seconds)
  done (took 6.537032182 seconds)
done (took 109.11827458 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.473289733 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.481146775 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.477888308 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.477440253 seconds)
  done (took 11.253954137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.538656961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.536996327 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.542316133 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.538009834 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.538963734 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.537874692 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.512944367 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.513821952 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.540173221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.539455629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.544176123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.536853811 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.53776407 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.512747215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.537313026 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.545138682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.539267712 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.545134225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.515340279 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.538862098 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.488520069 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.538899826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.538246383 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.487475896 seconds)
  done (took 38.090548371 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.996420672 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.551224283 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.633466874 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.531150085 seconds)
  done (took 8.057180274 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.56719257 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.568799162 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.586472587 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.625758386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.66136786 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.591821549 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.519563206 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.515588058 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.498701914 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.572208644 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.619614672 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55322281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.656339019 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.488073117 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.706465308 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.488471671 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.488471185 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.567694629 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.621652983 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.652856781 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.488959525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.566837586 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.574271141 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.555936263 seconds)
  done (took 39.081456766 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.494630179 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.505480749 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.486469132 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.50173844 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.487351029 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.487358602 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.487764733 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.492812939 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.486374208 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.486338502 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.488256668 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.501939787 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.487091877 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.488675875 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.493870011 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489388069 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.489797091 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.493322603 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.496128749 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.488448749 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.487442598 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.495730663 seconds)
  done (took 34.164405057 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.476704519 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.47590637 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.827933257 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.732050352 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.479723808 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.480598952 seconds)
  done (took 14.820270946 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.552949798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.701836246 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.482578075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.843976793 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.934490144 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.488090323 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.484081146 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.734339204 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041377398 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.042484226 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.547109138 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.552420236 seconds)
  done (took 21.752855545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.484260332 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.483265929 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.485843661 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.497874549 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.540738154 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.487421939 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.490604588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.47772071 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.545478944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.547990196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.494175974 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.541095606 seconds)
  done (took 23.425908779 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573149686 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48559185 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.484997207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536404378 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490487885 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328645801 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539508126 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20609261 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.489459619 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759347883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494488262 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576829675 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.740550626 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498296858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493441904 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.46367521 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715830525 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004316249 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486430833 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489817429 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517643201 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501918037 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501285036 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.705116801 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334255773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488718018 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.748805596 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488318038 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794630224 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776283419 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77150458 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496002632 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761905718 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141972163 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589793569 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70560285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499131928 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492806922 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.474451757 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.486525996 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495672167 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491615405 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76202923 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494442984 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48840475 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499788662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214678123 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.494337024 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.489534626 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489229882 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766426652 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596171172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.493342175 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490022194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493438707 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49387522 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.493380879 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61610878 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059023519 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489261955 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51991244 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.495911124 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489341479 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51364022 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128650516 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.494792306 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.493169061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492363863 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489771176 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500079472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510735032 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489403553 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.510094241 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489999486 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231538546 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49817094 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49332001 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069613485 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502876902 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.496938775 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719424026 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489773944 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49131923 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.487136553 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491848622 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2194392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499815526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.465476073 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5535454 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205278992 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708848112 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514184993 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520861204 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711948676 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.467462603 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491858277 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.494165734 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49464474 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51257432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210028012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491171977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4975671 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749097465 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.702771516 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499233013 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481646796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983400543 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503123944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.51919714 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497980788 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714890102 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.11490564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771305706 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499841256 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529972394 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491559793 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277525645 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50630774 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.503340724 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503421752 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773816899 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320683884 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498708858 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561674237 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50129636 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493057691 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501757262 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495035422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493972689 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.708312734 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506434053 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.775454903 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.502948155 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49440257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.493264191 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514718717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.514128328 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716510411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502615625 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774427632 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49454198 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495044367 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493655772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.716770394 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.493934245 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.505185762 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755022469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497837907 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507769187 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77953902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531952607 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608489648 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525774963 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.498868509 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754936743 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.499309119 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.500265858 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504242721 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497453765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499011721 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.501834848 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496785477 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127573598 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474540245 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500591757 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498762799 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.51146413 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563542426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502406592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71423258 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.49873069 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496038731 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.52645359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.49548979 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726783146 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773922719 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.504388161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577548174 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985125571 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119560113 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510011141 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.496385363 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.49517492 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.495943173 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496738675 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497268702 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498334168 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716162866 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780961192 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505268583 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146692838 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499337159 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509149677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.510650491 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774927752 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.511610681 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497667666 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496535324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521821764 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521030035 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.779137098 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641943321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.514419796 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496944797 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.015766892 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505097397 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497811428 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498980033 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53056202 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507520415 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354136807 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75845512 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50091965 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782011815 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5153335 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.516031803 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.495270001 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507666279 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517121881 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.516320857 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507711604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.716663276 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507600822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523408488 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123577342 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263147555 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071970946 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501380623 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.507575366 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506931111 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222271815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499618068 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500881086 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741089567 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22392393 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499425561 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991367496 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.503295832 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277741033 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783624962 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739821591 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50230268 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.512620224 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.788432279 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.718138043 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533549085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.510591058 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508747246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.477464651 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069062191 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500325399 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608312258 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22216636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513555707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51020567 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.548985986 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.519784897 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911369433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505269059 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50305867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511439745 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.508852033 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365462213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504990281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50294126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145594784 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512012415 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.000453148 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501892188 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.721349855 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786650109 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.781701626 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.515522013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.505007557 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.761160955 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780575956 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510549717 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515280348 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081535815 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.370975525 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.510357245 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505281087 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294807185 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522430848 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814023508 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.519195578 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.511809361 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512305315 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506039941 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505093182 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.503405648 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511369332 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477401635 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025108811 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.504740195 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532837659 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523333836 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511767119 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759381577 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.519945504 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133337189 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.73321572 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500595566 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541578131 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.509740738 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505669419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.489039949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50574936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50610254 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505418765 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.732762062 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505620877 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.486741609 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.585658786 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723198788 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506230054 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507023092 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.745124899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.510645584 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.508031751 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2701686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538191953 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50729282 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514384333 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519032978 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554695775 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573956071 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726877495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790643918 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794437235 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916921662 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512901252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514442245 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.521886882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608565933 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507294216 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.521936848 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.286945962 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13966508 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276454048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137676766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793839425 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515780029 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516169939 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506621448 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644775008 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50787703 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782387211 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508156933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.507093046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536395009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50890721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528131781 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727117426 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783361929 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508513146 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509702684 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51399319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.509280872 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790353242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.725471183 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032156162 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091853223 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507570291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516299514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236270803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783700614 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510610456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510262197 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510237798 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.512922509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.535463431 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.521342807 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512745757 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65257485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789251381 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17646103 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792729387 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.552505073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.028163635 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51059133 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770723497 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513483572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.736376228 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146819191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271687122 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773800076 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580288143 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731838292 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.512077524 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648002147 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.518423449 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516611749 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511014583 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512034741 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.511162673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78929677 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152956115 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780359097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.51608166 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.522768718 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547497931 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.731388848 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.739839476 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.249578692 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.739805391 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793827746 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527691563 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512165165 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148730017 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.799968428 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520217577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.517283144 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746526763 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516768789 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537272337 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.031440688 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.512204439 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092280677 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.40200008 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533671204 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513349889 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275917907 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148239163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.530973441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042869025 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513138264 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520026522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795454895 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.520370779 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514824944 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802179331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.518347954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518216889 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741482401 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.147924671 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298589263 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.52560628 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520762255 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.524125749 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51508149 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588412082 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521974372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52524755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947330777 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519824493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517538433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527162626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.513673551 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521471726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.522062114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515310163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.523586096 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.514437898 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.492653194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523025381 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649406415 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086134122 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515942558 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.18967576 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.838524642 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.772498953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516340127 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.497375452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.520346796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51836779 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516739253 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518123948 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.517928224 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125166553 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.521918191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.80435822 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529673624 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.728261299 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728683249 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51943112 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748098377 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535379811 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544388812 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.494257024 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519196444 seconds)
  done (took 1044.001335951 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.519489093 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.54064699 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.52060053 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.531624187 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.542192338 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.54805707 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.558072837 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.570020163 seconds)
  done (took 21.707637392 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.524104332 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.520779155 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.526351511 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.521805493 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.516637629 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.015779905 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.524487958 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.522284182 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.534704097 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.523700971 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.52458415 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.228501446 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.547922742 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.51788845 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.516102332 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.529351395 seconds)
  done (took 34.973680959 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.69437938 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.7337602 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.594036333 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.596641071 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.523329674 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.522819068 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.790841607 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.543469043 seconds)
  done (took 28.377379328 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.526659333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.524562189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.527128103 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.5277827 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.528588457 seconds)
  done (took 9.010670606 seconds)
done (took 1330.062000641 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.523376419 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.522603762 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.523155008 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.524949501 seconds)
  done (took 7.472816545 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.494251059 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.494401848 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.497074764 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.509699035 seconds)
  done (took 10.375492974 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.238741183 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.145652699 seconds)
  done (took 5.763109003 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026598863 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.032555737 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.027527989 seconds)
  done (took 7.465140386 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.815024195 seconds)
  done (took 3.193338227 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.474428981 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.519359088 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.207394381 seconds)
  done (took 8.579401241 seconds)
done (took 44.22738486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513007688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.758531146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.668733724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.514441659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.673926397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669589666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.321218195 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.523277727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523778789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522208053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.515225178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.692255192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.235696528 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.759753812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.238273855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.761699194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674556428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522989864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.530299766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.51840728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.322545811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.52595073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.515393972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526768666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.673949182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.660466525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.522789431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.760213932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.51557079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.541554403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.659680546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.518774781 seconds)
  done (took 87.261951216 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.524533948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.528971781 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525644344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515631151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533539775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.523681203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517290229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.516308735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.528551691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.523736128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.516141908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.532908949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.516324786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.517558101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.516997064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.51708357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.529386422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522830061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.536925283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.518238637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.518755663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.530649803 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.518448782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.518337092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.522884408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.534537085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.518492621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.52934864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.516556267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517524116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533528524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.516879869 seconds)
  done (took 82.119739608 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.516715148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.53487757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52028722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517364146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516183333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51830521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517960507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.531032862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517381306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.534068672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.533736263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517924835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.519531163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.518702973 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.519473579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.520235649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519174471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.518683405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.530750407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.518803947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.519228755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.519929709 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.518325211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.539088638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.519095527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.521827548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.523054796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.525247818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.519226608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.526708606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520654637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.52080347 seconds)
  done (took 82.09826578 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.754704604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.534743901 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.535609605 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.528896894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.536455629 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.535884888 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.529138597 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.763812001 seconds)
  done (took 16.102120843 seconds)
done (took 268.959910426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.522568013 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.051889321 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.554440731 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.523234277 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.552915297 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.547830934 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.74886299 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.553615638 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.750697968 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.547350245 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.549675302 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.525313272 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.340485885 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.684605878 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.378417186 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.484567179 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.419528719 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52887222 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.104420362 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.81824068 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.553675283 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.522121628 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364960374 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.435521173 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.509847844 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.633183998 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.62962505 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.760214352 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.689381529 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.612705406 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.048260441 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.531797532 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.531239657 seconds)
  done (took 69.395523078 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.52971039 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.533253687 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.535463673 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.536404063 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.533216499 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.536062843 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.528588665 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.537217369 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.538279084 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.537095827 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.538276183 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.535653955 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.536756565 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.535791875 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.534804581 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.516058542 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.528567583 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.535084406 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.528349555 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.515267965 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.533678054 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.538329727 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.53896332 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.534294409 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.538339691 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.538042092 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.536177946 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.53677883 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.53463212 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.533281949 seconds)
  done (took 47.399459695 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.537491068 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.108290942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.26768414 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.543138578 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.531514016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.534895895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.823761953 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.546496962 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.536024275 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.535269123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.012122241 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.546932235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.565586792 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.270809174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.540114977 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.539885626 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.539557111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.531526076 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115456523 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548474127 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.82289984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.546541649 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.825755089 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.548168699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.535754805 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.533542369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.537805197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.357311589 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.559786562 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.015240821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.349268672 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824314339 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.299598924 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.323006649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.349951849 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.548169738 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.54212028 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019478938 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.542448128 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.532314616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.822382284 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.542108126 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.274422104 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.222011813 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.558155187 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.542456637 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.384507075 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.045736726 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.787826781 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.546973769 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.30952396 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.544511176 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.543395046 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.536085426 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.781275638 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.543688262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.534592817 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.39547203 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.563114187 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82417619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.54941804 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.536003862 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.11561503 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.542662912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.112612416 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.543362804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.544103305 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.536377144 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.277563476 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545900307 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.232104784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.559071579 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.544943489 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017085112 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.120352795 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.446176521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.544070521 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122155911 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.320017315 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.848420414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.546558038 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.356544713 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.850470137 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.547595834 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.54706691 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546388389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.544444469 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.608328026 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.824255749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.166758311 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.235435771 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.419969257 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.852906038 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.552724853 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.539439998 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.399645582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.567799198 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.548469812 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.277212654 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.239501023 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.562951212 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.545697695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.224214377 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.563993527 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.830122076 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.551027022 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.317891312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.546066956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.60966303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.546382044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.545759898 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.542977588 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.829477642 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.550091452 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.548275031 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.222106898 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.052997781 seconds)
  done (took 212.302375614 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.534964638 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.534766414 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.534643709 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.534009593 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.534520378 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.541424796 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.533243825 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.535303622 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.539635498 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.533992906 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.535170772 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.544198973 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.541205169 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.533311552 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.536722527 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.535295786 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.535786799 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.559426281 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.535793593 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.535701955 seconds)
  done (took 48.144542409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.548417119 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.110298112 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.080418137 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.555356477 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.544957332 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.540765007 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.596882324 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.547001169 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.545990927 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.842090481 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.717364028 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.549389777 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.545876955 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.545351068 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.077969018 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.533830034 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.847258539 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.117554166 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.557072603 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112355425 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.532063246 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.549158543 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.53956436 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113486812 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.863984653 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.837333597 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.606971575 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115781142 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.554020087 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.548106287 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115569059 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.558312358 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.542620364 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.105290433 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.558277861 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.566276406 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.548134787 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.601685625 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.606519855 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.858085298 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.127671235 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.845836458 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.567726179 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.729604609 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.556587824 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.5307335 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.129572713 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.564397326 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.532752543 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.555201724 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.559572471 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.089911867 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.551786148 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.090230389 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.556316051 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.553828419 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.112716126 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.098700541 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.087395665 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.723664288 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.550981628 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.835012115 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.554848014 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.117199289 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.552806674 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.551864321 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.552858606 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.719810506 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.1172522 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.836496383 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.856049774 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.853692928 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.554451062 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.61029495 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.556932448 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.853808995 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.615303858 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.992458575 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.858769172 seconds)
  done (took 138.940900286 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.814659535 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.659513966 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925831902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.143395302 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.060010055 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.688252615 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.657302827 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.793444777 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.546757313 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.640243977 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.205851314 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.652650326 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.298977596 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.64530578 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.652341134 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.681248205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950031963 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.552721012 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189363099 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.178383573 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.550840509 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.671988769 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.077239432 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.739745893 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.548382607 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.151717343 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.519872788 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.080997963 seconds)
  done (took 57.677222943 seconds)
done (took 575.243074212 seconds)
SAVING RESULT...
DONE!
