cset: moving following pidspec: 22600
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.513238494 seconds)
loading group "string"... done (took 0.526158605 seconds)
loading group "linalg"... done (took 9.029558748 seconds)
loading group "parallel"... done (took 0.175868195 seconds)
loading group "find"... done (took 1.295225435 seconds)
loading group "tuple"... done (took 1.943121677 seconds)
loading group "dates"... done (took 1.363673098 seconds)
loading group "micro"... done (took 0.195578889 seconds)
loading group "io"... done (took 0.516300662 seconds)
loading group "scalar"... done (took 51.435907652 seconds)
loading group "sparse"... done (took 14.180106022 seconds)
loading group "broadcast"... done (took 1.33718558 seconds)
loading group "union"... done (took 10.383718387 seconds)
loading group "simd"... done (took 3.091276699 seconds)
loading group "random"... done (took 11.709101503 seconds)
loading group "problem"... done (took 2.250352423 seconds)
loading group "array"... done (took 24.620835269 seconds)
loading group "misc"... done (took 1.160676656 seconds)
loading group "sort"... done (took 3.840014001 seconds)
loading group "collection"... done (took 19.606523267 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.620952058 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184552742 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.2079197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288421124 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242457924 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155963146 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139058975 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26325869 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.701609049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210174755 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131618194 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513916964 seconds)
done (took 6.487337247 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.256853271 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180948467 seconds)
    (2/2) benchmarking "String"...
    done (took 0.169527135 seconds)
  done (took 1.124101248 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076298436 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155769621 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107539056 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094063544 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092256316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108861739 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092438264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10928995 seconds)
  done (took 1.537131053 seconds)
done (took 3.763844673 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50657067 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876435131 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.528115711 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164326365 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301976138 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298889175 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335553833 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202772718 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089943954 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090522752 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178087249 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.387172225 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.444722532 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.950774748 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08986431 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115273395 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.11936981 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.77959793 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078357373 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125698279 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500161821 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.193498696 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098504268 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124247494 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184893936 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133592668 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162971618 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103728617 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668605459 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132544648 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186925183 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098573411 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159822919 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.195040839 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208200097 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092699918 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68342902 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200683877 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091106408 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099388626 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66424099 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119619771 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187263634 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103269347 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090669314 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184016589 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.0955739 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077998003 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115848058 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085168866 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168485563 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482866142 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109745774 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174323353 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092911471 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69284496 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102559554 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27673166 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124318993 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091594246 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09177888 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088851821 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161394051 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095210109 seconds)
  done (took 20.273937379 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150000151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166645122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076179396 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156627575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122865783 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078896303 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102067456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078014265 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125015726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.227683237 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137110331 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092130782 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086645677 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126567931 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247908417 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104473071 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121672986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087254534 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08924134 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139965534 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095839407 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108766463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092980796 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169058621 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20591723 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110661481 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122648754 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087059918 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096118258 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142538517 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145114861 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091540285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086749103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189732096 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105810345 seconds)
  done (took 5.31263753 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201672545 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124160699 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.21644918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162768761 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146347007 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170177909 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148181798 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287150935 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.213024651 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162012809 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129598014 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104050813 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095083435 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080954441 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077451398 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503746451 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138192862 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.173664651 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.135594154 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107619748 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080859872 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384313677 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084745608 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09786012 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087027797 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066580011 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20106819 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101694266 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.069957311 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10647345 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089143287 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132636207 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193488262 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116446063 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138218369 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086170515 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079542399 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217320939 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11094877 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078295076 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107696478 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134615803 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129323093 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085143622 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110414506 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221751095 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083232452 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103073024 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.085813448 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197483343 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.14726214 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100492461 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288621832 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100227347 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085573771 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101666243 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248539665 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132982761 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081396021 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076890211 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104878349 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078721675 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.433339514 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106849713 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.924794425 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099934918 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159296759 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085811725 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106901691 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.140798994 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098892935 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086246515 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08392423 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118933632 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081728904 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077417521 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096851102 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08042704 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083781895 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109240744 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08560322 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078809664 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163601482 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082979485 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095647268 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118264443 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109362735 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102162216 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07939266 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127492151 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081619545 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083444561 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172975584 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084779619 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11030784 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085924337 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145314237 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082043893 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.218182209 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082950808 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107014509 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101351007 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127621185 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102075479 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078950474 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101632076 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078205674 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080005631 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162263954 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083963813 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079286147 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084891388 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098989723 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092863624 seconds)
  done (took 23.16084209 seconds)
done (took 49.520191062 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449476697 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087019698 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084625905 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106964516 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085774557 seconds)
  done (took 1.668385494 seconds)
done (took 2.49858508 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.325200502 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201078598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099961909 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196011243 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086918199 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205689484 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189606197 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095065649 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215786964 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084294292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195072875 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084758493 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105226546 seconds)
  done (took 2.936394616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100608667 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105462165 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116662061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100546485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080509331 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097136172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115425281 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108070011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095659121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109516317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080664873 seconds)
  done (took 1.935751087 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097074848 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103342313 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08711558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114035068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081437765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09410475 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112991454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105540451 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094807991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110076796 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082516974 seconds)
  done (took 1.90858988 seconds)
done (took 7.603974377 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.03962586 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 26.846370028 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.171357944 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.292101026 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347658369 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257735786 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.669495536 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15665972 seconds)
  done (took 31.760201283 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.118260304 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.155147564 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091368041 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088819697 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087219138 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110923038 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093458494 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08779798 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112297973 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093862594 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092960982 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107269787 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094854306 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087800757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087316606 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111143586 seconds)
  done (took 2.5057778 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141116864 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114307728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113882568 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095179448 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110455592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096314996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097390496 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111720979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091089176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091517233 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114927887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09573978 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093936035 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105947863 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095134018 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120215158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10724197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095190539 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119202896 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111406626 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096759249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091964049 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111097818 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.095675212 seconds)
  done (took 3.429298573 seconds)
done (took 38.521346267 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152473158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101164303 seconds)
  done (took 1.084349801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142457883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161158422 seconds)
  done (took 1.141134224 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110611464 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08605219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136343444 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100306074 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08774477 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105749465 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113793399 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103785245 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087574655 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086786872 seconds)
  done (took 1.859835682 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091608944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090949796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120066649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139069228 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113655067 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091928675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091380348 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090111582 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113038847 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088155056 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096507033 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125394505 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090897325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124943772 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092837177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092819032 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114628722 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091827207 seconds)
  done (took 2.701417547 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087950994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088307572 seconds)
  done (took 1.018939417 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091069342 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086999315 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088264976 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107291222 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08706602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085661419 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104369067 seconds)
  done (took 1.492984052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49801068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26564891 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373077567 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104651345 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143589741 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.342670022 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146904514 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100026568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098465793 seconds)
  done (took 2.9517405 seconds)
done (took 13.088633017 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095181287 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224214684 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636428693 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.230075298 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08688834 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165429814 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.295944619 seconds)
done (took 2.582347526 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352656899 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151612711 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086738284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087711288 seconds)
  done (took 1.518953719 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083048379 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095727803 seconds)
  done (took 1.029177042 seconds)
done (took 3.39504853 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110675309 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086653555 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105244478 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.085415759 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085266975 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084018109 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.104868396 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086801393 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086198159 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.104335916 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.086389775 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085753618 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084126327 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10227042 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087322549 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084507172 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084696384 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.103099134 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08569726 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084935917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102297058 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085912776 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084139251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083898741 seconds)
  done (took 3.068864518 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111522155 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086325796 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107707667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091628306 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089962283 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108934921 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091336902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087139239 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108022152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089187578 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090011659 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.107811699 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08885402 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090229923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105864168 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.091230456 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090465562 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08612109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107028665 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090070471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089803565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105199088 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091668666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089607832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10799922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090785747 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087301153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105672266 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090860457 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088915343 seconds)
  done (took 3.719214557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098010632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085498873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087665236 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116415209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086429154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088240862 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103878346 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088489497 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089803003 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087360938 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109526743 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088974042 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085456742 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107262556 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091497418 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092031807 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116492673 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08759071 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086271656 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089624386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111098554 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086304987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088626405 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107301221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090086832 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085205417 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087946673 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107149086 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092122409 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087982767 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109164168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093023584 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089686752 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098184223 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110988209 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09068862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093468921 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105865735 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091003842 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085778683 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103633612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090626355 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085892569 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09541126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109333051 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091038319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08675309 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108701113 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090865165 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092638831 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085333117 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105207245 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092885835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091082886 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109512743 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086180412 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088621269 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08489906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109927989 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088619923 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085558872 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.103918198 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09549163 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088959792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123675327 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097560867 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085596934 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108600562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091689059 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094650255 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091890503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118709436 seconds)
  done (took 7.737775176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101861592 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095666768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086445602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105827899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086101102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086730324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109958141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087690692 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087479386 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111587449 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088348679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08619415 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104657264 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089486933 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087759378 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086376944 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112210687 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086436159 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085961583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105671365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087799755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090677026 seconds)
  done (took 2.933587026 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234029792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094565475 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135270568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120030577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103334781 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118520648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092724014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092968948 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109049875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096485078 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094767904 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110635866 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104685653 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094541419 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11530073 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095721376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10882385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099006033 seconds)
  done (took 2.886141196 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103864802 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.087579738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128331217 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090201535 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088742657 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088129333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113048309 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110730863 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.108167978 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09009173 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096495853 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107337307 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091272045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088941461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089237069 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11041979 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090504062 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087697482 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115069813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094368441 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093584958 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11550916 seconds)
  done (took 3.056866047 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105466579 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089309334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126600681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092054211 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086374507 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1063523 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09483371 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088536501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112725839 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090742298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088307183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087312762 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121907867 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088902348 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092496743 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106950734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089703503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087353613 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108037929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088199729 seconds)
  done (took 2.813845469 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172967023 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125191992 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107588445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114583756 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125708997 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108138464 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114032613 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127162413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108666005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136031809 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108162819 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106483337 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134795659 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113303493 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126064883 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117100834 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115605685 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13366317 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107996186 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124934516 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120406544 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107147318 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134409858 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10787792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10825886 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127315433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107897284 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130230407 seconds)
  done (took 4.239569535 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089712545 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088140196 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086333685 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10524934 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087802213 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086362612 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085983851 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106396773 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088109283 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086650495 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107080841 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088429093 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087766819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086585855 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10682862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087674193 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087909123 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105150905 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088258875 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087512429 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087998278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10812206 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088699314 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086413028 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104659107 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.089022052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086734534 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08682505 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107406848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087780087 seconds)
  done (took 3.642500494 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100067844 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097199284 seconds)
  done (took 1.070930056 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096294661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103232691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087510086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107600469 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094514583 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087690484 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115790786 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094269323 seconds)
  done (took 1.65949544 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146271086 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163418322 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094614926 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101550915 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165482982 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.159798409 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135853773 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093654552 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110289848 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085024432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.161354449 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084036447 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092508211 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107843787 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093008616 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097553215 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10840387 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101269934 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095828759 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109582421 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096954264 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098137145 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111852756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099919462 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085901835 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112364371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096498622 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10267681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107350311 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095583779 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090533531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.107673024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094709824 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093920205 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.088868528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.165959082 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100106096 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109472371 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093669672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093797864 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143832564 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088877992 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092608634 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110617005 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097322807 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093248277 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114633024 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.089205384 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084490969 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106333696 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090437324 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087787436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088167623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11388894 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091983985 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117210546 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093393643 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088612493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088059047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107522001 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091747853 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0874324 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113765194 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093156308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092018225 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113235306 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091682235 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088064089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109418028 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091352977 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091047652 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127795705 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095140698 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09430895 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114161703 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.090925498 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089809477 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113877315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091317882 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093627885 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.112847026 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118655289 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09422149 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107039617 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088168507 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096401152 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110265593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093462162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084416548 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120022652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093414689 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091007037 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085308728 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110339776 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088540848 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0928553 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105265801 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093580847 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088116911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113831053 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095830153 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090501043 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113600527 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096173276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095672125 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110374176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.138847037 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090114405 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108791582 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091812227 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093952849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106537921 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093416463 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087519398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109171412 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088410381 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0945183 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112026623 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093799045 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095227247 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113390681 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096159215 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.092413332 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089495518 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108400539 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09435881 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097515021 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114131889 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092448853 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.089214059 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.109283326 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09268705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093446197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.1093836 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096064824 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08864233 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.107782985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093109616 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096048748 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112795737 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090239663 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091832533 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111802159 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093504404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092799446 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112020054 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089968919 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084687699 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093060357 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108485661 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.090921554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099044055 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108418451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093950617 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08870333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117801653 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090494926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09439809 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11208568 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097066028 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09528041 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103619418 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091995306 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092928394 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113689148 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090277135 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090032166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.088070345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116877255 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085561859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093453502 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104411802 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091571861 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094665024 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109863291 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09425403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088029124 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149246105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103484175 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095875388 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111985905 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093810697 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093232516 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110959513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096309567 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095528876 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094170595 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112941289 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092425601 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095390181 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10927369 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092571793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091028951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114704759 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085869457 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090493375 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105231527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09613894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094959503 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11286762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097082997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092630948 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092165921 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119755675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089494067 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.094155783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105634017 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096019117 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098622346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.116395725 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096931621 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093846772 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110811611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090318091 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0997634 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112005771 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095102133 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090340385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104680542 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088017212 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095838957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09277231 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109020143 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089566335 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095460328 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116130541 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091549333 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085349947 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114082934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098508618 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087782291 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113802694 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090693702 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090774832 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120972422 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086760188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089671496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115182365 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096181616 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087879373 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112210121 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094653879 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09818899 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093743368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114249219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091007871 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09757141 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11075625 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089237937 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08946911 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112989057 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087757407 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091231082 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111924465 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091463318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088710446 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116639732 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09849609 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096145325 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109728469 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097031144 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098205091 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095871195 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111850317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097546856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0884577 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106431719 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091330176 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085881664 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111661244 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09006388 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095623521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109274226 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093784672 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095054694 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113462436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092922942 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.095756087 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123918308 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088060852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086991351 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110020277 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094564697 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099023975 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108294442 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092459696 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095662156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095034651 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116933572 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089487526 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088956357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.117420207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100023404 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096391344 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117131937 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097818654 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088402297 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114850712 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091277812 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097268849 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.1060367 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094036007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092023556 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11113994 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091351484 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091599966 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108475135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087574633 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089719309 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096180315 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112193177 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09548511 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092407835 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111831626 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090361254 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088169769 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117073818 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093582165 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098337601 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109967234 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08794933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087104413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115078767 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095064662 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09816163 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088948031 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115420609 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099094657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094706497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111488016 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100707627 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101829261 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117420972 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101336309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086553355 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112205392 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100587445 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089615861 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113482004 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0946058 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08827093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096192095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118404093 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0957653 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09128921 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107663844 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091173231 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097058661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114327068 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094628554 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092667274 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113883714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090683023 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095003692 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096760917 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115281242 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097993555 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093248912 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115456048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090972975 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096808266 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113038739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089001507 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087196289 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111027368 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098655483 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087331617 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11751334 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096986167 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090944087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090786785 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117280905 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09056161 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0970106 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118482798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092115924 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100260808 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111400187 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092464227 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096061764 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116848756 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089406699 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092208102 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112045357 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100896855 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092848229 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096086053 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11498367 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098088792 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093086155 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117896454 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097641008 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096942597 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108374332 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100262403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097210609 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11393891 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09233312 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092448362 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108482619 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095207477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099425187 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089946597 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121329284 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097035907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091749904 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112614865 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098142593 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092211165 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118447851 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091881779 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095723394 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108558432 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097637811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0928016 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118393283 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092605606 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08791959 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116681824 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098808626 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096148921 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115624057 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10002551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088631589 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088046283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115099519 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091787209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101546628 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118595849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093540123 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092347959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113419263 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093211779 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098127121 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108127645 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092859438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095570504 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115609534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094238158 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089448719 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095097992 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11387294 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096734543 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093563145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110864384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094108107 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098780405 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113605273 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091458344 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09158836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120321542 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095161243 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090607 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.109226369 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102145385 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096282264 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118450549 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092671929 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095025164 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111699365 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095846857 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098592773 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111713266 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096558188 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092938272 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096431651 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122590028 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088278118 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091349095 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122496433 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098434207 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098387214 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.115243614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094081457 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098436854 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120069583 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094437709 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088147916 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109129306 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094768347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089003267 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09217887 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122373513 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094434058 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111337047 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098675651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097225372 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.092879573 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114365529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089656679 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098668947 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11253908 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099559233 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088614247 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108274022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095714723 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097884803 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093431238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116120704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093849994 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09334356 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10998583 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093374518 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098049268 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117213615 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099592248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094185844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113273444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097206691 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103152033 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113073172 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096300849 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1034396 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119730228 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098103245 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094810742 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118216217 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10083371 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093737804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098349765 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114281874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09435158 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099900966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121027118 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105348397 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094397232 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110543466 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097853455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092498849 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110170415 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100037088 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100094246 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120190036 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097033737 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092083438 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122034307 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102336369 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095293705 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113578148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094200616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097429275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112021714 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098145138 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092589578 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099040043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121468297 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099536845 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100848343 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110704254 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103191957 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097455497 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.124736922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093705553 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089295338 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109616364 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096090073 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099503402 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100491116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118397137 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097818307 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097093115 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117177857 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096624007 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093017897 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121385676 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100106409 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092735794 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117617888 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095214018 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096518929 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.113179824 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100657768 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099915865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09568572 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124291352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099545883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093119545 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113979969 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096289991 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093788446 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117624627 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0994198 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092222546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110065767 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100831505 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100727979 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114550783 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103382907 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100537747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114401707 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.1005569 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100389619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.096811053 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.115591684 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097167905 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095538621 seconds)
  done (took 61.074841969 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147927384 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100921404 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115530758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095782147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112518244 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117400376 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094997282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095830282 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117294305 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106511945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093855054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114501736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112906559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136900965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115220279 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106445028 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115094784 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096282139 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094385224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114597252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111754559 seconds)
  done (took 3.24176314 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118120233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108083147 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12660153 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110019554 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100372789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128014584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105223522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126323577 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110405062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102027888 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131275444 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106545715 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123219983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104192316 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102311964 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125115241 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111005511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100488122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128597998 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105649963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124164994 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107609168 seconds)
  done (took 3.430287401 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107213154 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099042435 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100019671 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115432403 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100124019 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093492991 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12417238 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097358022 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103407712 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116531414 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092715543 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096034404 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100297922 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116339975 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092518171 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095488489 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125809689 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099739344 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100320227 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114806806 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111978865 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094759005 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.116291829 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092166982 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106940577 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120609793 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096984013 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099200108 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090355669 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.121021511 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09667923 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095484291 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118310828 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092472568 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091286018 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120398677 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100976621 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095495832 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095107662 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.119082587 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095651574 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099803738 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122709623 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096113434 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095764722 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.118547519 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100035062 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095060981 seconds)
  done (took 5.918213075 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130123621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156747117 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100470539 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126992612 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134156425 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106624391 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.121087141 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129200104 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096718684 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120722227 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112879854 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109059423 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122653299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103124295 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098281446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122582348 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100370051 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097394276 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12489399 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099357297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123703461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10376447 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11009195 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129315111 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103601905 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097612269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120672706 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103960149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108450472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125848373 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103967389 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125086618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.353605529 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101237666 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118800893 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102308012 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112362134 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121556073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102437485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097435189 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122248319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103686557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100866371 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133188992 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1003417 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100716401 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121146815 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097385209 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108598652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121800147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107428168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131309925 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104199739 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100253772 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123755482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112044332 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0990695 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120276665 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102300689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1078601 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118928112 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10259656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109665361 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122314738 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105671471 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130880763 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102689593 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101763322 seconds)
  done (took 8.935276668 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138033333 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103765759 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134282352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113433157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102806522 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126820547 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103891895 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102891471 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12743721 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108812439 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124555001 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202245393 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122202528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108914973 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10274448 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125850299 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103924101 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103185113 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125652193 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105121916 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103804001 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134415617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103874884 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132740758 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116064319 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101204776 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125895782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103981287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132589919 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105808268 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115954545 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126567642 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10635361 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111412368 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137323753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104556864 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118746042 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10598899 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104428607 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126305864 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101577999 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113338154 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125698626 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101091111 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104317675 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127657581 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113560807 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135418633 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110899172 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109214633 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126550168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113286898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104507447 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126289394 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113302658 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140887412 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114093821 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133235976 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105966936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113194285 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134602742 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120356709 seconds)
  done (took 8.232750184 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101906848 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09740982 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095743993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11815236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098207281 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096233714 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09645059 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120330846 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097468403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097829429 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119411202 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097094604 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096204403 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096959263 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118238474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09735996 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096544248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117962455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098109864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096239954 seconds)
  done (took 2.996098706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110690105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116340942 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11879207 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106255055 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100012093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125343535 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100397989 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100235336 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098796311 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122099571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108648719 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128030149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101848322 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104957619 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127253355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105021442 seconds)
  done (took 2.718254064 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120812689 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116950819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.194669675 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102464307 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121628175 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108084286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100348385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124792607 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100016602 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106237242 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126402983 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104008666 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100445298 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101289214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122783021 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103309294 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09682349 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124918544 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100855421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.190297507 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103141578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101702096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123617694 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105239539 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100496794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.125717802 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106984988 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098604521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.122791355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.101823031 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101799588 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127747155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100048572 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104364562 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100990446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122804632 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101255131 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100121675 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125484131 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100646117 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102042868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122675605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10178433 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1022796 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.119031626 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102768011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097945216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.125836886 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103209858 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101477094 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098771931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131122403 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105120535 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108407679 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1295374 seconds)
  done (took 7.140098644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113940721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101626207 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133278047 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100563354 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101263216 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099927825 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123702892 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101869327 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100550679 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121723154 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101357065 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101396912 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122552021 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102025149 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101567247 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123034334 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098583514 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10054275 seconds)
  done (took 2.89698632 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10884598 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099954026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104132835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121838079 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101014072 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09981498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120511142 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100659954 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099528504 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120383794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102424462 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100648861 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098925217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122815246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100575963 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100347565 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122011189 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100785658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099075998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118730313 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102528377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099653129 seconds)
  done (took 3.297010807 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115948674 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186819042 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109527045 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195737158 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100737625 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097727018 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130919908 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100461672 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115657684 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120768559 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099556369 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097665673 seconds)
  done (took 2.423949971 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131758573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138886918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122370089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102576059 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109758324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126163377 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105372307 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104959009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135661784 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115808448 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125518178 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114679898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112518173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134887176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110614887 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131225528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106168213 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104080175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122108708 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121454142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103829617 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135905253 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104638117 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12475338 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10705232 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111938549 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134706166 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11823101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103097811 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136276775 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109366798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125356453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115611434 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115318504 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12344741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113925813 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125290264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122949423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109789506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135460756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101608984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109006115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135456491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109479338 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135817751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105111649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109678445 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126442786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105940789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148612962 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112282865 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112363811 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132884122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114554381 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135052392 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128663735 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137975275 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114515757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108643376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139529638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112887918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131094676 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113940114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137633867 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112116011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112379678 seconds)
  done (took 8.852923433 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144576925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103103551 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128739064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11734369 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133604514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106893804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105382643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126174653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106713572 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101754447 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173935477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105986383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137114933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115008494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104877073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127001709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105835452 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11274077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124717229 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127731166 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125739251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114458075 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112525967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136106667 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117278862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131567312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10612256 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105093106 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126865489 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106561554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110268703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128014095 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114190744 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122771455 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115366643 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105216917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127999742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111959267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105200566 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133067127 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114936707 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143263472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106836643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105246602 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140211588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10604496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104795753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12481484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106298983 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100879809 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139372278 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116775917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139728003 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114126467 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126384208 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107684334 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106367587 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127619346 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107332323 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109835105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135773268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106401617 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148982649 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10682745 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105703883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136440852 seconds)
  done (took 8.816926944 seconds)
done (took 167.65367515 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.154200011 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193434747 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148407722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18116524 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096109891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129029781 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150984734 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152029742 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093972911 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.119017004 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096124467 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096834003 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184742717 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095992563 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094962827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119944937 seconds)
  done (took 3.061191957 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194742927 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311362304 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111730408 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12152349 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106245194 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101481008 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122321998 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102583467 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10028457 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130092701 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103060819 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097506407 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130405169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098927254 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100021115 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12499941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109317253 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102044361 seconds)
  done (took 3.229013875 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125639673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145620067 seconds)
  done (took 1.239316688 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134810569 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200313636 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279284971 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175095894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123628374 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141632276 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154260256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134971806 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182582784 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137149619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11505291 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099946238 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150049431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105294086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135309475 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102252105 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128021396 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134146622 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112930477 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102756696 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145161541 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106195688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105254396 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135583932 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.172614113 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136914299 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105501771 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103985065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12663433 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113050478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107109396 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14061976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112919781 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178463813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105619375 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173865659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132863776 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102574136 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111444709 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122441434 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106709475 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104858988 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140374187 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101854787 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104379251 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133242533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105686275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104638455 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.133225371 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112284193 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13248444 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108641523 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17138956 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111207794 seconds)
  done (took 8.02301885 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858190684 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143514717 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10191139 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013197794 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151961714 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115631771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.846961777 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146522666 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255848112 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.885138682 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117907545 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114343866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262817798 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.252455933 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.202210244 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352317727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690084088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137857183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13025022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167928097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109803548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150138671 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1226712 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435027938 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102244289 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101172776 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13171351 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113983768 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180034628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101230028 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127584427 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199658959 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266171825 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210858566 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123355913 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100858598 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099612228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188361531 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2716801 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220486876 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18663629 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0980397 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099343059 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133032983 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120789231 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096488882 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183390511 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193683078 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194147919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103954372 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136001027 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112804188 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107349493 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181213506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118888421 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35974889 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356823376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099712363 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131746895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117319533 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271468732 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099963493 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258319821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127970556 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216763446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099004448 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811482416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18730962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09989758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132029143 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107204036 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129447792 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109397242 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182958519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38512454 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135796418 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105481519 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099752404 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227736043 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123057369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102362955 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18359957 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104035084 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108950916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138447201 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111927913 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191497682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272355897 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113060037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132373419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108534308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112426331 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12582329 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209787696 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.254284497 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155443049 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234975556 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1316796 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162214411 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187012118 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129546669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169464519 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131032358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11741876 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129731606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227538946 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136331434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123691669 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108418143 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109320907 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161870927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103433938 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131636872 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16775028 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.468841354 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186895112 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097154541 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126438349 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112427291 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181853504 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108918051 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268808237 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108905988 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187500072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131026872 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099673381 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108963115 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184156156 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110382569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133399289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110165483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13582385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.252330486 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222820356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138095563 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24369336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189702635 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110092154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193698454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11027576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190581041 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11122243 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130656286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104064756 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800303332 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113849417 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133604179 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106707088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209559801 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101687165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101730784 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123691563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099025976 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807314146 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108674812 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120762939 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10385897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107487374 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13271557 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109615026 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105436763 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182872711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24552635 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138095479 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108362612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123236751 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159659371 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124962333 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103336286 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101268692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123250663 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111962802 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105323054 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125982162 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169560201 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179148576 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230403497 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.534082737 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124602263 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103003155 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243442896 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100358857 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340817164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111723545 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237257367 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187763365 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099219113 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.352510607 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18928169 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205744622 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105285462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194910406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099075196 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109651896 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183025285 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124364789 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110714303 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178460662 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117013756 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136009646 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191253402 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101912976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251693278 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098987425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191913163 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103300044 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131795458 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328317597 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103118543 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141272006 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160724046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129001194 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103129137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70943155 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101820963 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135579043 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110309131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236931448 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187391019 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109170502 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134923425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115806582 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184549038 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235260584 seconds)
  done (took 46.477310817 seconds)
done (took 62.989294468 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.293552884 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25966434 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309046773 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216594519 seconds)
  done (took 2.140686869 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.30027718 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167714695 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.23715456 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.100772936 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253315157 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09935403 seconds)
  done (took 2.1526856 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501733336 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.392576396 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352658211 seconds)
  done (took 2.242431708 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249717925 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237573268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351006756 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418955992 seconds)
  done (took 2.366944066 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30394027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133470633 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128841645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217889207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.286396218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26083815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.179602906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18301684 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.182104338 seconds)
  done (took 2.919903282 seconds)
done (took 12.814145438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.304503421 seconds)
    (2/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.302533467 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.313763952 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.305509502 seconds)
    (5/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.313861468 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.226513306 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.133720987 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.343242914 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.319988543 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105837879 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.165380672 seconds)
    (12/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196968326 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.335132472 seconds)
    (14/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.358176289 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08312243 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107463009 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.163689732 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.225826595 seconds)
    (19/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.294518406 seconds)
    (20/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.164495969 seconds)
    (21/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.198896911 seconds)
    (22/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.143848591 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132653461 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08466387 seconds)
    (25/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106178777 seconds)
    (26/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.324500924 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126530279 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126303707 seconds)
    (29/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.22942398 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.166567919 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.166631569 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083505176 seconds)
    (33/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216617751 seconds)
    (34/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.162581847 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207500154 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110147712 seconds)
    (37/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111380476 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211302598 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106206051 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138774283 seconds)
    (41/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.152244674 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196146697 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152566811 seconds)
    (44/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109975069 seconds)
    (45/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.192906538 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.235224548 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109438776 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.225744477 seconds)
    (49/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.190537745 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130798537 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.177673916 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174226302 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.206286183 seconds)
    (54/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.152293509 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.108845323 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.132376717 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119378494 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106341596 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.181487663 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.18959588 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133768414 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192178802 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.225733222 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084348964 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.083780164 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103582286 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.162981798 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092820664 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126764686 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131477965 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08535373 seconds)
    (72/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126684438 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107203582 seconds)
    (74/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.107989595 seconds)
    (75/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11554223 seconds)
    (76/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155755744 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.151661542 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.148038165 seconds)
    (79/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088123732 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222500211 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147082412 seconds)
    (82/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107649773 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.226105018 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106915076 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151084977 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110390182 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175676026 seconds)
    (88/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136703444 seconds)
    (89/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179779042 seconds)
    (90/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082886927 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209368214 seconds)
    (92/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085924321 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100768402 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13331844 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.146740154 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108382905 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084183173 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.166044386 seconds)
    (99/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.145802757 seconds)
    (100/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.301208654 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124521033 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.230892102 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083611514 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107355855 seconds)
    (105/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088628532 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.120568995 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109558947 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084497595 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124604241 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.192238977 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084440624 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08259573 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202510941 seconds)
    (114/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.094395919 seconds)
    (115/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09436337 seconds)
    (116/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.087914512 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.107307628 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086150787 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107735575 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.107780512 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.108560855 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.086156137 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085816328 seconds)
    (124/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.18453696 seconds)
    (125/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.108558245 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.143706031 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083726465 seconds)
    (128/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089257445 seconds)
    (129/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.113414898 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086698806 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084198107 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084001946 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.151235374 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129469943 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085555894 seconds)
    (136/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089688851 seconds)
    (137/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084528583 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.135291575 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085073662 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117661104 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137183535 seconds)
    (142/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08589075 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101616837 seconds)
    (144/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089818425 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134584009 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085124001 seconds)
    (147/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084586479 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083990682 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08344267 seconds)
    (150/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.109964247 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105320613 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107367635 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18421364 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.086024053 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085258 seconds)
    (156/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10186874 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127067151 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.085744737 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108673962 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084602609 seconds)
    (161/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109058856 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111423284 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128386294 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132009667 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.085239389 seconds)
    (166/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089571258 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10727286 seconds)
    (168/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136749575 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11097274 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085750146 seconds)
    (171/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109033184 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.108552832 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110402346 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086013877 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.133368354 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104588727 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084635043 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107984975 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133741813 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086770884 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125991835 seconds)
    (182/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089904952 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134870457 seconds)
    (184/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110084299 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.085025523 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084746724 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135444753 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109458703 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.134099782 seconds)
    (190/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.085266355 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086464356 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102012096 seconds)
  done (took 27.909020176 seconds)
done (took 28.911899248 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.222499262 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131006148 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112023633 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110102623 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.207804053 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118537301 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.145959283 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114088885 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115992586 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133591741 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103320904 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120274257 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134446129 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180447124 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138819488 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104931219 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10325115 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117058361 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147226678 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12168629 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208826509 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104602376 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116202042 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.129936307 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183641705 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131033397 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111054551 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110000144 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143779571 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11074396 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110347761 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128289747 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120873103 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120509693 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128157098 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11120963 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101825789 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09040843 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134471384 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111394414 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118021648 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134408815 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112982449 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103538707 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136594172 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109633262 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102741428 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139678871 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102456109 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109991558 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130010551 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124671384 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108294445 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125205819 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102892008 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103989966 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.141189274 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105680891 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12124577 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101821322 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.129487056 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103505852 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113391247 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129042572 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111450107 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103603541 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134335852 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11239175 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108013023 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130046132 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105225372 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110624456 seconds)
done (took 9.960355556 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.115415359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.159457386 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.206205058 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215923458 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133439253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145730925 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125783903 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131922117 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148663766 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128723812 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162500732 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132885699 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216545007 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.115455826 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118366193 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139653268 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117692237 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140723057 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.192876788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.152462833 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133842853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116424437 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162189985 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126866652 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.135242349 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142916652 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109747053 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138170085 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11187986 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117838704 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153807567 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110844953 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108981687 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156404493 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122526558 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140634725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.12222027 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114209853 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.134336611 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110889424 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117420042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.153388958 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110149614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119095556 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139441041 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117836029 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11788654 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142810566 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113171732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114377053 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13932526 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136787435 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141408905 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.118820967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116603283 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143280097 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119260259 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117218404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135863537 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119587937 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108969376 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.137347397 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11458246 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156229636 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112955727 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118420899 seconds)
  done (took 9.889713172 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132620644 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140210964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143200697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119648658 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112392098 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127656231 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102023002 seconds)
  done (took 1.933006804 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10948195 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190133511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.213600441 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212947245 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208986977 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.198248477 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15047002 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104286748 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133402642 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139795959 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191225398 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.245725566 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108469745 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144672853 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215788918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103714328 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.217379361 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.106195135 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115354626 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.21615113 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116203612 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156148831 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116398403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103237121 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212771548 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103607699 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268889631 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119300254 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136393007 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118315701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113963839 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209358275 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212226178 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117396798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107735307 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.21367312 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209773745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115206907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.228707378 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107766422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213746042 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114854062 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118263381 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142937399 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119012757 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.201630587 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122264837 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116246603 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.142530787 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.196250271 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140336088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187817363 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139628671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115213951 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11269509 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143197343 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123646766 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115228957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.224921157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14389301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188770729 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213528496 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.21427621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18985388 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151309809 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190258439 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.210859221 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114296194 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13848091 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117626647 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.216350271 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115034186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114685567 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.203877251 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119723617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.217684825 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.215925076 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114317081 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116032737 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134124421 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113933021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103859635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.206880186 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113858821 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112273554 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150490473 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116486347 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.140365159 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110696814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124948164 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.141471544 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116154364 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120014172 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141720851 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120889089 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.221460466 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113847845 seconds)
  done (took 15.973386626 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114692925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105783304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108923262 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132091736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105532951 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105276063 seconds)
  done (took 1.744317057 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148315284 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116384627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151654105 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117908049 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168012997 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.226065082 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.23234032 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113074156 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160838178 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129348168 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224766035 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202483181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.234617722 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118185549 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.229252269 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147130231 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.20539002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139576565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127475233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113647389 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145646216 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121423567 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113587799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215439068 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120266087 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147896682 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115005687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129388911 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152502762 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114356072 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119424005 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14785948 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111948319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137429706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.207611983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137124042 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113638692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125292866 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144679601 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123848175 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231497306 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11477014 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12530726 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.153007679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114442395 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111137244 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.152971879 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11378947 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.231046376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124363744 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151467396 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120016001 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120142561 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.15136576 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113824352 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113301922 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.155279858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.206988316 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147753962 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112951159 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117177623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.149169519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113549019 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123331483 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145515784 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127504148 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136725013 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121082256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115199227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14235834 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129514945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11838318 seconds)
  done (took 11.526893168 seconds)
done (took 42.116152658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.532600265 seconds)
  done (took 2.596985053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.919526801 seconds)
  done (took 1.98881445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.775995641 seconds)
  done (took 19.877927265 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.54951944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.619348133 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.058371596 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156835605 seconds)
  done (took 3.453711809 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.023785779 seconds)
  done (took 2.114081113 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303516839 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267446719 seconds)
  done (took 1.647505456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.759585527 seconds)
  done (took 1.846563483 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.546533436 seconds)
  done (took 2.620683908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368899206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176268205 seconds)
  done (took 1.636748944 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.631813588 seconds)
  done (took 1.720723794 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.793107981 seconds)
  done (took 20.885471378 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254714031 seconds)
  done (took 1.353360525 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296365805 seconds)
  done (took 1.394581217 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.798314525 seconds)
  done (took 4.898354947 seconds)
done (took 69.115069598 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121120691 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118529558 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118012797 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144589343 seconds)
  done (took 1.582084851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130377573 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118835931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147871962 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120764232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126068805 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119675858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147539939 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121418179 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118745729 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148896506 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120522893 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118378302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149259544 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119335258 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116679487 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148495371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123498104 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119208216 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147184569 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121630273 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119561886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147403434 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124436132 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12250078 seconds)
  done (took 4.194264461 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121737174 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109476319 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110854538 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135774482 seconds)
  done (took 1.579620683 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134283842 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132206597 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155858883 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128643991 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132205842 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157721086 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119357866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114917529 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145798126 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128882215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135696508 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160315096 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131650969 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11873412 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157121608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113512787 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120473593 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158733325 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126225189 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.153121271 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122081551 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125830911 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150545019 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129808549 seconds)
  done (took 4.349890948 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197291253 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127868695 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.170163979 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160538752 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171161543 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114453351 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138314372 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150401629 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122729808 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.144511959 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120102421 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163095136 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147683636 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118642621 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115835851 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149393527 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128383404 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120995224 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18577638 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120603245 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151135828 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13012702 seconds)
  done (took 4.252957958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129213515 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110559511 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131285341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115460144 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122048862 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138117522 seconds)
  done (took 1.856478833 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115976508 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104086444 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104113558 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130696265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10938164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103940765 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128043903 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105532941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105034772 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104199259 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130962573 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10440863 seconds)
  done (took 2.445827395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.353949726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110329282 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.138221857 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110780412 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115192711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107501973 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.15154393 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109654428 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.274286361 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108546912 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149573688 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198815432 seconds)
  done (took 3.037517237 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215252708 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145761973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301933826 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370928986 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165726274 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187159959 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272298049 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192850341 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204503746 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136098633 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242803114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153948698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177984982 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173793038 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164925256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161296415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195206495 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189512123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175409801 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224763694 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156246317 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191943378 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179049877 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17837577 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134736164 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188537308 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117448032 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124977366 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195014646 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189991919 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171227845 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172124986 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139457128 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218927888 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258902373 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17105345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315005735 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131849994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202637211 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183030556 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256792667 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163911081 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188479192 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180008143 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127457924 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204896195 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152739695 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200075762 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128754046 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167658963 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179384005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199805606 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203114967 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135500128 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316802472 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16460526 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169506125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172177485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209977596 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213273109 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166118224 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120514225 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212838653 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208441473 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203642684 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140902124 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189648995 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124975781 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191077727 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194069062 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207205707 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155678807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225073418 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157790598 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156999452 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199815944 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176398654 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202909127 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156735299 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146068922 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149616294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159694498 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126746952 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197762124 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146088306 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196663906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157760195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342699334 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187792231 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183592428 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157652744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185381883 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157156267 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17342714 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111017306 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170704173 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.16166297 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182249549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131771816 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180151486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138080243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125768125 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178050358 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120682718 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184770669 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133976165 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190142358 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156310976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155527254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164628928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173240041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152409693 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193582481 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181462367 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159092319 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130634122 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215244027 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155298807 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156439712 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175405259 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21035508 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147506679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163350938 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163827547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215390724 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137913447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213861604 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134432599 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161476946 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145216826 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187782551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156262665 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180984235 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126575465 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.175848392 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196182232 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153275183 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135555496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193604319 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131604029 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123177466 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166245301 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133217532 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166455433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142738427 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131995453 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180639072 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155616048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182259303 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181059469 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133495739 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202167127 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131611136 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156827234 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171870841 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11601725 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199610572 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181288515 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155610316 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226242045 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163311004 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219610068 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184313221 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131671958 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175174353 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15498484 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118728304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188392829 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152835034 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188376855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17713813 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217200441 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193616543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147719253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175232463 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164069571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202054366 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17681731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1442933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155197528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190853682 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118366104 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149736237 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127232287 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135379745 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157363326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133260657 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202205589 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160988769 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213432968 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18656447 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137388194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211194463 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124786902 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187919423 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.161782046 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166196996 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178610416 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208516005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163873338 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168148056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186446894 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119519892 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123680918 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156603165 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164046402 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132145886 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161835906 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138626067 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210313772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198410936 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146749164 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225553277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194487791 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191696361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.146661208 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164874432 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196209839 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157133621 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182791677 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16301792 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156152675 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207860755 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137923126 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214918697 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183216986 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162117286 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214803208 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154570059 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157017624 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146657422 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187125877 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136073143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190436407 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145839226 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126528435 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179390115 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135018492 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150636311 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181516067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170161787 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167622588 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187349523 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194323605 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125181979 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139053396 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186559711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141817988 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.141200892 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169625144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210370484 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144075474 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183307674 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174493482 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158380974 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319317647 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217497086 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204916121 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133972276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137443583 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189754008 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186182547 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162823993 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206973246 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139516664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204913831 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157540267 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169372089 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129590456 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146644476 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178253583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145909207 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158763052 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154681905 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168175331 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183964246 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16547039 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157965118 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18732608 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144780821 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178287819 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139478255 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223416996 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155294926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202617177 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154148771 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194426413 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216314322 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124282944 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126553983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.157535661 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180931065 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126768584 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189616169 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.206432728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221782054 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161943312 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189258291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136468956 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15152859 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156259194 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144935203 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22024636 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161692703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135390594 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219742098 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134540735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157499738 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159077046 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309236642 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143729891 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201821048 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119353429 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307196005 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127969747 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159422206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163046837 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198083027 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130758618 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183364799 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186569466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139100294 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192767564 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134045562 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216240802 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221445446 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164441592 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200843021 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.170490739 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160500783 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187162578 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175410535 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170184496 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144334949 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188360798 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181804968 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209590754 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130538461 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186441107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156743951 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182461902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170099368 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162473627 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190089423 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156077003 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161342852 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165947975 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123088157 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155338953 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208343868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159240956 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175428473 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187716567 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130927423 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152620397 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144863508 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181477795 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139103933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127868633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210174076 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126925214 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191246911 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177490292 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15853552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156507964 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172761088 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129625212 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139796521 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171206186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130126785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170301723 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208406706 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127367103 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207594804 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190898945 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163238543 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183815489 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140569365 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691926944 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126756395 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207579664 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148042437 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216011829 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14917857 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189419377 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159286212 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17597667 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163243604 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175547941 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.238756378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191026461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156935626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157436258 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140881444 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136880468 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1605482 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150813108 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185894668 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139143114 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.16159134 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157061913 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138656525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173142545 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138221452 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212097739 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147025849 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213054998 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209159038 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136599186 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188304409 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17165343 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158052428 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163303552 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20161451 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13868566 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175566916 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132210721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133791618 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211299175 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122655947 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18640937 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160728724 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186006103 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15717743 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161353477 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161798135 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13790831 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190955592 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123889397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180095986 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158720752 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161342653 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126705647 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184045825 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159942339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181040353 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125708837 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171369207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214101851 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122123586 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130850056 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309239748 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189472384 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189722412 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.176066417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133754885 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170133618 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153884322 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152500437 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189677504 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126688408 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158055329 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128879588 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195565053 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152747475 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184598681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178554139 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186802272 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193586504 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161874021 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287919789 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166829827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158096553 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124716354 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157066679 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1402892 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16081079 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140891433 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215277406 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18097942 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.184370017 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14553433 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162851092 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126252614 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130319112 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194552607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149266015 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189380088 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143010468 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112271306 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171895125 seconds)
  done (took 84.062494085 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19610834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160784562 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.17365146 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22684017 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200768239 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295277854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234935112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259384746 seconds)
  done (took 2.938025833 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129791655 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161219761 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145010996 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148172361 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.121247328 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.457376541 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160415432 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12194304 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16804364 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163752698 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.145150844 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623596273 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116922051 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148945596 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.132055845 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119845455 seconds)
  done (took 4.24435085 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.527198528 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.604977761 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.32774367 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.286640056 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238763378 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182815832 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.825082574 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19660427 seconds)
  done (took 13.384912621 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154700054 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136932191 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.848854792 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.266785447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152586988 seconds)
  done (took 2.757257207 seconds)
done (took 131.766636967 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126406253 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124268824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121769884 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155051058 seconds)
  done (took 1.708725719 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191849782 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096341421 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098382637 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.124580257 seconds)
  done (took 1.704271515 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445657153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096345963 seconds)
  done (took 1.763576313 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155411934 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144770401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167162608 seconds)
  done (took 1.675720247 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.149286974 seconds)
  done (took 1.347748212 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.135914833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122603172 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.244536582 seconds)
  done (took 1.707355815 seconds)
done (took 11.109573965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128046041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423633367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435462033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136167003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712307544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430304509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031384293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177297355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177728626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140966754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133742668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692158586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052581317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.366884961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005878688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.408633645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70348964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113802535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14880446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114708107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012021093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14157873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113886868 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113596349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.7831666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423483512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111473453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.403568001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111961617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11441293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430871088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112804017 seconds)
  done (took 17.595632585 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124930012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175680261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149646659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114067468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115110748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142211077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124203825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124347787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208735512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111458891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164129716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112082884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116464513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142343964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137817735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111253276 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144636606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116563161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120333143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143591796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133929916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110827023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142766774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116319892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111917693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16318157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113653675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124032233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141508246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11683671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116294956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141782283 seconds)
  done (took 5.443242022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165493993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18356358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150787769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148437753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189983487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116027669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226672042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151414792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208157592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11335803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133931696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141579943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152954996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113192557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168384561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113149506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115929065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145344214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121653999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113108821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16500908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112313881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114027779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144390223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112621447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16514118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114325042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125366015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140522919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118015744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118402604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141880121 seconds)
  done (took 5.749267101 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132226394 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128373264 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135655185 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167696088 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122915833 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126533556 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158522468 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12331119 seconds)
  done (took 2.29685549 seconds)
done (took 32.287424464 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140883795 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130166551 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129425792 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154058432 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.196890699 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147167551 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127581784 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115945759 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153955672 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13270377 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111890374 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146226273 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132708804 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120360728 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.230456207 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124213465 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.236353386 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198335362 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148821272 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125567912 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118319454 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234789107 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121761759 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147925484 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.206715002 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.145587282 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.189835608 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119820657 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151309721 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115133903 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231782068 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12160303 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116269066 seconds)
  done (took 6.219597953 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.220005673 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118914259 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152556548 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121964553 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119100022 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151668739 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.2170544 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152430062 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121568074 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120560851 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119589467 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228241794 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125581324 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145038473 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121577152 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116214158 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.248721943 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121094083 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.112711483 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.128757378 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114031025 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120995965 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259153104 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113818793 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120641183 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152639985 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121851647 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123040271 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151690885 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120632729 seconds)
  done (took 5.582490904 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134729899 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134314356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16777713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190312178 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149875091 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165638148 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14358492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136274586 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176740579 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115943836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130239619 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183884051 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132148661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125871364 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150399923 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13562441 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137010518 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146446324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122725288 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132135454 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167773422 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133508735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142125144 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154504772 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114599482 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121600957 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.156357066 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130843258 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.1229959 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160185012 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117929625 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118404647 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148073266 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.152715223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11675057 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159917037 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141880137 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126119797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.16166978 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148328294 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118519136 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14955088 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141812123 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170903113 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147638546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128799839 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125761207 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.16140506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114278438 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132907497 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190986452 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114982233 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135151506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147953774 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113557694 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121932159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146967961 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120030944 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130285844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147472807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141038599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122296458 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156156116 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118710343 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125869735 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113057575 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.145846635 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119916659 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141920203 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153581196 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153496346 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114703687 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157999898 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128561104 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12513712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157095043 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115879559 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125465188 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155393424 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123305623 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128145826 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117078104 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.152354987 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132487526 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165704937 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.132973034 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127010343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127602887 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.152775801 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117741091 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13205181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.149111454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121512425 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127293577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146398324 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119634061 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128718205 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.157767007 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115947824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142164501 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148601281 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11699012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141430428 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150088562 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123871975 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125784245 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187710412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117312235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127538106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12794935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.147879763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123641423 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119704853 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.146863019 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13375207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130451268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.153722547 seconds)
  done (took 17.409007519 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.335539484 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.318583212 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185139366 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.320558038 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160949366 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.214635992 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.315050669 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.315994114 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115532963 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.186175862 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.199588524 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.252773779 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149352282 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143538521 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.317802485 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369310534 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179078752 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15344283 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.188195012 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130158811 seconds)
  done (took 5.778457633 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138655435 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152002104 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171366044 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146728186 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121976353 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162067249 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115870504 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134488069 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155346406 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127753219 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118260337 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163172288 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125374768 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129140507 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162614566 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153511589 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123663069 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.15225052 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139570122 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119931111 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140006196 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144875509 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125157368 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171032902 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130871121 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126855488 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147407752 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121700756 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11964396 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154006583 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121765979 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135443273 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154579794 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111884264 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128169035 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.163331737 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120836913 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119869016 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121166051 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151349372 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131500771 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125629921 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.15624023 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105840508 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132953735 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117617501 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157526655 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129892075 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112224027 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161963442 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130392448 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127148991 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122118049 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167576472 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120627715 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13243421 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159336411 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127502247 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150184821 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116958342 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115246213 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120587905 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152788922 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128582475 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128920677 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168185992 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132791483 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115485738 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.152174533 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120951987 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11993802 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.163058262 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138787658 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121429695 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15232903 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129832873 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12072297 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100109731 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.158001115 seconds)
  done (took 11.99899242 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.148303954 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121788331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135580633 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184539037 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126696648 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122378185 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156353703 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13704061 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127111329 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163257226 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127060874 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130834445 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171489081 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126923171 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121630306 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164716785 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127289862 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155415986 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.169061723 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145487345 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158438737 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126495276 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129436219 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.128723513 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.179102811 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129741946 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.175582002 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128581185 seconds)
  done (took 5.259519036 seconds)
done (took 53.45950142 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.360476002 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.572603789 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.33558404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.337725871 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.402360566 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.341106699 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.332959798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.335942714 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.853139802 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.311646001 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.339061503 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.3496116 seconds)
done (took 30.104232668 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.444464588 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.86917424 seconds)
    (2/2) benchmarking "String"...
    done (took 1.621093813 seconds)
  done (took 4.718149993 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.328401967 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.328667361 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.550795684 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.330001522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.333569747 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.351266753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.327887214 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.331330752 seconds)
  done (took 16.779129327 seconds)
done (took 27.500397161 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.412626796 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.525879022 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.58462697 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.333975419 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.333145543 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.345151943 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.333202721 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.363989043 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.346988038 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.351262092 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.751258942 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.583597281 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.351452978 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.700991028 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.335688361 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.345083871 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.349197441 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.583658625 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.331186996 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.371212121 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.312584906 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.309812198 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.374479548 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.337706249 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.339646882 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.346652542 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.404813245 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.333792375 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.536715069 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.357689234 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.370040086 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.33313374 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.401843405 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.349466545 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.337757978 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.334558781 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.543917602 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.343211131 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.316964094 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.334945801 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.545229589 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.346139048 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.349518798 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.344313213 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.339077196 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.405144698 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.322591065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.452019388 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.367523439 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.337016273 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.364218038 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.735427444 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.349193812 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.342620013 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.341880634 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.575255605 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.358917213 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.408954905 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.363608563 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.351097702 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.336072284 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.354849674 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.369057499 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.340109678 seconds)
  done (took 152.581186774 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.337044542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.340794029 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.34212922 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.350672387 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.337730479 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.339482228 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.336151809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.337715116 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.339419737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.369116104 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.338861847 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.340729884 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.342512418 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.300342307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.344595632 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.357227168 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.341140034 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.353341756 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.362243587 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.336768734 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.35874298 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.336977892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.34293733 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.340199701 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.345638267 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.417697959 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.354774456 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.370532434 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.343764644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.336302319 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.350058952 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.344991252 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.997159803 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.206062609 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.356061686 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.369483788 seconds)
  done (took 85.257164292 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.33796077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.338198132 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.337726075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.372936737 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.34024195 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.965808866 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965476618 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.059409387 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.821924496 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.852055558 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634314304 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.342267443 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438094089 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.352144038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.340232313 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.355552479 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.365099485 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342726809 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338053158 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.966883291 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356398721 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.506647988 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.521058203 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.355376009 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375541904 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.73815155 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.343338555 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376069862 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.680995218 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.389564227 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336831987 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.773051402 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.515907599 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.451525973 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.34048194 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37757677 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.340001918 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.626761323 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338642502 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.339298619 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.340913978 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066330306 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.349246467 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.967195076 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.340277094 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.333347786 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.339816878 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.345577116 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.521042154 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.141981673 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.343583888 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.340556902 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.343878086 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33917379 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33940576 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.380933719 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.484966943 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.443621285 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.340262371 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.344416212 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377900842 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.346516275 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.602312607 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.340918471 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.010670166 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.403701339 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.473809764 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.964812844 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348261213 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.343891663 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.342946982 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.443926719 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.46485343 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.34312656 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.342048034 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.3439079 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.343721954 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.456441385 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.342115779 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.782794775 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.52485953 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.357797069 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.866121462 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.347358959 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.442374103 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.342904509 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.766587417 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.347141489 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.345519393 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.120223712 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441708008 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.34284319 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.344021459 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341651638 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.782276846 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.962469907 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.654132062 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.346782315 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.694360903 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.346184608 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.801922095 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.934536545 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.065459108 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.343976252 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.461404931 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.523017667 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.353551537 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.340048762 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.837481305 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.342804289 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.342895842 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.341506415 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.40205072 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.743966084 seconds)
  done (took 383.60992814 seconds)
done (took 622.677145086 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.24219954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.178015839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.329718776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.183456442 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.160646565 seconds)
  done (took 12.327427131 seconds)
done (took 13.562262446 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544341284 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535913399 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39937782 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53871044 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36903334 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556579284 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.527568918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.359235923 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.468880497 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.424555159 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.454465783 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.398809011 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.376524857 seconds)
  done (took 20.187488203 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.674428985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.345067663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403642639 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609173248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.384256113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.64214483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.672755628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.344761015 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476650649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356292016 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353900551 seconds)
  done (took 19.499457826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.629766223 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.344724922 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398179536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.642692819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.378398803 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.655644946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.659770818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.345850949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492500938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354883499 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353923715 seconds)
  done (took 19.488734004 seconds)
done (took 60.40992032 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.210991028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.607838525 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.370721482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.432019358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.350917539 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.363052382 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.431468658 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.35515394 seconds)
  done (took 29.353671205 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.347731117 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.351557242 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.347130879 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.348228592 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.348942078 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.352381147 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.350043179 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.350860156 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.348948627 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.349355261 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.352005129 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.35008274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.350567961 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.35031747 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.349603547 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.351794379 seconds)
  done (took 22.830395398 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.353451565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.350502684 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.349029288 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.352073031 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.351355672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.350726156 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.351998862 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.344963236 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.346401186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.349236683 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.349878614 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.349639271 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.350246429 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.351090424 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.346036787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.348987788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.345965629 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.346730696 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.349286657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.344201589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.349977387 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.349986539 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.344597879 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.345968518 seconds)
  done (took 33.607925523 seconds)
done (took 87.02531333 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.341587003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.347985487 seconds)
  done (took 5.921123527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.411615604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.411086234 seconds)
  done (took 4.050142689 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.35208055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.350669149 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.348999535 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.35291014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.349594454 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.349632922 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.351842897 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.353269402 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.350881224 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.353065741 seconds)
  done (took 14.742473714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.351665161 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.351601116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.349880075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.35286702 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.35012604 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.35145128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.352822462 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.349602726 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.351236782 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.350388219 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353998621 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.352330764 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.354556637 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.351305346 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.348561531 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.352444797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.355088597 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.356330079 seconds)
  done (took 25.568279246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.37434452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.377354912 seconds)
  done (took 3.991748394 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.492862793 seconds)
    (2/7) benchmarking "second"...
    done (took 1.389025621 seconds)
    (3/7) benchmarking "month"...
    done (took 1.468159031 seconds)
    (4/7) benchmarking "year"...
    done (took 1.458555998 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.395345037 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.373482794 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.394403525 seconds)
  done (took 11.208411254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.354586413 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.566402288 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.701414642 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.870063785 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.357976495 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.360781794 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.155610696 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.358027583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.359002109 seconds)
  done (took 15.320208019 seconds)
done (took 82.029265978 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.342862367 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.391071185 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.367708627 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.366900843 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.648915168 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.369160222 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.343497621 seconds)
done (took 17.068054413 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.327867429 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.330154351 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.323599628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349999265 seconds)
  done (took 10.566347953 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.355909369 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625129497 seconds)
  done (took 5.217025281 seconds)
done (took 17.020084568 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.354111508 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356510039 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.356566198 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.351644528 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.35488963 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.354095997 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.356244843 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.356128204 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.357685721 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.357613341 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.35794415 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35518487 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356724374 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354021001 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357068079 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.357379195 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.358862049 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.3557244 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354846634 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.356196917 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3529327 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354901572 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.353884524 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.357030707 seconds)
  done (took 33.772671425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.354353268 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.354416491 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.357852062 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.356953298 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.355367808 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.357206087 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.357178706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.355952786 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.356151171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.358199598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354606242 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.356650744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.357709453 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.358522729 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356814794 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.35706958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.359205213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359504737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358754987 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.356385736 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.356163427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354707546 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.357339303 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356725273 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.355763449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360211053 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.353488406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.354818496 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35434121 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.354372457 seconds)
  done (took 41.935667351 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.363577243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.36853771 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.359859225 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360517115 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.362221021 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.359626501 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.358594606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.361249038 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.35944304 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.359718956 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.363871786 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.361746046 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.362885685 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.363279871 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.363694696 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.361639931 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.364550892 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.362857276 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.360683628 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.36187892 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.364941135 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.362103504 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.36329084 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.363457161 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.361711393 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.36240632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.364133869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.358973705 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.36353269 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.36369324 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.364374661 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.360669027 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.365207246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.363202014 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.36509989 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.363308356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.3668319 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.368785295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.366886399 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360894723 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.363400024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.363505002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.363362447 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.36407128 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.36120207 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.363371569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.364793658 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.360141879 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.363159541 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.366038619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.364428082 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.362508502 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.36494209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.364975786 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.365290162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.364940168 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.365766142 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.364986285 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.365402336 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.364284525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.365178352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.364917365 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.366433163 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.366773094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.364331952 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.364275065 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.365486244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.365107227 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.365852379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.367185658 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.363698655 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.36543683 seconds)
  done (took 99.419554442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.361110645 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.362492021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360798276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35863691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359232237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.360843624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.358848379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362185267 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359770059 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358104559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361983949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361284756 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35989291 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.361767926 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363735112 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360169098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.361028775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361910554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.362052563 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363238944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.360863554 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363670044 seconds)
  done (took 31.188253337 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365292453 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366526835 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.364296956 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364005293 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364407227 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.3647426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.362281418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.36393439 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361926295 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359043189 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363119129 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361270205 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364111472 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361621324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360528315 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367038028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364032439 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.363499835 seconds)
  done (took 25.783487318 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.36011582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.358752375 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.35985206 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.361090998 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.361797491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.362478638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361549987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.362983754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.360688809 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.358397853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.363421063 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366656089 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.361825496 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361600064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36231986 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362612392 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.362568116 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35909852 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365951676 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358041952 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.362155111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362643585 seconds)
  done (took 31.19928824 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362648344 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.362048948 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.361303118 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.363591109 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.360955014 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.360896683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.360945208 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.358398431 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.364591413 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.362612821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363813831 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36256694 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.364667618 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.35950466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.359944332 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362566301 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362302442 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.362701951 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363570315 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.361382564 seconds)
  done (took 28.481895071 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366434644 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362819493 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364090371 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36239585 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36615645 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.362524444 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363133685 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.362541219 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361070373 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364481533 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364861341 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.363157915 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365146616 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.365904779 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36151887 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364377133 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364538308 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365364247 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.364280318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365547956 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364656088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361585625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358242956 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364119099 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.360905165 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363260995 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361299813 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363031399 seconds)
  done (took 39.419309832 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360141983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363332797 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.362193515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.358525434 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.36165666 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.361389635 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.361923602 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.361822916 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.366210547 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364228815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.363827883 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.36371043 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366171689 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.365280944 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367400613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.36352634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363336404 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.362872246 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363972127 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362134183 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.365565003 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366164607 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.365888761 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.364412813 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361764612 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.366833241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364737202 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.363112625 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365860167 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.363105073 seconds)
  done (took 42.152939814 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.384407844 seconds)
    (2/2) benchmarking "in"...
    done (took 1.383644731 seconds)
  done (took 4.009542901 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.362054925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36371733 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.367589487 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.363617371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.363022387 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364677418 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.366603095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363969075 seconds)
  done (took 12.155822663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.363278411 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.366270044 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.366994836 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.365981376 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.366830958 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.36147115 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37033262 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.371995802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.362894935 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.362896179 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.367146743 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.366032769 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.366183182 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365432649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.36415135 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367170421 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.371585178 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.37028776 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.367467095 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.369687028 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.367429704 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.36541775 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.368983166 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.370059987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.36623565 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.37353807 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.37049581 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.375426087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364106841 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.365287456 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.363192314 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.36630478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.368021667 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367475478 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.365660084 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.367643037 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370875798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367582813 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.368285308 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369398459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366938481 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.367667493 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.362331423 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.364142731 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364625681 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.370975499 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.367593143 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.366370759 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.362842479 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.361804038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371430671 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.361604043 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.365076259 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36427668 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366527687 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367857209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.369936682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.365515762 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.369181053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.370659004 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372734645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.371183025 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368450642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.375358778 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.376853423 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.384191124 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375856044 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.371833058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36557305 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368218637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.372080919 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.378159828 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376914544 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.370319316 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367488828 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.367577842 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36445823 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368583027 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369960174 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.371243661 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.371106099 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370728881 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37381155 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.37687573 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361718167 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.370473907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.366880876 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.368328229 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.36228513 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375303816 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.374168968 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.363421349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.363425979 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.36566375 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.367504268 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.366290761 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.364905 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367079916 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.369128495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.368448425 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36843939 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36585988 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.364395401 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371373342 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365388028 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.367150322 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.369555861 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360587018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.371864829 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.367710788 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366846341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.36408235 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.366417404 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.365112381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364443716 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.369476662 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.371406774 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.361626778 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.367618346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.365884442 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372450428 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.38143135 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.368508954 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368567649 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.367358072 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.37486144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366332357 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364627253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.371965011 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.364855156 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369502898 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.365602407 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.370195346 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.359650308 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370341062 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364810473 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.366835184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.372129076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.36835586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.3630128 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.361669451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.363273763 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.364798213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.366976515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.368789946 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.369024323 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.372332034 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.364519951 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.366891595 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.369453743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.366329519 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368138404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.366082851 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.370552152 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.36338268 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370629943 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.364383179 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.367360288 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369207106 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.373660306 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366817373 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.363284049 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.367946525 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.370299157 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.366438645 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.368776046 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.369204064 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369482676 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.369339791 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.364827245 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.369771813 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.363487235 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.366506796 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.370771113 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.367501603 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.368139038 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.364910709 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366527399 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367936765 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37263599 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.36414373 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.368570781 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370462926 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.371556242 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.370786002 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369604479 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.367124018 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.36272228 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.366016478 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368618226 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.36708701 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.37709333 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.37612929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373863724 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.364334109 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370971584 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365734104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.372038375 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.368096914 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.370458692 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.370865058 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370523928 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363969112 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37169961 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.368447497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373806292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.366237745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.373874638 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.37351716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.368713737 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377274968 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.369813941 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370921576 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.370903805 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375254911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371802828 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.366156282 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373608861 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.375434444 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.374979145 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.376455156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.375695447 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.378561283 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.381090368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.375659736 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374852126 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.373592083 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.374599397 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375402769 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373625406 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.36854798 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38342147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373537366 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.373063991 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381069899 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.373617253 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.369157844 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.378107124 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.372742584 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372520102 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.36585221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.381262498 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.382976488 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.372203646 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.378488708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.369528179 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377160424 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.379853286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373450747 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.365773418 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.373207323 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.370107836 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375976426 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.369164869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.375754001 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.370153901 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373121352 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.376013381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.377780291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.371054315 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.37328767 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.378482597 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.376013498 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.37585039 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.377504325 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.372616075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.369322481 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.374618669 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.371587036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376584345 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.375508098 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.377311194 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.370904335 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.384483237 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.384586926 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377945609 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.37736916 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.373499529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375266964 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374341867 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.371108309 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372784741 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.373396948 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369479878 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.368967458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374169465 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373945105 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.381886484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.372073349 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.370857142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.377315006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.37634125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.369332149 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.374779142 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.376300828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.376494453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.368716688 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376590113 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.370742863 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373254239 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.369172187 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.375728684 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.382697317 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376807211 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373766058 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.376701322 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.372402628 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.372332105 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.372243845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.379421319 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.372936893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.379811401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.37626275 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378426381 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.374595863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.382508293 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.381156201 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.378038252 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.379171234 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.380282043 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.376296647 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.375977538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377933325 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379919228 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.381949325 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.373872935 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.379914977 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383960467 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.376104039 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378623976 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.378643848 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381252774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.380064466 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381475998 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.382379494 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.375366933 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377919433 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.379745443 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.382384673 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.380748041 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.371516615 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380489773 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.38195491 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.377094472 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376977285 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.376803614 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.380241921 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381000865 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.381036311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.383173573 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.380521264 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382408537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38069979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383051807 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.382462223 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.384012451 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387832221 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383417811 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.38588435 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.37754457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.3821178 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.380137228 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.378007848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.379756506 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.377103763 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.380854791 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.377018357 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.389599198 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.381449466 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.379270518 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.381468893 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.382959024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.37557769 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386306587 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396220797 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.377209543 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384325679 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.380798146 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.373706488 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.384278272 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.380212579 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.375751889 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.377526812 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383441458 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.38640259 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.380431222 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.383086513 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376587227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383355688 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.382658529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.381933153 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.382335441 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.380873208 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.378403466 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.381995504 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380898198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.385108316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3804925 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379725372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.379816568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.386423929 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.386135309 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.37974933 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.380310651 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.379095162 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.378535231 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.379035239 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.383975528 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378780109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383032569 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.379059003 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384203469 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.382104405 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.38066055 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.380301138 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.38152138 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.378142243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.380555576 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.38297587 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.381537242 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383479546 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.379794456 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.382300159 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.376274696 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.381131529 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.381812914 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.377930879 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.38546594 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379808471 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.384075464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378812427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.382641514 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.384913262 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380859944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.378896426 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.376262582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.387548642 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38627423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.386549552 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.38470254 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.389670269 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.37889265 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384414668 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.386016226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.381242943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.381171295 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.387369298 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.379344864 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.377681107 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.385251921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385864993 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.388511535 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.383055394 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.382316453 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.388785551 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.385981733 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392996983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.385211879 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38344859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.380992816 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.38749362 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.382902977 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.3818844 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386105426 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.384096786 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.385558272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380540308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.385267383 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.381801767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390955838 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386083567 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.381126011 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.385783657 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.381342174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389850285 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385894315 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.38502751 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.37921011 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.38228673 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.384170609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.387603323 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.382512113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383929171 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.386718336 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.383161893 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391797239 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389481251 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.384871277 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.38493405 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.377095776 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386668457 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.37692441 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.386843933 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.381174415 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.38007862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.384098262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385372638 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385142359 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387092009 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.394270868 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.387664898 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.383571942 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.383559645 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.385248613 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387862055 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.389649474 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382139241 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.386903856 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392727741 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386791401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.386094361 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.388522507 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.401154391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.394229806 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384866052 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.382461979 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38604238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.391713766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.386527536 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.388242436 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.381891074 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.389042511 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.392165736 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.388972168 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391563366 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389505803 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386748408 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.39269907 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.381575732 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.391432374 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.386981891 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.39071955 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.385871051 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.389689476 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.395356842 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392912872 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390231899 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405674682 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.390544142 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.387660822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.39197233 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384953914 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.386240621 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.386908305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.388807873 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390560243 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388978246 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.384897069 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386491051 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.390623151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.388891657 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.394865268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.388790148 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.384918549 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.38943806 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.387164544 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.39297652 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.393411155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.387859743 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.386193658 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.390486399 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.384363881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39768984 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.39917491 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.388634462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.391890047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.390167779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.392431418 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.385337731 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393960056 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.39641151 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.389081532 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.388942388 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.389795638 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395597175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.392226958 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.387401095 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.384428055 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386698578 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.38958947 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.399056908 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39978546 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.389375359 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.389129531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.391875651 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.391683247 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387193646 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393951784 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39136631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.385486717 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.389316433 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397722771 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.39182588 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393157342 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.393338241 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.398563237 seconds)
  done (took 822.042265158 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.391792234 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391476814 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391595906 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.391024184 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391661931 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39235018 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39256986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390565177 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.391436239 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396164762 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39482933 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393274895 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.391991495 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391086809 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389204931 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.392156883 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390569151 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391276233 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392539914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390428802 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.390668969 seconds)
  done (took 30.489108461 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.391819511 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.392080601 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394280476 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391238195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389798806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.394211519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39138085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392487908 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.393600404 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.392324879 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.394574837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392951616 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.392028471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.394736882 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394112535 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396428625 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.39500998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.390004675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396462498 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.39334938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393090134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.394173892 seconds)
  done (took 31.913082207 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.391415956 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.392654499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.388324815 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.394751433 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.395809201 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.393564424 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.39560937 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.396659741 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.397751667 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.390373665 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.390387531 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.393211505 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.394306186 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.400432395 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.394814382 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.397373557 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.399473809 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.397218809 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.399274491 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.393824237 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.397019578 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.396016217 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.393774553 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.390712823 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.398136296 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.396442127 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.393838519 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.400969845 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.394572542 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.400758444 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.396318183 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.39378737 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.399260027 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.395591112 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.390898092 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.397552897 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.395732959 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.395612729 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.393233408 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.39835248 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.408923964 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.397141952 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.399134344 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.400455977 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.396165143 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.39699859 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.401815159 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.396470976 seconds)
  done (took 68.282485087 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.402280046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39949527 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.396366918 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397912534 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.395201442 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.400790233 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.396276287 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397343402 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.395063924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.396833241 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.400126347 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.396645817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398516158 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.400979959 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.398224385 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397105999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.397987023 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396429307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.397045 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39665994 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.39881242 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.405335313 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.398610115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.400426477 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398742664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397790295 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400655843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.399738731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.398444658 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.396324023 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.401759703 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399085727 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.403725592 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.401131958 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.401384873 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.400627697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.400923164 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.399165904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397899701 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400960735 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.403327126 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399108994 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.401219963 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.402670744 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399904383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400110138 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397535001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400300067 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.402552795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.405863116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399877783 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.399957145 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404450646 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.399521368 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.403017315 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.401658797 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399687217 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.40412994 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.403875089 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.401230043 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.401712237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.400703265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401142289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400292528 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.402915095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400987992 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402589073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401718791 seconds)
  done (took 96.469031442 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403978363 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.40160915 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404235542 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404801272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406871553 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.405813856 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.405197715 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.405884991 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.402596348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.403049101 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406212825 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.403568887 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.404975345 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.402779064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.402441156 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.405281267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.407547265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405100042 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.406952902 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404521979 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.407184928 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407663845 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.404135355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.404999191 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.401754986 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.404045614 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.402764176 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403836766 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.406515176 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.404147946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406029766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.403547551 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.404913792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.405023686 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.405894899 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403892925 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403621225 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403350551 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403353397 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.404669399 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.409567506 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405977856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.404319793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.408029958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405347165 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405055469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.408944783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.406292663 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.403461174 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407411186 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.406089941 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.407327158 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405049603 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408259136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.4096714 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.410949822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407406215 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.403708077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405709779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.405849196 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408946987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.407244642 seconds)
  done (took 88.408567704 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.410536486 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.410360098 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.403466468 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.40744241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.404493092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.406748206 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405360569 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.407306129 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405497154 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.409338344 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405275354 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406352648 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406517074 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409164817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.406189487 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406376341 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405835526 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.408424893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.408408188 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.408125404 seconds)
  done (took 29.416287786 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.407048655 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.410463961 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.409307306 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.408943088 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.407543462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.407253236 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.411652262 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.408387198 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410577533 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41025024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.408433748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.41080168 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40997743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.406316657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.407855673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.408126159 seconds)
  done (took 23.822159553 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407627569 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.409404939 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.41119642 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.410021736 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.406677471 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.411568413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.411721008 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.411074314 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.410259431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.408500631 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.414090438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.409822932 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.411320971 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.413757021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.410977347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.41024202 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.410566913 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.410274472 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.411595842 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.412718158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.414225144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.408380081 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.410271534 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.412974999 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.408010806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.413172346 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.411598218 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.410383566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.409626666 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.412577962 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.412909107 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.409306571 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.415452604 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.40938773 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.412881514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.412253693 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.416713644 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.415465858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.412814483 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.411232148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.410176962 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.412497147 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.413976173 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.410957617 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.409315873 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.414479998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.416015622 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.412631172 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.414214565 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.414379779 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.409814666 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.412856098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.412302832 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.412494383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.41406442 seconds)
  done (took 78.925614936 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.414606131 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412655562 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.41422852 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.412919459 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.41542772 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.411598248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.412128706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.415974781 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412963234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.412741426 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.413870841 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.415958597 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.409991365 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.418202234 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.414010259 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.417010269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.414335674 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.414372757 seconds)
  done (took 26.731349323 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.411834114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.418816989 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.417437751 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.414666989 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.416166472 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414359842 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416727775 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.414754523 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416709554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.418917889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410887732 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.416502252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416101961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.413575717 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.412782569 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41923055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.417441458 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.414236929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.41645241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.414510733 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.415566089 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.417207314 seconds)
  done (took 32.425194915 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.408035902 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.410451387 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.41487098 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.426194904 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.423265625 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.410757501 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.411422661 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.414752968 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.43441301 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.448891828 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.445549827 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.421717053 seconds)
  done (took 18.353708757 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416199039 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417556081 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413559642 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417798927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419356314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414213891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417726368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418430846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415556747 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414816504 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420532396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415641683 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419411145 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417341958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417100985 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418668758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414191409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416252482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419714818 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420350777 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41764977 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416519756 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418661698 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418328999 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41701674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416487058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419333382 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417045156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417344526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415728022 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420268335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418111154 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420897379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416656985 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416014058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41750309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415620672 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417560205 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418570997 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418849144 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.424217447 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419410667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417642054 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419679325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420739745 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420432319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42105401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424558938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417875106 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420667434 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42447866 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419311212 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424749824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423091333 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423766382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422975495 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42091468 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424670909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422886725 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422817526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420182164 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423952314 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419828443 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41826003 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420584123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419097607 seconds)
  done (took 94.941481391 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418223276 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42419358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420764732 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422102846 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420331051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421284695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421607303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418276708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420815465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424783019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42165123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421348359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423174481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423303883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420949078 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422220829 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420003206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426252787 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422819306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423397966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421468316 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421800457 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420813568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422900051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420598981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423855451 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420641249 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422037283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422219186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422333115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422132867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423694733 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421396586 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.42045823 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425840999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42205777 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424783622 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42535376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424495123 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422671974 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424892908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424443224 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423542302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42550943 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425443102 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423947913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422416857 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424455241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424883508 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42797242 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42431306 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422319678 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423373516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424024759 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424898918 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42136847 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423427411 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427867554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427470231 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428461578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427351222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42718101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428706054 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426911462 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427420796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424457249 seconds)
  done (took 95.236878511 seconds)
done (took 1928.211011319 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.587542691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.542381394 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.424429211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.45382638 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.427561335 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.41946315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.432989895 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.419517845 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.419345407 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.420864652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.422435691 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.609699671 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.478234683 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.415147986 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.418875179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.517194319 seconds)
  done (took 28.696886422 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.455439517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.433220833 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.542209219 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.425076877 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.450552474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620673928 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.486470814 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.42584052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.594725006 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.433953069 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.426024777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.445216862 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.423909139 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.420885803 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.442663037 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.612901983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.673571543 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.426951238 seconds)
  done (took 31.030649874 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.876185319 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.443558717 seconds)
  done (took 5.614606176 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.445065089 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.42692854 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.427937475 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.4210311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.42081034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.42072555 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.425302785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.415558365 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.41815097 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.553846683 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.425675791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.436602495 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.423512558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.425787502 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.427656698 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.471400799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.577180517 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.430706266 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.424247843 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.431910206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.424605478 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.527218791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.466772182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.430705452 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.552716147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.422939464 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.431453154 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.436362128 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.567305271 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.433702661 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.423752829 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.424423943 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.426845043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.417600108 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.899589941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.419870945 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.431037842 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.450023043 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.42589719 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.573614401 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.427615545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.429488777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.419254573 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.892158743 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.559828455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.555148578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.424896124 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429968213 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427046321 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.493908258 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.428131713 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.427600704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.486531995 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.26988785 seconds)
  done (took 90.413488508 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.435541855 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.415149168 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606639613 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.448233648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415898988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419814949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.422413379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.706629162 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.466827261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420702372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.728035838 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.003129615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.430196158 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.494207478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.391335818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.511843591 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420152342 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.420499068 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.416621613 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.420261207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.979037682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428517489 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.423497277 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.525836701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.458934223 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939656936 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.430010719 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.426139439 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.43867574 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.419393616 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947842106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.42452229 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.514954204 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.421151294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.700072132 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.800361213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.773142695 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.427857822 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434356116 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.424366177 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.429380172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923965949 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776378921 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.422627993 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.420294959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.9260578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418273999 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.422936159 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.433051954 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675177276 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425190266 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.426245517 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428301137 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.422878317 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.41903877 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.457473191 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426131239 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938346419 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42090372 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.439172373 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.422034195 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.42112514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.429871743 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421013263 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.437346112 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787519638 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.651997794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.433581381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784820964 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940817811 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.420048473 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013161008 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.420952439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.430577372 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.429664403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425607607 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.427877255 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931381542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.43171185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.426318335 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.767591822 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.425308158 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.709286389 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.443800783 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.426125429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.009759101 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442266378 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.442677618 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.421838243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432264251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.427730548 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42215752 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.701380981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.45731333 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.426315949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.425156244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.458839838 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424727008 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.437363735 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.425567823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016857892 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.423934493 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426382137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432676981 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437087073 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432259619 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.4291287 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.424618582 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.698305209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.431498781 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.450860986 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426834167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.420923422 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.43135702 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.517482161 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.433150143 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730946805 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.427899554 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425360947 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.425990622 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424971515 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459961799 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42450899 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.427858086 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.307152176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.690316014 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.446428709 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.423987932 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426076187 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.429309695 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425239357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.427585397 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.493715491 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.426371149 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.223315024 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427415653 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.462218373 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.427179099 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.440153638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.430204668 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.439712909 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.431558714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730261841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.707761782 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.610007846 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433161006 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.441633986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.203265492 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.45175147 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610886784 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.447281803 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.429975685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.680331037 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65040933 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.435223806 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.429035915 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.431475664 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.695336499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433871502 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746538632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.988179895 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.429732974 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429349158 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.227758671 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.13274444 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.436964199 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.435259425 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.714410334 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.448685375 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429918079 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.429849298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.431567358 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.435217598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434873476 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.43794986 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.435957833 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.432736569 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.732009932 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.620365725 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.449579584 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439599319 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.93691 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.467858064 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.445445702 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436636787 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.433697433 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.429422147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.529772052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.434338454 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.461256398 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.431087903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.440546107 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954858969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.445482853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.438584246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.622323959 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129906728 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.436530757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.432275618 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.436874819 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.367410314 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966785907 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.50823286 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.742441404 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.447581202 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.469584995 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.437602128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.52905771 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969061775 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440681948 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435726038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102720667 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.434165529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.951792169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.431600628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433415055 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029589132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.437906323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.435763934 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.432553042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.435306074 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.757518874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.440990367 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.44181797 seconds)
  done (took 519.80750292 seconds)
done (took 676.851885118 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.431765883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.439052409 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.419149135 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.438086996 seconds)
  done (took 11.039367356 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.4727383 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.439300662 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.446198078 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.437601392 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.449720513 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.437174518 seconds)
  done (took 9.992618392 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.433250569 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433335359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.439919483 seconds)
  done (took 8.616510632 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.654879054 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.464508316 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.79672267 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.434001577 seconds)
  done (took 9.661249058 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.446533955 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.445760821 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.447579337 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.450184748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.47441808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.473256138 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.451427861 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.453089389 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.474631095 seconds)
  done (took 14.425829088 seconds)
done (took 55.045872934 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.46420297 seconds)
    (2/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.467448051 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.151686465 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.568470243 seconds)
    (5/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.262125773 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.571145386 seconds)
    (7/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.466930666 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.129589905 seconds)
    (9/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.422137037 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.534162626 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.544073763 seconds)
    (12/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.291259352 seconds)
    (13/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.434041983 seconds)
    (14/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.41515229 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184673029 seconds)
    (16/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.474128052 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.542123437 seconds)
    (18/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.543079864 seconds)
    (19/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.253371217 seconds)
    (20/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.536383916 seconds)
    (21/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.665518521 seconds)
    (22/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.476280718 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.588275303 seconds)
    (24/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.285341221 seconds)
    (25/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.515250568 seconds)
    (26/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.399133623 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.5292578 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.502803788 seconds)
    (29/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.624014578 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.706922267 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.5817274 seconds)
    (32/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.41634667 seconds)
    (33/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419859775 seconds)
    (34/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.435366159 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.424288258 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.477671825 seconds)
    (37/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.531238616 seconds)
    (38/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.546645215 seconds)
    (39/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.415290775 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.604301239 seconds)
    (41/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.506775141 seconds)
    (42/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.417610561 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.551094743 seconds)
    (44/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464531324 seconds)
    (45/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506467688 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.244477027 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.505025211 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.590744867 seconds)
    (49/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.523828579 seconds)
    (50/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.613753605 seconds)
    (51/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.417621825 seconds)
    (52/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.60726283 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.705125221 seconds)
    (54/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.625317967 seconds)
    (55/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.504763345 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.552798085 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.438801202 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.572627254 seconds)
    (59/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.539465903 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.425712075 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.573878559 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.424055939 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.574806736 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.15378961 seconds)
    (65/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.583196455 seconds)
    (66/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.442487492 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.604962067 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.434936625 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.530137919 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.529873646 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.248816504 seconds)
    (72/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.51266381 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.592214194 seconds)
    (74/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.511141891 seconds)
    (75/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.521465532 seconds)
    (76/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.660468215 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.530540638 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.524075052 seconds)
    (79/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.562504381 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.426116452 seconds)
    (81/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.545959749 seconds)
    (82/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.474705676 seconds)
    (83/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.294968807 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.571082149 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.527074564 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.472842935 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.628701377 seconds)
    (88/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.503914625 seconds)
    (89/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.208922521 seconds)
    (90/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.516773393 seconds)
    (91/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.553063229 seconds)
    (92/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.420880134 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560176085 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.470430576 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.518222724 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.466286012 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.343500214 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.460969997 seconds)
    (99/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.483076357 seconds)
    (100/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.589057621 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.511242213 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.423210346 seconds)
    (103/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.668761655 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.597992551 seconds)
    (105/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.67317276 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.411598572 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.589580382 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.42255809 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.555343859 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.423936323 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.421819035 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.595454767 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.334677156 seconds)
    (114/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.56809514 seconds)
    (115/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.427934988 seconds)
    (116/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.592887117 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.58481578 seconds)
    (118/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.421951885 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.476691137 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.480024163 seconds)
    (121/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.42247487 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.453782421 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.621902287 seconds)
    (124/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.42284528 seconds)
    (125/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.425259147 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.459091498 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.111077981 seconds)
    (128/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.784704165 seconds)
    (129/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.574960214 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.206406747 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.548562592 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.258869738 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.59094414 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.535791141 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.422441017 seconds)
    (136/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.73239065 seconds)
    (137/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.422019453 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.478456489 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.445785461 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.464059698 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.520538719 seconds)
    (142/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.424429849 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.529623952 seconds)
    (144/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.668182376 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.445067182 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.625613665 seconds)
    (147/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.627521292 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.260271063 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.445679814 seconds)
    (150/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.450276385 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.49052139 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.561361157 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.423871274 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.448053795 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30014206 seconds)
    (156/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.634651347 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.510443844 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.217863976 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.484462066 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.423413718 seconds)
    (161/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.728325827 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.706970514 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.567492904 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.601344072 seconds)
    (165/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.110895837 seconds)
    (166/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.666803299 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.475782984 seconds)
    (168/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.47069368 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.442442901 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.435322711 seconds)
    (171/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.483722577 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.523214793 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554582774 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.611548499 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.549054629 seconds)
    (176/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.559405166 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.466297712 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.556754961 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.488463445 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.424103904 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.643526963 seconds)
    (182/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.696338765 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611336573 seconds)
    (184/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.482433408 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.43577693 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.131760235 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.44828114 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.5694209 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.711242348 seconds)
    (190/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.431754551 seconds)
    (191/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.428066385 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.55792166 seconds)
  done (took 361.220405601 seconds)
done (took 362.530990519 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470172012 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53116128 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.450524399 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.452477583 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45309923 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.453144036 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.474360442 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.452505621 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.46549314 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.468213437 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.465988593 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.462026862 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.466823781 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.460809465 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.485691827 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.453119857 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.455452135 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.463096629 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.464457114 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.465198099 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453832707 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.454447292 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47193571 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.45302146 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46285345 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462840808 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.458926066 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.44531882 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.457135423 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.464380888 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.451177352 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.458789126 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.466037643 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.461637816 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455703778 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.461920646 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454847399 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.534112914 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.469549874 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462586934 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.458167586 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.466250409 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.461061589 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.458800854 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.462526646 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.474619779 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464628622 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.468649305 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.452673597 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.456194654 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475125042 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.464518278 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.459431035 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.447565246 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.448687387 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.471831502 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.462766469 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472978237 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.45954286 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456380054 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.490400458 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473432565 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46658977 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466292511 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.460748458 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.468872666 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.462664024 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.466758955 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.458115299 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456872714 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456696099 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.46164964 seconds)
done (took 114.72934017 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.58221832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.454611656 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.59370267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.460965914 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.613039299 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.586502727 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.459882602 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.460063741 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.459695421 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.248261026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.459459357 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.460578359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.45829158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.46117569 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.584452874 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.462533202 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.461062935 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.149308013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465234486 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.597287797 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.45462616 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.461727226 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.462129466 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.253171182 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.456455592 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.452771093 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.595582521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.462151658 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153030002 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.450802741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.455224369 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154097036 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.596509538 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.480280396 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.47284062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.471012867 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.617677186 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464478461 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.578401196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.579084172 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.598141936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.504213982 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.453238229 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.459188743 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.465557026 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.465489567 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.462366745 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.490946199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.458597307 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.461058742 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.152512174 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.473706396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.471977759 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.463058088 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.463565122 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.484527778 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.463000028 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.466511679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.600176945 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.464795122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.581221916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25338434 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252572408 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.464309462 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.456344994 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.463957938 seconds)
  done (took 116.67074945 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.527323086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.534702642 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.569148966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.466243493 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.510063448 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567785254 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.463970412 seconds)
  done (took 11.967018069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.466515321 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.467934073 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.510435735 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.510275268 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.466134952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.616704859 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465992847 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.472716537 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.465349857 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.513228401 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468585741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466528329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.474323558 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462732455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.510578456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.472558271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.577477503 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.46164952 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46596232 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.616559946 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465232892 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.474692582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.513467513 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.473226631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470422604 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.468777529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.24635868 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466419566 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.466013042 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.470256999 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.466903595 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.515770616 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.46883125 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.463094072 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.46712805 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.580582378 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.468084776 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468314307 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.468858303 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.4637338 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.471507637 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.469668922 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.470808971 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.468302639 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.469655349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.487096423 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.472703909 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.46959025 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.470478336 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.472181473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.513334006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.469501575 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.468503508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.468514126 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.519506879 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475879394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470224508 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.467044149 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.472865213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468039806 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.619255242 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.511473235 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.471689716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.512271624 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469381486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.470102127 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472410259 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471459249 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55702705 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.468873105 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.51341357 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.468173282 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.648615945 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.490104177 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470667868 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.468098751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.468205394 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473254142 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.462707652 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.47096615 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.468853758 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.468132376 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.472483342 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.469338379 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468423405 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.62364611 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.575753623 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.470543532 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.480624672 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.473597965 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.468605501 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.52010773 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.470995097 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.470665845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517602037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.582270898 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.519446073 seconds)
  done (took 150.605026743 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.478628637 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.479709097 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.471132764 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.495295609 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.469209601 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.466754144 seconds)
  done (took 10.194960941 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.469001587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.47227946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.471386292 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.472251866 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.472176631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.476808624 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.477266354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.468149354 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.475720972 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.476432438 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.475091093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.480356208 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.483823631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.473851336 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.478586382 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.476249935 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.478470909 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.472290838 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.475643805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473461196 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466542534 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.473466775 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472976964 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.469288473 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.479604875 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.476947925 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.488693629 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.476013152 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.473408584 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.476240108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.47624006 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.477529754 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.470515577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.472398901 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.481709253 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.470655864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475467847 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.480700088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471535805 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.47907473 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482297917 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47588312 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.476772862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.481427045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.470540518 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.473562434 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.484900639 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.490047932 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.478227455 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.482028943 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.482787634 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.47446802 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.479756876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.48280565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.473090563 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473661278 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.484666523 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.480937528 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.47559709 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.471894343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.476508299 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.479314194 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.471815563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.482461062 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.474091067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.482372629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.473452637 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.479727805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.476803227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.476305688 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.48303992 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.475653261 seconds)
  done (took 108.65306619 seconds)
done (took 399.415267546 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.754936262 seconds)
  done (took 4.094694375 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.54987646 seconds)
  done (took 3.887296994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.46011019 seconds)
  done (took 22.804257185 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.496727929 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.565661573 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.475020002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.481107843 seconds)
  done (took 11.355966185 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.778055211 seconds)
  done (took 4.115944504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.477006286 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.472391901 seconds)
  done (took 6.288243581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.713905985 seconds)
  done (took 4.05191613 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.800070164 seconds)
  done (took 4.1397937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.488632717 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.475735031 seconds)
  done (took 6.307493661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.440482486 seconds)
  done (took 3.764686408 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.544221506 seconds)
  done (took 20.868667696 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.464397022 seconds)
  done (took 3.794363103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.507869219 seconds)
  done (took 3.8274072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.952953702 seconds)
  done (took 6.271069641 seconds)
done (took 106.911030991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.450707582 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.456859554 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.453864013 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.451052037 seconds)
  done (took 11.139072456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.51920026 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.518779335 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.524088534 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.51977808 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.520628773 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.51580422 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.489727107 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.505980236 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.519834418 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.517002017 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.52342589 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.517032401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.520189426 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.494420626 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.517805377 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.527738554 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.520450504 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.530721626 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.491828336 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.51993762 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.464422728 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.521084792 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.51846388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.467186375 seconds)
  done (took 37.611418572 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977277123 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.53307442 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.619005314 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.514970112 seconds)
  done (took 7.971382396 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.547855087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.551836521 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.568573443 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.603960775 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.6384516 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.564882954 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.495924394 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.489950321 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.476184079 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.554128492 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.606121907 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.540083319 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.638866525 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.468736116 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.753324068 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.471077627 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.467500367 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.54981179 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.602363751 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.632747409 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.473230391 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.547776045 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.557200488 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.536203397 seconds)
  done (took 38.657381754 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.480558306 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.489817727 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.468568208 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.482383716 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.468161466 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.469917748 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.469238456 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.477250895 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.464978776 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.466105791 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.469169933 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.484098956 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.466216881 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.476243024 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.476899706 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.470277456 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.468819908 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.476374757 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.476967135 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.470429368 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.469780168 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.469264635 seconds)
  done (took 33.734401092 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.458169361 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.450894233 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.807443624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.708734245 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.45555136 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.458151343 seconds)
  done (took 14.664541711 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.531512467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.673822931 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.471075756 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.814834177 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91299218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.471324937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.467481692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.711330129 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013399464 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005839401 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.523898147 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.532712043 seconds)
  done (took 21.455733057 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.45683042 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.462679782 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.473479129 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.480371587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.515577268 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.474075106 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.472368306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.459783616 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.527502448 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.529511727 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.478120826 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.520735549 seconds)
  done (took 23.1770555 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55156064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466075376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467354985 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50858933 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468631286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313671829 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496211599 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168114677 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.466797349 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741202223 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47721174 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560977054 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.725836301 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469534282 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47122642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.45572594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695879197 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978781519 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470221104 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463965629 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517020199 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467208247 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482996204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.679953782 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313818875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465342788 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.732330033 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468694031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760725135 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740968287 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739789766 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472233444 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.741226541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113996406 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562562686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677357019 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474138938 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464587404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.462282507 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.463145192 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488036687 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473923092 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733101631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474704449 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470841052 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468364487 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182152175 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.474148878 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.470417384 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463602281 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737742054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575966657 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.474125241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472174069 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468968598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464205451 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.47582217 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594791522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034615082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469490841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468612599 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.476263155 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485776345 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46828779 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105331804 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.473272529 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.478088275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.47695941 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473131524 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468707899 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48983551 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469771567 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.491464879 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471768764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197916251 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481625129 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472647653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044466495 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477329575 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.476518326 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699178534 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471421911 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469771737 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.470968579 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466831608 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186998938 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482136138 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.447634487 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535319068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.17183414 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678846079 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492945811 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500195963 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694679889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.447039541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474243519 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.479791745 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475621083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490617614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181675193 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46971342 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.476342146 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728462488 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.678934622 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470500642 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454397732 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968254831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470845076 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.495975546 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493313728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689849858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.083345112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740388032 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480155435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504468892 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47427871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241077459 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476730227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.481167484 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479540028 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769875547 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.278468588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479036177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545891677 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478591167 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475169764 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472903084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47138047 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476113808 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.681468975 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479258129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746277801 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.48301167 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475838101 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.46793831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492461249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.480896222 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698026539 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474824618 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758779305 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479773706 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47716311 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475284739 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.694535406 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48580237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.484583865 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734526819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472518286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478952666 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745224634 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510297201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583441846 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505108875 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.492064752 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732645296 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.478861261 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.480005432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476103506 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475708675 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478378571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.484996971 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478960346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104830911 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454305791 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476892629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485026995 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.488095058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54630726 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484876403 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687604265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.479544283 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474282429 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.482377492 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.480356101 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698557813 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74621274 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.496155245 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549646589 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.956560237 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087059385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487715726 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.479968334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.4764334 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.475154337 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47905301 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479501494 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477752735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697615806 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753187489 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48084914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088041604 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477574947 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47586781 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.482970946 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744889797 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.490418049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479313472 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.482846851 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489095116 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484397328 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.750006541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623009751 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.496922182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.477004634 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.040802524 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486638705 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477580784 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479878973 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511475015 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479666978 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322930064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742744429 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494831697 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748815356 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485587305 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.493971158 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.477409968 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494080182 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485406655 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.483317641 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493683947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.693479691 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488299341 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480155293 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037555461 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236618748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039786969 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490786617 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.489315953 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483874343 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194696699 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481741294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482678777 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717597108 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194536594 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480765565 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960355461 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.480534589 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242181899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747385951 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71623971 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489943154 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.492926242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.756448749 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699674113 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513352088 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490065186 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486661055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.458035137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037859175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482152717 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566863185 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197661203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49221996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491463775 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.503415935 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.479953021 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876987054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481246984 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485299232 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487889841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490111227 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335225141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484013611 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483088358 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131631187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492207283 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.972207326 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479590854 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699208317 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.758204053 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.75051898 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.497278805 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.484635579 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.732531736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753337986 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490044425 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494578742 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047020434 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.353777153 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.490473479 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483149802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254112461 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489679396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78361461 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.488511636 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.496001786 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48139209 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486218025 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481698063 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.483167727 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488294782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459592926 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993064125 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.491749847 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48997815 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484424491 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489420483 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738688444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.502698844 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101952768 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714222525 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501651256 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515999422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.48970543 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490011707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.462537922 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48508283 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489271151 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564339516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.705024635 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.50091378 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.458591679 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.554745904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694572475 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486272811 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488909355 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718028925 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.490879179 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.493516808 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236651494 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519890218 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487107253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492963976 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486265004 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528205142 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554288832 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702147148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.760809441 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760007352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884521293 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489718199 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489986157 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.504914081 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588139354 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502286426 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.508610513 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.25827024 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108847139 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235017643 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103285037 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759107972 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493449595 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497426775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489664131 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624615423 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488280987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766482847 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488363871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.481580374 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509230919 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495016938 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503702073 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704629456 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765956221 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490066998 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494055445 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492391449 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.494326256 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761179318 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.703592115 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008189106 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072892505 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496202456 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494904056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210902917 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765011267 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496325098 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491367688 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488299671 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.499445407 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.50461688 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.496434901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494745456 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629684559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759608416 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13790726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756483036 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.533167955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.008172834 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496080361 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.749507783 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259155892 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.707585989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113382794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239581492 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753778213 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559375479 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705529357 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.494138546 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63359882 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.493291156 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497239932 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489672194 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495178885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.4889763 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.764836371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119498382 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755689159 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.495884629 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.488357544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534471373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.70938722 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.723729083 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214804513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715667785 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762242078 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.507025817 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491645794 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115480472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763588435 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49920345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.49564338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722331186 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497106571 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517931636 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.014455076 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.488703943 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083680026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.386265152 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514606472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493997546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255244848 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11276611 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503519751 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015401911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498808302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507643142 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772139269 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.502028859 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500791046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77758583 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.498924219 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502682937 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705541397 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.116308413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259223018 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.500732229 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501906388 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.500852263 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495572504 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518721184 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494480739 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500829334 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.918386235 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493015221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496712077 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507067565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.495480743 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494513705 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.497872421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497484818 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.502685521 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.473144405 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.468965799 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506069684 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620445298 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054854953 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501489862 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.188869211 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.826289036 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.750922897 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500827545 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.473816077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.499173871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498438859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49386577 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493846375 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50321756 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091784519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.507327225 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.766498259 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507723342 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.707550794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705757709 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497275811 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717055794 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509159075 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522801967 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.471444117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494159779 seconds)
  done (took 1032.66165536 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540595939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.535163496 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.540377722 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.569609145 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.55842408 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.613005573 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.596663932 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.530165682 seconds)
  done (took 21.842867478 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.501134754 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.506167465 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.496446401 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.505099223 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.493044735 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.984945664 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.498882208 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.505847691 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.519777278 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.498747916 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.508581036 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.205989045 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.522785758 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.502022861 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.488815103 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.50523138 seconds)
  done (took 34.60843236 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.633230202 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.691196936 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.503820168 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.556826806 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.545196374 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.493725529 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.762777287 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.523330215 seconds)
  done (took 28.072999969 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.509685006 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.51151372 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.507380937 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.507877481 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.506793985 seconds)
  done (took 8.898987928 seconds)
done (took 1315.825094089 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.505485728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.505808385 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.504989639 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.506324406 seconds)
  done (took 7.378609589 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.476484912 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.474618322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.478073156 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.491267716 seconds)
  done (took 10.282064081 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.21403004 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139986771 seconds)
  done (took 5.712010496 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.018429589 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.035115961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.032495424 seconds)
  done (took 7.447125745 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.789256858 seconds)
  done (took 3.147240022 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.462240405 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.497337589 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.181597917 seconds)
  done (took 8.499679695 seconds)
done (took 43.824856348 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.496460915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.752049431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.655096089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504576335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.656914814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.65883663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.228407559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.500078669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510257247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.512807183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503016141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.657360736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.211151847 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.740866765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.215814176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.743550348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.663949905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.508870104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.500775567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494757731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.251398782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.498576856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.497263227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.503591496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.665487325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.643194674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.500924896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.746711109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499069636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.514096872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652451333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.498248621 seconds)
  done (took 86.550730047 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.496135702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.521088143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512612942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.512186767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499551754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514500287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.503326457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.496451052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.501341336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.50528323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509292674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.49952488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.500981232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.498977125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.503282825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.496224893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.500343497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501459922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503249926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.50339448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.496653597 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.50036965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510089372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.507577403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498940496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.501065012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.52637091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503607287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499209344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512804465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.503791878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.528801697 seconds)
  done (took 81.532180193 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513609362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.511507362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500776796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.500523509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518330888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508760105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.502170088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514266096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.499805411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.505146259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.502814518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503101593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.503367739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.503495689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.506211516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503732528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.505092219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502857131 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.516430065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506133315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.505423005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.503660085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.5143814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.511355535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.525115372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504685201 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504442224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.522284476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.501120923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.520273446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512803908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.511637377 seconds)
  done (took 81.635971177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.742496544 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.517133836 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.518720945 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.516019023 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.522636928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.517338254 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.51347071 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.747048237 seconds)
  done (took 15.967125603 seconds)
done (took 267.04737105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.517491449 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.011256172 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.540019956 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.52325108 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.530853118 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.535953453 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.734432034 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.534852272 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.734594179 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.523574367 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.529610615 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.506526497 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.333200496 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.665774371 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.375497766 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.489788427 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.403909087 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.513565091 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.08193982 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.795548246 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.541463942 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.51655531 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352131663 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.405461358 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.508499802 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.593685366 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.615765133 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.741487717 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.677618202 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.59209487 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.027991586 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.513314451 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.51526249 seconds)
  done (took 68.856015727 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.514812395 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.519857854 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.524103553 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.522967826 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.520418526 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.523525557 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.515601918 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.521038329 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.521715587 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.521430478 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.524662034 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.52029116 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.520089477 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.519322909 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.519761246 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.501796988 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.514110916 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.51887418 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.515196596 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.499798635 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.518875143 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.523300057 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.522452955 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.521025192 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.525296612 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.523943403 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.518958466 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.52105719 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.521228829 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.519120714 seconds)
  done (took 46.948624154 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.523093715 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.095665531 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.233719399 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.529943117 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.516583033 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.519787573 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.805325268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.524469335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.519042141 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.521588934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.994165725 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.526512615 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.547051676 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.244059902 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.518223302 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.524143225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.524902138 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.514683836 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.105727392 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.52738112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.80446064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.529275381 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.806941248 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.532992707 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.520717605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.518730469 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.522331246 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.317688084 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.543279673 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997981775 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.310762347 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.803809588 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.265901818 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.293132072 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.314941577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.533142374 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.525501709 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002240376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527749159 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.518258122 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.804276986 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.518774974 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.24970017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.202460705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.539672175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.525912251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.340768708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.022240769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.763098473 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.526044664 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.290505314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.523505151 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.530344903 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.52340606 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.76236596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.527788399 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.521099292 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.369971154 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.541641956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.806334918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.526215566 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.520429677 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.113276703 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.526699269 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.1061489 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.52922191 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.529217051 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.522099462 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.260578635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529958882 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.21801642 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.542428642 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.529001705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.998790983 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.09542759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.411160171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.529409794 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109180338 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.299328476 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.826115116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.53108811 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.315014729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.829530237 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.530552875 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.529768053 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.529737999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.528894348 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.596645137 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.803071208 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.144331776 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.206744607 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.371535846 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.826586492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.536165274 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.522919412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.375099949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.54783807 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529235255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.25128108 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.224520139 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.545530811 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.529558482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.200032811 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.541941675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.807933003 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.534367105 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.293689824 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.524259 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.596996923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.531944906 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.530507726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.52815825 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.809237857 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.534395687 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.531737963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.197192946 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.03597255 seconds)
  done (took 210.002652006 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.51916596 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.518742847 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.518808216 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.517939186 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.518851854 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.525962967 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.51894854 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.520329702 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.522893117 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.517797152 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.519642566 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.526862119 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.524589673 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.519045644 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.518379036 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.520207069 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.52032543 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.542263127 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.520035636 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.520059081 seconds)
  done (took 47.813535739 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.532939524 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087271249 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.054662435 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.537897719 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.528339227 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.525954094 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.583571735 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.537356152 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.528765601 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.823154873 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.697191983 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.540765565 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.52958564 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.530073207 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.056156459 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.513686264 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.82174955 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081140851 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.535158979 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082678649 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.51020801 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.534593378 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.523992729 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.080782592 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.830852016 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.810438428 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.590833283 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094863794 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.536232635 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.531013764 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.086471907 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.541678017 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.526820444 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07305957 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.535410851 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.549009874 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.531726785 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.586076304 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.591846103 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.831775207 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.093375593 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.824450579 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.551862905 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.706646092 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.539171496 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.511177923 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.092574442 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.538369281 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.513567989 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.534833662 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.541361545 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.064642877 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.537835257 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.064561314 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.537032087 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.537670962 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090431663 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.071277954 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.064811087 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.706374822 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.534848633 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.815639729 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.539278352 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.092665204 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.537542132 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.5373022 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.537391317 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.701533629 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095301523 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.818878419 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.829025874 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.828799203 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.538325999 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.595132086 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.541358015 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.828814089 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.593502614 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.96157482 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.834933784 seconds)
  done (took 137.295735805 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.799250435 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.646597545 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.903232522 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.113255592 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.029079008 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.667505359 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.649583253 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.77714108 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.53567976 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.618248453 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.179897727 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.634878988 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.28548259 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.626849277 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.643468934 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.667863312 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.92588482 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.526687491 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.168509751 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.142846714 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.541851527 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.631664009 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.052548258 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.718064363 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.534880861 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.112002888 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.463953402 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.049814726 seconds)
  done (took 57.035227919 seconds)
done (took 569.320699143 seconds)
SAVING RESULT...
DONE!
