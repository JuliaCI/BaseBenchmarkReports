cset: moving following pidspec: 27467
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.392633119 seconds)
loading group "string"... done (took 0.576902538 seconds)
loading group "linalg"... done (took 7.403714983 seconds)
loading group "parallel"... done (took 0.17081261 seconds)
loading group "find"... done (took 1.162181944 seconds)
loading group "tuple"... done (took 2.080308509 seconds)
loading group "dates"... done (took 1.310634105 seconds)
loading group "micro"... done (took 0.242045963 seconds)
loading group "io"... done (took 0.975433466 seconds)
loading group "scalar"... done (took 41.295804088 seconds)
loading group "sparse"... done (took 13.15359973 seconds)
loading group "broadcast"... done (took 1.053142141 seconds)
loading group "union"... done (took 14.593233391 seconds)
loading group "simd"... done (took 4.708371853 seconds)
loading group "random"... done (took 9.69827228 seconds)
loading group "problem"... done (took 1.982453889 seconds)
loading group "array"... done (took 22.426449599 seconds)
loading group "misc"... done (took 2.076200811 seconds)
loading group "sort"... done (took 3.43057 seconds)
loading group "collection"... done (took 19.691359525 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.570386604 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157897578 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149568473 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147219629 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196420907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142424844 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157354291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096920183 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987662998 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172749492 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150614975 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52324654 seconds)
done (took 5.183906452 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.252183674 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094554772 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104437975 seconds)
  done (took 0.888721167 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078574343 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145514671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097042494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078477009 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094276847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077784428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095220666 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092215917 seconds)
  done (took 1.363229017 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085373285 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097208484 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08206586 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095432401 seconds)
  done (took 1.04258486 seconds)
done (took 4.318033917 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722222021 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27110523 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20180233 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462822717 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200515957 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21717449 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683807772 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.382490529 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253206237 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099678491 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135594168 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391906106 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138262084 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.720820758 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093238189 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125661972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.183969285 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.501526825 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084570293 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111603224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118454609 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14587826 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13095034 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091033311 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185024404 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083812053 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.196298373 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111944447 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080293697 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.278882424 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202889766 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.740761496 seconds)
  done (took 11.071473917 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110364919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133443489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096913116 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138255536 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13412707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098746073 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084195177 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098573725 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123682366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175175518 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113634076 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135901529 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096096588 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082927964 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117310156 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247427003 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120971097 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100261255 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102671395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088773822 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139295919 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111862738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107805963 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093135684 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166182937 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221170497 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113710128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127206134 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09880008 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114032765 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144883121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144627231 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093994146 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080371342 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171922545 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123043431 seconds)
  done (took 5.146909469 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.097380294 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191341031 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122706735 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169345855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080393115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143169003 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09427577 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113307095 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255517998 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120914204 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494632087 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146291147 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100643192 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101510482 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083911628 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112999551 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09969233 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.466649843 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160502844 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13704489 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099684219 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106730582 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102452888 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.479931202 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082307845 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097565492 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083936853 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085908527 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168678279 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083829493 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206968399 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123351107 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083644735 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137181239 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216083061 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111281022 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136977267 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0975088 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081573815 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176328318 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10402157 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080739069 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122657981 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136554726 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137783425 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0981889 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082325567 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200563809 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098889879 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098233879 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126305254 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957011688 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181479848 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10889883 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100903288 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307880927 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098065507 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098445795 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079126896 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289155168 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.200046874 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097824757 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09687031 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079244083 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09830039 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.739076635 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082520177 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.168767766 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084502384 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109174635 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083140478 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098964726 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105452976 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088898215 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11747252 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080907342 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102584287 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080446227 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098434559 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083264336 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110450256 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216306316 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098885794 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081462164 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09829335 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118613357 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113067247 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101996383 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097527867 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115902329 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099758302 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09945055 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11710125 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10126308 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109512336 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084608079 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145520197 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099066272 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160777774 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094148992 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077685732 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127685906 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101522285 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129178479 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112301415 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082970258 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.170388601 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096617879 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079255473 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09801524 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081097097 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099284991 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082403753 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102236117 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111845376 seconds)
  done (took 23.835372185 seconds)
done (took 41.835149554 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332460855 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106059111 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105633141 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106275369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100741698 seconds)
  done (took 1.512698407 seconds)
done (took 2.247299986 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164820796 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114869065 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095332716 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127522927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078202396 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.132759781 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130575645 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094687023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131684669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092838599 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126820367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077741636 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092656235 seconds)
  done (took 2.223616917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095545379 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117054581 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085306677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113768167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07728619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114009018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094230923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120799587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110990511 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087988406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095189665 seconds)
  done (took 1.841251526 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095168372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113081396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084656083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111992792 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078398032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112564275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093700825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11830545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111488588 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088259986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095316725 seconds)
  done (took 1.831394544 seconds)
done (took 6.622350701 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090590501 seconds)
  done (took 0.815608872 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925845907 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.768403134 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112306848 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150287035 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.322326755 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.174110967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479685819 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125231964 seconds)
  done (took 10.992909737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.11691393 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113652127 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102617206 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083836188 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100074617 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082057258 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100892777 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101153277 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086137337 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100763491 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086981386 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100564268 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10003733 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086675841 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103139924 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083876115 seconds)
  done (took 2.346793367 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117894843 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117684859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105449653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10788273 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086398331 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103530427 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105225786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088102168 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100348921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10226827 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089906414 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104294223 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102478023 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080159177 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107171904 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108939236 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087307062 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106943319 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107871094 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091315757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10796766 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095938161 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088443328 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107609121 seconds)
  done (took 3.262863546 seconds)
done (took 18.147477159 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158075131 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107550386 seconds)
  done (took 1.003728665 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0943343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11521268 seconds)
  done (took 0.952083906 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096984222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0971749 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124526348 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110996736 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082223588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098632726 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121071394 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082370893 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098547912 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098871539 seconds)
  done (took 1.757170739 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083174037 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109832648 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102966249 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096837075 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10667717 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096809526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091164733 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100227095 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112310095 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077884797 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103450807 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116062072 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087047874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117472275 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107437544 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101301377 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087242741 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100544542 seconds)
  done (took 2.540109679 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078933421 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097518614 seconds)
  done (took 0.921570483 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08051601 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094829865 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082451349 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099477663 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095417465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077728821 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095635638 seconds)
  done (took 1.370527518 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.442451023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138408973 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26407446 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101980849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104877701 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301017943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098847649 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086575851 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106182837 seconds)
  done (took 2.446400922 seconds)
done (took 11.733497327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093837277 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115739953 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115371702 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456785566 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106377478 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099676585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149471695 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250070459 seconds)
done (took 2.135731328 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144753746 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.56838373 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42919798 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235835639 seconds)
  done (took 1.985001804 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401677167 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099970778 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084672057 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082822231 seconds)
  done (took 1.424232859 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07933808 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100212155 seconds)
  done (took 0.933391225 seconds)
done (took 5.245146477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08002225 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.136919778 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08123569 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098335876 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079674656 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101283127 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079334795 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098134595 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081947594 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09828008 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097898475 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081487372 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098226761 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079264348 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095728005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079422645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097835566 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079044486 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098082482 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078982066 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096003828 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08115707 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096230465 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079573667 seconds)
  done (took 2.962099607 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099409082 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100103649 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106555094 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088392866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103829972 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088035875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103423032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100406862 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087918209 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.1021684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104790459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086183579 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102074938 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086434257 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101434028 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103300976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088007897 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100041994 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083653614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104749929 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104126333 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083041171 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103777429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104562255 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086404967 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104334767 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084827734 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100856913 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105030306 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086268275 seconds)
  done (took 3.660907999 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084771608 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09627149 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081102882 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10427015 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079957546 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099217265 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080416945 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09777864 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080399449 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097422118 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081535155 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097312911 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0794769 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098764149 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080257233 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100859544 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11444442 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0802593 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097865789 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080934438 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101510763 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079432388 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09739595 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080294263 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097418681 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079152854 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098133979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079957324 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098714566 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079471838 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100275928 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083022064 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097567497 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103504257 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082934642 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097560375 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083536086 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096465203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08054847 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096918508 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079200045 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096664633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079890721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104622394 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079828179 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099345104 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07994523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099152142 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080293981 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100419439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080170439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09790576 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099846391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082460389 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101155062 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080757372 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098094967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07929726 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098836371 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079585569 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097332667 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080159674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100244417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080802621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114669402 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087181149 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097274167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099518502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081241635 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099788399 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.082170968 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112469061 seconds)
  done (took 7.318449264 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130066638 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12695799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082332747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100405672 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078919352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098550168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084639139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098505706 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100082321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086688219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098632358 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081645739 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099685852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096059629 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098999249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082749146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10414432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096246063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081834133 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101559528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080651349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102624915 seconds)
  done (took 2.87439087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206949694 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103135816 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144415582 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109215143 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085713361 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108309996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105286033 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087355671 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105652696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086349089 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102383736 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104709341 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085416 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103121403 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103708266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085403858 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105793867 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08593405 seconds)
  done (took 2.682940687 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092901533 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100141066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10069817 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101668187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101584186 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.201804242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106830134 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110306267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086480619 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101464763 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092688679 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10357749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085378301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101545225 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102975834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083193158 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103898538 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083344422 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109728823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106345474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088679069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110353566 seconds)
  done (took 3.043716149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096063964 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102625221 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120724948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085946514 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098281424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08064119 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107706679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082534933 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107381006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102793296 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083087308 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099964714 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089560874 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101136245 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106935473 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083722249 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103918986 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083525863 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103297871 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079031393 seconds)
  done (took 2.685858371 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102840933 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102638289 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102866747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093337597 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102837372 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084420992 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111629133 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103276497 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084617323 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127984156 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102557269 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084433022 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110529467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108330891 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101994834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093949302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111652919 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111465233 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084918058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102777039 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127357713 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0851001 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111213886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103003488 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085153775 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103445043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102883398 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091715434 seconds)
  done (took 3.610722638 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081374154 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100609286 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081227364 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099419404 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081875218 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099442877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081190334 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099094276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083536733 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099077976 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083560856 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101295656 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084384172 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10153529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083515515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101647365 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084477097 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099374224 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080372187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098740137 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083309507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101640057 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08333154 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099188373 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080755536 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101234672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081578512 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098447645 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083899999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098498358 seconds)
  done (took 3.511258863 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090741877 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106364101 seconds)
  done (took 0.969021394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078758905 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114667568 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080171005 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106109073 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089045153 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103404687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110471927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088956027 seconds)
  done (took 1.544840076 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096343868 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112036068 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085409484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115405197 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109870501 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099067283 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173529929 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101059996 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10622619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079386019 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112511265 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081067956 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105947874 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081744124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104835234 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088036958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096755609 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104863888 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085036499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098884754 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08478428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109284123 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102173129 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079642239 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106911945 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092629879 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112671466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102991618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087659593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109975416 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090620854 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096248619 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084645459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103073365 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080790467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111274854 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120224427 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087519266 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112021636 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104156116 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095886672 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098501932 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089854932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106184295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112545307 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085089145 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103642849 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079276619 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103733374 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08707682 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098273332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08451545 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097708417 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11041106 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088306901 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113828511 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083481663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105320311 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087458302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106962912 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110488308 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087162985 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105816726 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084852893 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112705502 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088941754 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113531132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098385066 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078980055 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100120151 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096033012 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127146499 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110038375 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085834224 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103775442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083211462 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106118778 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105023089 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0908922 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108957135 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084265315 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109277191 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110336427 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085496346 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105831144 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092829348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100857227 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105341887 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081808519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119872591 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083432531 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101412073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08223943 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113149657 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104491096 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081776284 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099296822 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089461488 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094576768 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083325896 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103188806 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100975805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093320707 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105339642 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106648812 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091589315 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110398448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084444539 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107204324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08145531 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10407857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102000246 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0926583 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097828064 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088142807 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104073765 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085388622 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112116896 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100998256 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085946914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111851492 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092348952 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101733352 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081031576 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105984225 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085348765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105765685 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111484134 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083898181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098122065 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080666414 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106400181 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084464728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106359421 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109748344 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08907987 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098107805 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083619788 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108407762 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112909888 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085843295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10517923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090755596 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106083676 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084323093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110387127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106765298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084656298 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110441868 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086353184 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098851949 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089460689 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107770721 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101912045 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088586333 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108473508 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08861027 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103607486 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083071096 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109260792 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104432479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08420013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103658738 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083980755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114424726 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105776167 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081117003 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.10115759 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092670128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101599907 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084898212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102701982 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088322921 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103891317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100987671 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084759292 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105655743 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0969874 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108286086 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10489795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090785513 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115445061 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085347881 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106108917 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085403813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104116055 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104959022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095000111 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11018807 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09130665 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106823917 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100902398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091101118 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111772772 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084714072 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101682369 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084400373 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107229444 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109003993 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089559542 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105084839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083575797 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104631407 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088855397 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106727509 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103464567 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084755393 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108925037 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085300924 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11001679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105131712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095451078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107342275 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080627275 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106655952 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101167919 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091710157 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099615257 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083387608 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102308253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086553773 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103359429 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088389182 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098018106 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09293625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109550387 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10423985 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083940211 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104342903 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093165313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105532259 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089127379 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106195196 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109465079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094006987 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101283394 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087593308 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115385092 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100439907 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077930507 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10902493 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083822582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.1040253 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084446676 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102384154 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088839625 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112409427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112020246 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079611325 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107277988 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084132242 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103639857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080893589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108657781 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107209001 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086912919 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111075911 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088391 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104755101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106220863 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083306176 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103706463 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085583893 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108332303 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086311653 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106773581 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084625898 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106439143 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101182406 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082658098 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105840928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086566495 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105181695 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092636918 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105105281 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085492654 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107230052 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105333097 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087094999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106022299 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085603838 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108396247 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086252414 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104631928 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107556534 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081674738 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112679209 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08519084 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113436788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086694956 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101926102 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091062365 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106884285 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110091126 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086459003 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105729427 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087202778 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104597795 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107574747 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093033716 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102752102 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098491424 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113663561 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10532624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088798227 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106280503 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088461141 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104795396 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087336452 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105907443 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086225666 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104653779 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109859569 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089014924 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105448674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089116156 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106221524 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087293695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106576163 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080524411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104123183 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084967803 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105003271 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115265696 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086940631 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104516033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084771227 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106826626 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104494063 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082704194 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11425998 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096314398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105961213 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112770017 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085936985 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107250797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097225924 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099573068 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084734386 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103600732 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083810079 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113888134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106609305 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09655421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105217334 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086729243 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101719847 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086715359 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10425873 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099795282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085495312 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117818604 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085473891 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10475395 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087106103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109277205 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088300666 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115296743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104411241 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087112573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106237962 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083488645 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104499673 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085789811 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108629656 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106357515 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083663754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102811644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085972049 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10649683 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088067369 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105487567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088727337 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115038626 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085232649 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106223793 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106651533 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080443598 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108796769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086435903 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105186852 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085850402 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108946088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107706791 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087268183 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115872073 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085685529 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105549918 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086381128 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101832553 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105391821 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086094781 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105832449 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085476025 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107250195 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094938469 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103065751 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108622419 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086030032 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107384545 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094317343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10658224 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089708857 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113388986 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105559654 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088139263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114430887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091113298 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108433223 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107025603 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086317324 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109474104 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084761092 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111632065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085533053 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106586289 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106858276 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084187224 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105186834 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086983324 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105679584 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093329534 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106296126 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08491011 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104014813 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103464661 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088385654 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109740075 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094339889 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108909282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089837979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101780419 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083881356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106938528 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102419095 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088169205 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109252341 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093015072 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108610143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087134572 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104878163 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116387676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092940177 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110290428 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084800268 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110303653 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087606295 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108929556 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107489847 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087494596 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108698821 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091439881 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108310614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086264282 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114952096 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109260663 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088392797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107755535 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088198119 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106559184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083113949 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107634123 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088330358 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11071928 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107973829 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087239143 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118412666 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084562471 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107013069 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110433281 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086675727 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111256796 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081796586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107607053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089372634 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107326551 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082425405 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105666318 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084490645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107901423 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104520022 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082881694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117852557 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096741936 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10991989 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105154005 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085767433 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102417767 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082861641 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106208609 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088970315 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109371297 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117416072 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086546172 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105749023 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082152484 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106182762 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090197246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110093343 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084284989 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102145492 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085800172 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109032549 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112764669 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085612144 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107428221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090922945 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109498457 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085384501 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110298493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083507174 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109973389 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120427104 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087902986 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107521209 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113609617 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096543551 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108519232 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082621822 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107891241 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091301589 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107333271 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088137432 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108448134 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124230692 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090250658 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10681132 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085101475 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108785008 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106390587 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096852646 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108293367 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088878898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111586296 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088605468 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115558889 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109680219 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096114389 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110054144 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110440246 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086647281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107560429 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086177546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105639192 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088546983 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108385256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112069402 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096784664 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106714182 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098976963 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116621265 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109132993 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084648091 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106816311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087499179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102827096 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089110984 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105607131 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08575002 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106229722 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086167206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108738771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113994952 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088750186 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10887698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08795425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101325582 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089655646 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110629401 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088414337 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104129805 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086963446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108985317 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111769409 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092845449 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104910119 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089189884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10882572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08810623 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10299619 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114303035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086869121 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110490838 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087293779 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107503843 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089152248 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111480626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113702586 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088387906 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110414309 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097461508 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110739241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084026039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104289497 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112822125 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085291059 seconds)
  done (took 59.686109731 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1461298 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081315431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099403644 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08012642 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113612829 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099534413 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079471875 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098714175 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082487851 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106272678 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082533726 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102844626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113866424 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129327551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096853652 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109063023 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103211311 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084802525 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10326053 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083908943 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112432422 seconds)
  done (took 2.936615141 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103828897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121110452 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120167428 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123311695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093458813 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119539164 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119230427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120050073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10292283 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115526899 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122278684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118777366 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094974959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114828706 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114628131 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097135578 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122787041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113948451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120812689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099751058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117661218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118872148 seconds)
  done (took 3.320889705 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084278771 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103158084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085350264 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101193911 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086276804 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103065255 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092019569 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105631946 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091589553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107478192 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.106002498 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086097329 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10949688 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083556978 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107232774 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085176078 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156158832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110068568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083716398 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105859081 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09954996 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087302007 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100397951 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081211264 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104845544 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090893828 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10886123 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085609466 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107915991 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085998127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107826138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104644115 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090191327 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10848323 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08596656 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106921558 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085534986 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108238313 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082876384 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106192744 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088069295 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103856932 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087822366 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109573427 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10533764 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08579635 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109936791 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088558591 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10288128 seconds)
  done (took 5.642013267 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103973023 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16820073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090016595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148873572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125020951 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117838964 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091471325 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14293034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103142457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086129914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12342535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12170684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107247369 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091124877 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111713467 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108281837 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089293179 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107353487 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092459772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109208638 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11388546 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09521309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124801715 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123537326 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11226095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087483391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108452997 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092766028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123712831 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114129685 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112519163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094193365 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126017491 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115115432 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08756105 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111191014 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125653154 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088171436 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111094695 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105492562 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090062099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113648613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115048476 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105228887 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109469765 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112911184 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088546833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105523865 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123117441 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091702201 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116914775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125029719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09229323 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109113371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11249113 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103125963 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1100649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105884719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090862729 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122677335 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105779824 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0919155 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125877674 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11055783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097371508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124945447 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11416711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113178325 seconds)
  done (took 8.418512719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093442023 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110338156 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121850958 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126166853 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095536651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116516767 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115547899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094985298 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116768341 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121530437 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116643012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139622593 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090379152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119673079 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116228582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094771241 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114244873 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115193268 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094375702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116226996 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115036563 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125802455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095387723 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124791881 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14777402 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110651748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094831934 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116476998 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125261355 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116312613 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128525177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095939065 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115820219 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125110403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128842068 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096080666 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108363648 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116394696 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095249155 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116353021 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110398443 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125460343 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09539412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110400354 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11702382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095634168 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126894899 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128431609 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119091797 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121736025 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.095596138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126696945 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115817218 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095583643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126970377 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1527392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126066473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125885034 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116110728 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125031793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104630862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134267562 seconds)
  done (took 7.963410812 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108381754 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116956854 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120358553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105491558 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087014556 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114544108 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086191408 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.1072501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098408705 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.118565125 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121556697 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113687371 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096379842 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12199207 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113932494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116857125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093693651 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115099607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119355626 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092272504 seconds)
  done (took 3.012247864 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095021456 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124552301 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089044963 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116938521 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113221322 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095327216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112472365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113100328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089422786 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112313677 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100446701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121546856 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110390346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096004493 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122068625 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116031148 seconds)
  done (took 2.57426722 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096495726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118954944 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12662441 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088638084 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10938442 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10659974 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088466216 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105962081 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086039231 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.126494482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089185707 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114461747 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111017931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087325762 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106496473 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092145343 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106472678 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086906388 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109815638 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124120685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101318116 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109320393 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111375577 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091703513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11102293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095727768 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112182183 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108062197 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087617787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110694142 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089785637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119831468 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107635151 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088190839 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108782791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086488884 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110139337 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088937496 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114230884 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10948357 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088930505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110123743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089142432 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111937157 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105951227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0899812 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105921075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095684945 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108326286 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089718813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110941786 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113515271 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091038289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121897082 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114195694 seconds)
  done (took 6.538991744 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100344132 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109400908 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084364368 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108458154 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092398716 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112943968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114022701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090730669 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11243184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086946328 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112739415 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091234296 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112391658 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113150297 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090990272 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114335661 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085603238 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1118646 seconds)
  done (took 2.692555139 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090912708 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105113344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093631029 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11002965 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089200212 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113569148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084899599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110320373 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108965308 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089235249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110953305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091536189 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109850496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091534074 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110813137 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088897384 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113090942 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107191067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086530799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103006639 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089356324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103576306 seconds)
  done (took 3.052809055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11260349 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121451364 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091106995 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228935421 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.101157497 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131500625 seconds)
  done (took 1.637319387 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110830682 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120902908 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106787903 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10828408 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114812549 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107651012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088554906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112524535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123207316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106202099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114866083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122358049 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122832353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10113739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120243013 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118578681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113794548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092826548 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11198562 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133202203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092406084 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123056276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112392516 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091235981 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113998975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122078775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123940457 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127866763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092764824 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122911101 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121088397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093049847 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123355962 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127241688 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11507916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101835235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113412501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134408354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120180722 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101171516 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114717686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120259751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100738213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118924798 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12279505 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11404197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097612898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113174199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114329688 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140876944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097620077 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123407746 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121583241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123131926 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122853302 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139737741 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107635102 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12228844 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12050914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128598043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122534916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099044154 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122959448 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127787645 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120361816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126628946 seconds)
  done (took 8.465478793 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102164043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125989797 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108170949 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123183425 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096468135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11107315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113649943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092384902 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114646971 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113556399 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158291345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09296311 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123487455 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123489267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113580173 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091556399 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113801633 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12296922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091722272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142292367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113982982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123051113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123683206 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101350815 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128871168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121192489 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114306493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091556103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112564003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113069904 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097330427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109165977 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119284001 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088438617 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11885095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108269598 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109072355 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09490024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108829784 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115337995 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097545692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127992415 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107576012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10783669 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123265334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087950705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109029582 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086628288 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109073802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107443573 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122850653 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102132621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122435167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119689326 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112582378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092475236 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114560054 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114483321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092393974 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121209413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123619368 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11406301 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140228115 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092735694 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114090152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12421914 seconds)
  done (took 8.237714873 seconds)
done (took 159.793764599 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.228654134 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.212482774 seconds)
  done (took 1.297911866 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088370671 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136350705 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10145923 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173790737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085553436 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13981273 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139021496 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097978786 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107455205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086403051 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106138718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086851112 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170848204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085948328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106649572 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108486416 seconds)
  done (took 2.688483526 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11432921 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.259049021 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127883355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106783046 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089917496 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109915798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084081519 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11203891 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089779475 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105331725 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088428992 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107297529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084772988 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106813705 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089392052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108966698 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104506504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088370133 seconds)
  done (took 2.840575828 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113071647 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154607548 seconds)
  done (took 1.134520693 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245387767 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162528472 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227604856 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475234106 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.280652562 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.360112529 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.200545756 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211822623 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167227533 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210016067 seconds)
  done (took 3.406662681 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119204734 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183295067 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318240876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156981598 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106655262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126296948 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15756408 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130450627 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123731428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10095589 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122071194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11818104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138860454 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095137016 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11569367 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118268176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120826916 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114532174 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115811359 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09519552 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138495822 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10594994 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094660034 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114159887 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118570508 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098414659 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105906748 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085489565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116201133 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115566323 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093370086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125815919 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118367818 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154290431 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122882812 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154067216 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11837525 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091635477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116865884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091598246 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118772505 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11820245 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125171969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097199939 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105642425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097873659 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106027473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085186229 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115436756 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118099524 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093785736 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114161609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152645895 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119915355 seconds)
  done (took 7.394681423 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798524029 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156970492 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09143965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888433268 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13736825 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10430194 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783449835 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113870827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26045757 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760840128 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135013397 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097986307 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231701661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262980155 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.977223662 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297234084 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.647536908 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127549112 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153511769 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155584326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119427229 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115934019 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132654212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456215323 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11766731 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090170502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120336228 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12022915 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163361353 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125469754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0940907 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201034872 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253488211 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206371143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094714266 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112297642 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089642563 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192556779 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27147583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196649851 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180668127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109127737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090175814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124316183 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13351291 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087505772 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186102422 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176887927 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172495614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115786016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120073305 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099520692 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122345086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16616265 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122845918 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324174417 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319129147 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090870533 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122676464 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126915562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246233998 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12399299 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227370453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141935153 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193581115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112749445 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826641438 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171663687 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111894508 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096885002 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120587867 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117145566 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099433038 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17024926 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392132229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125402741 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116392394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090774243 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251109595 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103908203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113608277 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163369942 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116686267 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099121847 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126051277 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124249183 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170692441 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.259579497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102662688 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121826465 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115765934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103500885 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117928689 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21915525 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223069475 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16410414 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235038349 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100744019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18687077 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169706141 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120973058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174054022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121127843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102605103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123046981 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219405528 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147281176 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101677102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116759645 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118888493 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148413143 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128104138 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096893259 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172378225 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.50017307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170640357 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.1094669 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128358209 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099475636 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163948319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118904799 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266323098 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122238789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169535857 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097449312 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111247439 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121733957 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166038767 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123070711 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100851704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122791812 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120858101 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238587132 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218071103 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122848702 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222863412 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184594677 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118803689 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17348404 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122279894 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169751428 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121251925 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102755482 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117837811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837728702 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102608464 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121402021 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117461494 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195857862 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090841371 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125031767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125637966 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087322816 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834465366 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128177733 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099648448 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125750672 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11957757 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121130734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096773377 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1174169 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163491359 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23084059 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120753627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098264562 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12616358 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162547989 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117086362 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125066701 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10357498 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127092059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123302532 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094297965 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125945073 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169038992 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187165863 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219254078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570484598 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113281357 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102692538 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228262049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113481852 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290886369 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098736657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228429857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186889861 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100099762 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315972745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167588951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198148071 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128329414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174170962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110715656 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119490967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165763485 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090107864 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119372087 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162899549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126586449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123894259 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.981625751 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091178706 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230937879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110899085 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171739064 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118077352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120759775 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.278969115 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113891955 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128424882 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166205082 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115565009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103261145 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.727922432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126023556 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101303006 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119735001 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222850291 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164887349 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121546662 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120766462 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097864799 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162177287 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235954425 seconds)
  done (took 44.529153097 seconds)
done (took 64.156214521 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282381314 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219987571 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269632519 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171910569 seconds)
  done (took 1.91262292 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172126364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150715384 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122667726 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108318464 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15100096 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085403731 seconds)
  done (took 1.682141666 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363642756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278412452 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244573337 seconds)
  done (took 1.783967527 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294992285 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.255536027 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.48655652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.332162242 seconds)
  done (took 2.385266512 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214847432 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137284019 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112631886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105067323 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197264233 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246592161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143573512 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201754011 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122651272 seconds)
  done (took 2.421269402 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.174097961 seconds)
done (took 11.254994993 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.260336794 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.297033716 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.267761978 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.246168453 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.250968269 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.254497984 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.13977503 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.202070137 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.229726331 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092545773 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127285258 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115928845 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099361699 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120405652 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.189037992 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220647508 seconds)
    (17/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.208678521 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.250349681 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114278235 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.12390189 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.16276357 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.183954264 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.188289004 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085623579 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119309545 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.172021477 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094798916 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113340838 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.1830451 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104374273 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169131534 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117497401 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193498506 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066121841 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124764547 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117411138 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179481543 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.20530539 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098440286 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090295123 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096775808 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116208147 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120502838 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167800835 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213614021 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.190542953 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21300533 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218117433 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072863639 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.181517268 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.214393038 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113969129 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185261494 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199154466 seconds)
    (55/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116980302 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072808468 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123956785 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094569577 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.234141759 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135273562 seconds)
    (61/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.142398311 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08904527 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066369228 seconds)
    (64/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112224274 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121158728 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.169969961 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110383392 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08873543 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132446931 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220870842 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090252839 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.179467928 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091044294 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095210763 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180928945 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116961033 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098030727 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.100117687 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115225785 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11021349 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110183782 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139219646 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.135703149 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067802292 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200729533 seconds)
    (86/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069198375 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164706415 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.189475183 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117533917 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081140497 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078974755 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095991018 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.093254357 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.227557156 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184660024 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.152596403 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120340231 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116285136 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118573453 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066626839 seconds)
    (101/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097537969 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.15569662 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216418838 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.223822888 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181712789 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138686099 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086353983 seconds)
    (108/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.160692498 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083159645 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111516766 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123712997 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094380926 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133521014 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144502488 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.216770236 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102111753 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.113276388 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094101299 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.191675266 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094584757 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.166707712 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119352715 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0675539 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120482917 seconds)
    (125/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068045214 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086795938 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.412498001 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.183578559 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118765736 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105622248 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121659686 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118406989 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095870318 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067063927 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091275868 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092226266 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121284978 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094422495 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091614864 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089757512 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090832502 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093933388 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09229845 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066861438 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120874687 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14587717 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118289546 seconds)
    (148/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190151356 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102198128 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091231665 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.125243314 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121585755 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086987882 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11766121 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087669532 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114419369 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086883629 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126769465 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1104051 seconds)
    (160/309) benchmarking ("sort", Float64, false)...
    done (took 0.149212692 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119788464 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181282117 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111595514 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111082413 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091984083 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.166621271 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068838076 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122317433 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066452888 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142501311 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.06872121 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112315955 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165043439 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.116628776 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112252066 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067672797 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180974307 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115397297 seconds)
    (179/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123235089 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184435844 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153910046 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110587047 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.187123472 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090425483 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066455502 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097261079 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.116520219 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11018985 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085433 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111965914 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110969602 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117943036 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06785768 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132646452 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179700778 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107418106 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114974807 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102058058 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136387072 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121168022 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.115052573 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119970835 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108805527 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225645047 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14727812 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077415952 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112494372 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111403682 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128232571 seconds)
    (210/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077732767 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120227497 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119379303 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113094217 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06858385 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099099857 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.174850479 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.126877328 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114251285 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067042479 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116886628 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067259394 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138881683 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098670689 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092395437 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171134451 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113799107 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092832036 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137691757 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118741368 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077067559 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085514518 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111976022 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138784258 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067265595 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111498998 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165893596 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.152471275 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112498144 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085892537 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134917644 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219556422 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 0.189939042 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148147955 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114908878 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112165756 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068673524 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067086948 seconds)
    (248/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.092793328 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131743956 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111437498 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095496061 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192128042 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.092174396 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156136221 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105067394 seconds)
    (256/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.123818813 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112581733 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120991426 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112084853 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087813092 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118767357 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086982604 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094311353 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068714703 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181312261 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087726135 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091922886 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095483505 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129343856 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069888561 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11204514 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06909611 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093269769 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067173523 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113132343 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06847281 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131999543 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112104254 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11178571 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066953597 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11811784 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068520163 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11878763 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085771102 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111519566 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086068938 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067430054 seconds)
    (288/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.091575977 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094971914 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117338667 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094677703 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112349932 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076673913 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117150549 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113850583 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092389395 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090746208 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157205047 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.206146982 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072940231 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100246777 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097937987 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117577776 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096515103 seconds)
    (305/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105057908 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10026574 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.145216347 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115202553 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13621308 seconds)
  done (took 40.440881472 seconds)
done (took 41.340068359 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100606826 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137442084 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096383635 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136848587 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124692233 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092225541 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119407135 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098703133 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124744535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125603171 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09831809 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094845721 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097093828 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121870511 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097623723 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1359574 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124716551 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094134954 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120339628 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086471583 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12048917 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086488282 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113798232 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071239634 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123348313 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094522554 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118328403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121990092 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086337998 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111412726 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090881534 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118833331 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08728116 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125348493 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093779986 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120275657 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097161534 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12157205 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113241928 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088026962 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119402319 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086971687 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118406658 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095109029 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118065901 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092924704 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120883928 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099367323 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136210143 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113834882 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096084616 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122077155 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095997904 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119289177 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090820243 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122553603 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118606812 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112221148 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12305633 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089337581 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120226709 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094814814 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117823784 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120640901 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095328121 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123081998 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098353145 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117136963 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097099473 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117735143 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086726047 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12002577 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114680263 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08766686 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.12183545 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097568053 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11190131 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092824067 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118936364 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092370811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111311673 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090011733 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114599588 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093673511 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114005501 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07041385 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115763382 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09355732 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110999925 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096199198 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118560126 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094178235 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113777456 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098759514 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110901937 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117302509 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088869299 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112432542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089270426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116065038 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087564892 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114071798 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09648205 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113276787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093072178 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124069422 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087064492 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118761603 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086519751 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111425773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125914453 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097474031 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112537343 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089581275 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111761291 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094588841 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111585657 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086534031 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112315704 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087717221 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117907504 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087369809 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113844442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095479584 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126631507 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087663756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116026348 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089709384 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111884069 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092870126 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112336259 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086674765 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114449263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078881976 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114703819 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087326643 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119760155 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090014324 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120715779 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114031291 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096554009 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117298994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093155807 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117701997 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087103255 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100577036 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089506615 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113881606 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088689588 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112384898 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08909168 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112933073 seconds)
done (took 17.060271514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08779632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187105328 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152410017 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144394891 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108118067 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112842007 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123473268 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119224656 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114831034 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144430167 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111290371 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134516502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149697402 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086392028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113770485 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09177029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114424459 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103561288 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146781949 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134030768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165379767 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087230233 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147005662 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136199607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121918452 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114101318 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114025463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091891284 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11709689 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103412129 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132535153 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116153348 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087710719 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135134559 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106333471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121345034 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.1122883 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094871474 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112769594 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088883924 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142680372 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133924834 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093075163 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11899903 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092349935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115184622 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09033474 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12228761 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123750609 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091966268 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128435036 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157328392 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091146244 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122470652 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111886398 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098519547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122933948 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090858934 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116031163 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090526689 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112880267 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091482703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128824844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142857642 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093106436 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122538596 seconds)
  done (took 8.688957464 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1046053 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14065779 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13145889 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106262776 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113475399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088267938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114052107 seconds)
  done (took 1.76777014 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088808147 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135184768 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111674959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13707471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133282639 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12794514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124944413 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089064084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132418293 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089953251 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134829712 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154660963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091042988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121703592 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138792178 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088541298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137853744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088262718 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117214972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137910364 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091940577 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135197673 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090435729 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114706443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103442842 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115092427 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164285975 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09382377 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115835266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092582229 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113219832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166631849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103210716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126305207 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115009034 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104134961 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129938075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087059215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13160965 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094327214 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129422747 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115450782 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090846118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113469041 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094477322 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125139043 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090140786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115769409 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091757648 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134919605 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089617706 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128265096 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115094229 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09404908 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116712314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095371415 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124743408 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090544231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134956014 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091648383 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132504168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131116073 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102660372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131765399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092819605 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13075545 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129049703 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091905246 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116971255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093645959 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131945718 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087319806 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116408444 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100493036 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117319636 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138072719 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113050193 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117420703 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100428258 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116080471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089666129 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11557928 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13885298 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092778719 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115487756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093473536 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11856545 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086922401 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114400551 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092652947 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113644588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090804791 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118741821 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089679172 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117700695 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106151768 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116628669 seconds)
  done (took 11.925294559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090877492 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115912228 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092090961 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11555446 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091195364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116861355 seconds)
  done (took 1.605214074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11399349 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119642272 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105131072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121651413 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157263643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130848368 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104433451 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125145742 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10836545 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129142655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130617966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105127695 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137023052 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123703601 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10433854 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122073515 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13116387 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099510253 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129091991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096940399 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137806169 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122384872 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096852455 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133665574 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11973285 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096305392 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127182498 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103253195 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128661518 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124372353 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096242204 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119609931 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122817718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099139188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131494217 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.0966571 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122351982 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120365064 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101048156 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120266558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13190414 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09696616 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128832621 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093789276 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125586352 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122852414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093775048 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126696076 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.13038904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094109632 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120185895 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095231314 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11972083 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120496933 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096231274 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125342591 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094884627 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130853061 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122759463 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096303604 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119632633 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094080456 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125338692 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119789402 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104597987 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120604482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123169187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096658481 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123567821 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095620956 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120450588 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119374842 seconds)
  done (took 9.327885128 seconds)
done (took 34.275052553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693429208 seconds)
  done (took 1.671191049 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.742075774 seconds)
  done (took 1.7215585 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.500022735 seconds)
  done (took 18.483834509 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506943207 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.590582104 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.828465422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181084664 seconds)
  done (took 3.089309101 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956933947 seconds)
  done (took 1.955185089 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246545885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233330293 seconds)
  done (took 1.463180112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790351564 seconds)
  done (took 1.781390681 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360921256 seconds)
  done (took 2.347144151 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335107492 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186815985 seconds)
  done (took 1.516229126 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568996166 seconds)
  done (took 1.56422068 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.898025152 seconds)
  done (took 7.900050959 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259612209 seconds)
  done (took 1.265046434 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302410854 seconds)
  done (took 1.297004397 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.622466575 seconds)
  done (took 4.622281002 seconds)
done (took 51.661375947 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098369616 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128357077 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101594164 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125803285 seconds)
  done (took 1.446663214 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100590293 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12256467 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100442851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121631585 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127355227 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095666669 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124628361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101624048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122066946 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096970651 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122458756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121238331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099418296 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124353365 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093019493 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125860932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100223286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121849519 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125289847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096529342 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120176197 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097560769 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125880126 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094412648 seconds)
  done (took 3.684525932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10031835 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11990657 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096396733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119207688 seconds)
  done (took 1.440601285 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100872107 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143694706 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140882102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10060833 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144155161 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137964182 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092756744 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118121292 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094675821 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12663651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09147358 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152043842 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139249684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100234009 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128336157 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089069182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118248554 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137746088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100026851 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127336366 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092772236 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126133609 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090705168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14011555 seconds)
  done (took 3.832647587 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.158018947 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152159826 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140869965 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09569017 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157287394 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143383201 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091637749 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142995271 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088170861 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13245577 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120072677 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133618417 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129494602 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088694684 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114650385 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114975574 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102999304 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130179182 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090799695 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146610072 seconds)
  done (took 3.48215531 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097804227 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118665516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088773057 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117371904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099039837 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122842198 seconds)
  done (took 1.651569936 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091620888 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11607721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090327052 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11565057 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094715253 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116794906 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088639286 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11625386 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09009808 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116564556 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088989209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114814129 seconds)
  done (took 2.247208962 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464636518 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093892591 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121942124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112645233 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096911258 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116399486 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10371826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119743243 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14230832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089298993 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117035847 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091162601 seconds)
  done (took 2.675304119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238200908 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126726623 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29396595 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192730583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160520032 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172015438 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154256541 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166727796 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198656922 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1593045 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235300274 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197477417 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152833215 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192955867 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139642683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146979269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198153484 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248070541 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156239637 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207108368 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229214665 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166821466 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180112027 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153228891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138393612 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170974785 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096317182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131506747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23703693 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179655862 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189819826 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164628255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149600927 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240788914 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252840311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19772803 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21590339 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110164286 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172503468 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168438704 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267687244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112965791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235966641 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161127008 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132315528 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194284757 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170145521 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175840903 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151760979 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140517175 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198146509 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243565793 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192795277 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140769107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162871678 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162096173 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169500614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154418275 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253035031 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20183604 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20772908 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095481816 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14780502 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192919201 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182237304 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167559378 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209921749 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147252998 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19369846 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188301451 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165399364 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220629372 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183823492 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138034973 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170414789 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174746161 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170561235 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260481596 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178845402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123067838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16851215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151629606 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104724248 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195342918 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125653344 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214768365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152337751 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136059693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164074426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160689404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161494238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198932711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219896289 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120344325 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111841323 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157332673 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129190165 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21709934 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139665596 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160527463 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16069124 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103003844 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203827679 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097415738 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178154577 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118533307 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177675225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185654217 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126959072 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159486408 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151955201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125635757 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20494519 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200025281 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141371405 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107559486 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235740715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177206785 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150282431 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17908739 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200491843 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144398454 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149719779 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199442919 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24510935 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140887542 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204904425 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155296045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136286367 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134790916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181609696 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156983874 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16235959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106416642 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208933358 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211415966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126554087 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111666518 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21614268 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106043739 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13212589 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161273541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149857885 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140574183 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119577561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153737547 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210664267 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18064235 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154571172 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166876755 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153935075 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25339728 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141032195 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122325249 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148439094 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122129067 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195723665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19790671 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133029913 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232852734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173462453 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155576377 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171574669 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108915784 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177991057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130938501 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092926669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223407567 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168265336 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163168 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196128539 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156600762 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181845827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.209619075 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174249246 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175809691 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164708929 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16070045 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139073223 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13156504 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192749752 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096832747 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144186333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135072157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156864544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116061599 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134375941 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22748758 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169261411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149464013 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131922406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150323205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180813358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130013042 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176397057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176844381 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148623163 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22554713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195031895 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186733923 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144331955 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234656229 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09432674 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126583963 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141837428 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171210931 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107890252 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136443176 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166980475 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180861848 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211242822 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17664832 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164211417 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177875223 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190466703 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123500845 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141244044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213223338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17679557 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162977196 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139240895 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152964932 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176948314 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157083205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259025031 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167222953 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177898062 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238989404 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150076382 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105666098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15290422 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186006712 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155678444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177478997 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147482128 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144042644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162828806 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134476724 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160952477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184182632 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163992264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218313621 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123562202 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214988371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100731006 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193426891 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131390246 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166054162 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109822737 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175321526 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230940696 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120669244 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196417539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194016146 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132329073 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15041185 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241255325 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194015931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138869251 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159552268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160397018 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16521402 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172172656 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177532572 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160324721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188760385 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157956509 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138873412 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1406152 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150360278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123797316 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133856993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149915328 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175686128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140639021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188365659 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162091328 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158808656 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172026591 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151344286 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144742503 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150657703 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217346842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175750856 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242059481 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149661124 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179069808 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205119342 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127096265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133147017 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106725465 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177826709 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136977479 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189695593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.150294407 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158169818 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181592295 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220412165 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112349273 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121625942 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157098993 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174172734 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164964136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152083506 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160028741 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207595586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142145581 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104895709 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172992762 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159089089 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148595248 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197553303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108655547 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121872492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129263934 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133317689 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165115684 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206817684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137532719 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18458744 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171653418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169966696 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165326456 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151058893 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149323092 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139161368 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230778687 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185382885 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132409345 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158206964 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177480312 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195528643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160868047 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141096278 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204436137 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220759917 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198238013 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143799668 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168195065 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168191885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15725086 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187290199 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136463269 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2050719 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136779237 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227183738 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154956757 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143072568 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175552469 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120392746 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143306553 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216314558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174047285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107917186 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133859714 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168443903 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176345878 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156662455 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128229687 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179452917 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125593492 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191181202 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260582497 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13418258 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154136328 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120489946 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136298007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157592064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160642851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140579942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140548804 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231044029 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135181136 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192075629 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230471125 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171019373 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175479864 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14416935 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695025743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103584362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222161218 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155215103 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207879656 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15172347 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17357549 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161371029 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170092794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195088105 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158270441 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232904104 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222334116 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178774266 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133488999 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159151677 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162925641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1452122 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123877558 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166681329 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131984224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153508939 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205389652 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170008202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107366795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141573832 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198305935 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155146516 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213403915 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179862534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111767459 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173601221 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213853431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105317963 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208855393 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207341004 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143580851 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151586674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134839518 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155433315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231846806 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126368152 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228247619 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175602865 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158207005 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167805024 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147420582 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191470191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15999246 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178788858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146936623 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159993111 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156221475 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138531528 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103587431 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15606931 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166012141 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150727544 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159581183 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164196562 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192183062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096573058 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145155433 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156654471 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188478511 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243040837 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137243821 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108170521 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164172246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152598097 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175030092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177367747 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135927043 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137408603 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136099849 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132356877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139636243 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127252327 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15542086 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16437071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234842329 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13747786 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249782008 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140451397 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156091599 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088653688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131542668 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151620491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147034226 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157891432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151194026 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23362448 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147258901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132613606 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150841035 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099024674 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137277211 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164715452 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166486333 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176014035 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145239286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081267922 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159499784 seconds)
  done (took 81.142845723 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17335879 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151129774 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164605411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217389376 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196464946 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285533188 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230197917 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275046435 seconds)
  done (took 2.780791037 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093762331 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146417305 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159226665 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134306726 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091385664 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121612875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333052442 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.137581413 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091060183 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141124157 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149581815 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.119197436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.515515675 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.126511546 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118717913 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084090123 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117429647 seconds)
  done (took 3.765206622 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.465724322 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734431537 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.482413224 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.125678761 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.29608963 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.135980554 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.957782067 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.21408373 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096052579 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497423409 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771819688 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.188999694 seconds)
  done (took 19.060146572 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100060618 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123093734 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107794442 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136483406 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097678845 seconds)
  done (took 1.65833115 seconds)
done (took 129.861534679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104779509 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407286662 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072832874 seconds)
  done (took 1.60883752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108560243 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138191476 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109917376 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138902129 seconds)
  done (took 1.601475319 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098180378 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128332815 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110226643 seconds)
  done (took 1.43555197 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326098934 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193631092 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.147394418 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106407282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131258952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104114022 seconds)
  done (took 1.437881915 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097523336 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128953105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098712824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13122464 seconds)
  done (took 1.556350504 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095120955 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071471148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103287836 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075559859 seconds)
  done (took 1.441478851 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11356635 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132841199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105731582 seconds)
  done (took 1.453707142 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130627231 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.143146781 seconds)
  done (took 1.375064366 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10592309 seconds)
  done (took 1.204970151 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118205042 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171989986 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.201386552 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166549686 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230106284 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167207579 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143420627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115456286 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.134088545 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.146626542 seconds)
  done (took 2.697225855 seconds)
done (took 17.684282769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10366869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424960255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415030858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117597112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724623816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381203404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036760919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147878769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167976649 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099670957 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140985431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702712037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996807415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380619792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984019094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379295158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707024804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093967402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120980912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094007094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021389171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093221178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123613265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093664322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705045865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42842003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095129984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376887972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093257126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12765997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412228094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094990016 seconds)
  done (took 16.976535138 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095587344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176044308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099078369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139080746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124787996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095334599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126416019 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094407621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183650013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12767922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111630778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122748177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128358323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095471461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14359776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093279041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126725691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12196999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093859433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124741416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112295161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122460742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09525948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124006536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094378709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136830061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124604529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092678918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122016348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09924894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130234162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09521295 seconds)
  done (took 4.884485088 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14143136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185591174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131432689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127979525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171514262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125699029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202588435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149043456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155071767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12403346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141845154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093432973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158478338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125592865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11437006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123103346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098295843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124102867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09314294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124804709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141763481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093113012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124337326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094045207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125079997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138719382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096116834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123150576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094026752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129283844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101577306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126087941 seconds)
  done (took 5.208006868 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0970798 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129401076 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109714324 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140517622 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102075677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126777415 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098013068 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125980266 seconds)
  done (took 2.038771516 seconds)
done (took 30.20661133 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103768504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124620786 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098847604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136885185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.09768825 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134162159 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092146251 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.130162987 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.09988365 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127708494 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131401108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093600692 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.126160978 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09242359 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129735346 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093864113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133622368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0966658 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134895438 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133602937 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095903472 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131316104 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099803564 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134800708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104425417 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134712554 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136014327 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099109939 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124059321 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095618018 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125665467 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110260376 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129650717 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103893346 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123242192 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092784244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122320008 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092786651 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134290487 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100817356 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126534544 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130478943 seconds)
  done (took 5.959502026 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10818309 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141975274 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105403894 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082262005 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119127951 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081959769 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140088611 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080139816 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111817112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108783144 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08022577 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108356616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079291776 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104010688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077323903 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075962724 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110712027 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076374499 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077345364 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107932327 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079602568 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073842696 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109822945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079304199 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106101885 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081689525 seconds)
  done (took 3.622929372 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100890175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137246932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112983468 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185929311 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163369809 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100677274 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134970771 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142344353 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108883312 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122553371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097398913 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152057569 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111812037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12998667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093049739 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138279377 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137816949 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094505739 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130483474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115060578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141355065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103613598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145144896 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134663454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093110519 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12508524 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096682092 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145697116 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097471838 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132703557 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12833416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097897408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125473744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105331089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128147407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095628559 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142253681 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132895468 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101977403 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.124796386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097384944 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124340476 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113877763 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168885458 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122509429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100607022 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131159179 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1036565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124241672 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111344335 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133439836 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092732351 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126505539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.122830992 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093220386 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138379173 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097596957 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125460351 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102876102 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126930189 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106158483 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127380674 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139512716 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093039227 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130294303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091827593 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123589592 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092808838 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146022518 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094963998 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165740989 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12836959 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095029988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134213835 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101103734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129849221 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093776353 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14051827 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132955998 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.096950569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.13273535 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097265423 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126742069 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111618092 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126766885 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095184779 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124951916 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099361552 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126654064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094877623 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137637677 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123905337 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096711054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141690798 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092433383 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124844101 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100066556 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129358305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092771019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136914535 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129284681 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094185333 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134114992 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093709107 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126596925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103742588 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128796176 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.122158822 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099163809 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130067854 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094635364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125522099 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096429774 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126532732 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104021701 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130935572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098143148 seconds)
  done (took 15.009566578 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230003286 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.221985242 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.126689823 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.21106935 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106090935 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.136981213 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214650201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158350456 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094046246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124654505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09498605 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.16507594 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.157995615 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.170922336 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105695422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12452206 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11325264 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167413068 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216793231 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.209244746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1457692 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133104316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095647098 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12574098 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.09628455 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133793979 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110089234 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135425089 seconds)
  done (took 5.258225592 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107212804 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157679659 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099449546 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146155921 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150876335 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093867272 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129750585 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094693842 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136689404 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138129573 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093259863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130702542 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101564325 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133815724 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125309029 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103910502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134891333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095650887 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127818945 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098564043 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13128578 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134117906 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097883121 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124099124 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101015571 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123648789 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086994191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143175683 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124582885 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116341136 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123211597 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.1005733 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134371271 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095092172 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124888546 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096190249 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126613096 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096078397 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125775226 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092530817 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122923971 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078407488 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124249673 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137868669 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099806174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112184098 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099878016 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130633539 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099099828 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122459726 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096943684 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126908444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097323375 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132661862 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098416481 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130473987 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097827325 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11753842 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100567398 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126717233 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085701946 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123444473 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099223086 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.12078061 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102432101 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130946777 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093062819 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126804707 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098364043 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131286129 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126998904 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097272068 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122095588 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096385263 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13033249 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098607074 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12906339 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092758677 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124464187 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094368319 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107420779 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094326753 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105605344 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097828446 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123092341 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092676193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126707279 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099677641 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139900428 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095488072 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13123081 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125166863 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092953092 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128061203 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084744181 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127111305 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109490547 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143221608 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094173628 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123584439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138541079 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099325963 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123430797 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077131012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132209097 seconds)
  done (took 13.126702927 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117954337 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150584453 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096561007 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14055855 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151781663 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.118145513 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132053033 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100351441 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126708674 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111609963 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125823884 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102512579 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128520487 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133977547 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116724142 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133579392 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095956087 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135367477 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102331379 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.161739056 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138954268 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108724176 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136201511 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094716488 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129694036 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106464441 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.152326086 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135625454 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103727394 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139536149 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104625304 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15161051 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109538043 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130943515 seconds)
  done (took 5.366012459 seconds)
done (took 49.452490105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225414525 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.455284033 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.209194425 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.15280757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.262360999 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.230674975 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213959664 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204735411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.26781216 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202584501 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438895201 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.942533699 seconds)
done (took 58.94736089 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.323501186 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.341179866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.472901086 seconds)
  done (took 3.957215517 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.56608381 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.155077784 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.471940357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204551509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209157887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496285509 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.91182961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.600636876 seconds)
  done (took 28.183870116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.208397838 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.618752567 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.113753211 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.11514925 seconds)
  done (took 19.191305649 seconds)
done (took 61.35561221 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.213349525 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.253018983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230982583 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183709783 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324075886 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243672721 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.428389422 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.314097415 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.234619331 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.194959656 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.23091679 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.220119448 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.219568216 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.404200062 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.2197056 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.210254206 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282236385 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.853797564 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.654481849 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221459443 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226025191 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.284097824 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.23227328 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.213000823 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.280320096 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216052988 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209889172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.21104497 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.075540592 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.220345226 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.231340082 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.55787013 seconds)
  done (took 191.231038749 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210553864 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.416962758 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.479208211 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250706593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.897463226 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408793015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335444194 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.947769758 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229578314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.237125492 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.548607164 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.210178474 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.615136779 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.223129705 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218837229 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.311255262 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.4382202 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.570611718 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229526504 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.479964085 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217848253 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.537903839 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.447580427 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.465591443 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.24338079 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.320725384 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.253027467 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.228882663 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.406364298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366204321 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.26975111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233547417 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.874359394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.076147874 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215884449 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.229267187 seconds)
  done (took 151.785938291 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.514172685 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.212146958 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.211847711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214117493 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247320524 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212211953 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.808607954 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837461295 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.763711535 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.304233102 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275737088 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562152451 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21842073 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310157647 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225634673 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213387366 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213403563 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228292424 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256809819 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213756002 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214152445 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828215705 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.233520361 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.233117248 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224599982 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214508143 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249019717 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60655073 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214721971 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249186616 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543321536 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.267945456 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21519342 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614915947 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.204614405 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331456236 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216839137 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249105057 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215287162 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491092293 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216311641 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216093748 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218705961 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901602946 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.222199954 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812354067 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215732919 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24741565 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.221733882 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21627381 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215394715 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.91175907 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.914067938 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.239592477 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216511526 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.217443819 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215803997 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216445206 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251200184 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.696638448 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320402353 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.232973532 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219986723 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251886045 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217415679 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.563431862 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222728311 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.15555938 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276265743 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32855523 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831683602 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222942193 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314595722 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338578259 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217174509 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.216033499 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216898277 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.216863598 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32765446 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217220072 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.67204055 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224032831 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217725241 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278524658 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314163486 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.217565645 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618891688 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22317422 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217604662 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046883248 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319995611 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218281478 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219238754 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218946083 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.671480177 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846108838 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503549559 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223955611 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.741553603 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223779259 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218177561 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.689257588 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.812578232 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912081143 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.225920368 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330104543 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22295972 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219334631 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219841313 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21824216 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249137724 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236599932 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.277495966 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219428118 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619866535 seconds)
  done (took 350.677981262 seconds)
done (took 696.343235141 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926989759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868708459 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.011321299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.890000191 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.86727524 seconds)
  done (took 10.712870433 seconds)
done (took 11.859533781 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414955297 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414447254 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283575293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418097051 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250126428 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436337958 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394876916 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240281346 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325992599 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.308740017 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324030561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279329397 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251232561 seconds)
  done (took 18.491126016 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541743021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532639759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283432765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548978246 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262601305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542688797 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422988928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434689943 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434911718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254079302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235034882 seconds)
  done (took 16.644878508 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550663668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541096205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286901706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554268508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263395987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541831431 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426111533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437455763 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435664242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254076512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23440562 seconds)
  done (took 16.677027806 seconds)
done (took 52.960218493 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230002197 seconds)
  done (took 2.380495161 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266504386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.433188262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250172936 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236660978 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23127261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232732349 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.234858687 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232438979 seconds)
  done (took 11.271073751 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228253954 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230542362 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228521857 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.229088131 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228085726 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22863425 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229962113 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.232301799 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231570442 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231474569 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232017658 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227890704 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228507277 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231177696 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231460238 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.229920342 seconds)
  done (took 20.832115953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23074122 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229047156 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.228711228 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230035169 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229190337 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229935011 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.230272067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.229160799 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.229056834 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229808011 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229644712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.230337413 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.230547169 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229883981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230323778 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.231457122 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229788433 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230113575 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234940292 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230616614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230359539 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.230035451 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229652027 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229973696 seconds)
  done (took 30.679720185 seconds)
done (took 66.311664649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.476631472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.029147905 seconds)
  done (took 9.660315966 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232956058 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.232948517 seconds)
  done (took 3.621040903 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233132355 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232238111 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232101677 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.232123355 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232567832 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232241312 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233129113 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233747115 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.232707049 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232890518 seconds)
  done (took 13.481649288 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234172368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233754579 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231848344 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233552867 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233132115 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231886018 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234018475 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234177106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234614676 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23096645 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235170074 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.231786661 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235481235 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234019016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234142276 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231372824 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.233031426 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232193397 seconds)
  done (took 23.354953866 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.234782925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234635978 seconds)
  done (took 3.62493857 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.231796495 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233335127 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232210242 seconds)
    (4/7) benchmarking "year"...
    done (took 1.232689258 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.231515345 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232227069 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.232279792 seconds)
  done (took 9.781861656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235947638 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40852009 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486754051 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.835356086 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235790725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.238522973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098517863 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237592808 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24147744 seconds)
  done (took 14.174900014 seconds)
done (took 78.851858732 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.276412682 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.246029474 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.478585535 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.230883013 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245087406 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.573336034 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269173338 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.368045714 seconds)
done (took 37.842761349 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.243518044 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.036650089 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.005523352 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.229840947 seconds)
  done (took 11.42972531 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.223004554 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.224779579 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.2224685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299683017 seconds)
  done (took 18.128312494 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.328725133 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567873649 seconds)
  done (took 5.054600101 seconds)
done (took 42.011958499 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237776686 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238448436 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237781621 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234813289 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.235043563 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237687554 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.234344884 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23487793 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.238100764 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.237093922 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.237580848 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.237984065 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238609358 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23632916 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236888197 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237294922 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238685172 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.235938216 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.238943583 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236797074 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23645614 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238991827 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237351961 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236642828 seconds)
  done (took 30.849638977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.239405878 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237724005 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.239144782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239361528 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.237191452 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240091578 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.239698385 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238351865 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240573983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.240875455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238888675 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.238063076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.241403454 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2384404 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240403818 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.237472143 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.239939127 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237443239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240389217 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238481613 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240934087 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237873354 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238939975 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240396965 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238164514 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237547307 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241805686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.238520086 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24112986 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.237462221 seconds)
  done (took 38.33827243 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.245631384 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249900613 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241848298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.242419467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241445463 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.24257831 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242424465 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242899236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.243050918 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241870298 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242608491 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243542176 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.241919991 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242308369 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241751489 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241753537 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243107865 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.241813399 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242702692 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243267661 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242776354 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243413673 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243036304 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242859408 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243282178 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.242520051 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243636316 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24239942 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243280062 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.241942945 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242798847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242985859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242913036 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242566785 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.243660346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.243554165 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248550197 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25210781 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242799537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.243406502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243997073 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243454928 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244196768 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243504019 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.243146381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243935695 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244093178 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.24407947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.244859479 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244079737 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244704704 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24502069 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.244200356 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2445991 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244012384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244959865 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245309689 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245312157 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245164589 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244432521 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245157446 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.244460979 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244476587 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.244807176 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245216981 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.245627676 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245177302 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245043104 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245328547 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24509548 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.2447472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244828184 seconds)
  done (took 90.725931871 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246438044 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243827942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243379174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243256781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243506085 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246195647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244184191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246004328 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243449756 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246796859 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246284063 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244974326 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244257249 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247799416 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246507322 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243655061 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247085069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243270657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.24644013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248395631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246194126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244684271 seconds)
  done (took 28.564366208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247609662 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24748448 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245737795 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248392145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244939828 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247785758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.25428156 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247792836 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24775219 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246009421 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246140126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248536341 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245658319 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245440795 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24571234 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246605061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248151477 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245499565 seconds)
  done (took 23.618542813 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245440149 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246462272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248735451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246030608 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245679035 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249281722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246484482 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249098966 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24976662 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24655639 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.24852335 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249049967 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249232146 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246509048 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249368504 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24639018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249907426 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246090575 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249591503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24729155 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246867302 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249214824 seconds)
  done (took 28.620928113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249671867 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249888932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246504381 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247244493 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247409663 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249005624 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249960696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248783267 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249928216 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249713615 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247961727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250172516 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247761298 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249599778 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.249337525 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247133451 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252132144 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248511565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250085814 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247894327 seconds)
  done (took 26.149678128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251578389 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251685489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251527517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252169734 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252035308 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251526109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25162338 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25180649 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252027574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251884173 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252493816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252716055 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252573081 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252902181 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252020095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25307588 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252356673 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25376667 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254886645 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252457675 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253099038 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253214817 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25264592 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252401743 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254214584 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25308776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252548929 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253694312 seconds)
  done (took 36.245309281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254028423 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253455649 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251080396 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251820645 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251242413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251112414 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251810596 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252037809 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25316787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250200511 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.255052568 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252876113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252713748 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254102603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254901611 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.254466889 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253453731 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252919207 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251350661 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251486383 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254658411 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255240845 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254756035 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252206808 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251647595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255472185 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25272666 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253515782 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253761643 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252828532 seconds)
  done (took 38.76510287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273218323 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273509822 seconds)
  done (took 3.721970043 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.252249225 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255369264 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255513404 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252495727 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252076461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255952714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255158342 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252390618 seconds)
  done (took 11.206691751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254665104 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254065382 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256077676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255590982 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253725007 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256105834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261599979 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275419277 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256770725 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256515473 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263943446 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.26413252 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258474535 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256312753 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255829571 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25707377 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256649461 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256545522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256296236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25645895 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256341131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258836478 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258970281 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253916483 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257553286 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267604769 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.281373289 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.256984955 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257774873 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261207915 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25636478 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.255037025 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257781214 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256520084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.259203317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257624389 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266169257 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278263454 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263499167 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277436017 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258224688 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254632601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.25853421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260039618 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259165618 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257289877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257574828 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.256153386 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257128643 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.261339096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263963681 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257256276 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255140647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262000499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259549974 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265333008 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.27827849 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26135431 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268524959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.269697253 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.293517605 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284540083 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260654542 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.258157387 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269158209 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285167107 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26581268 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275933705 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.256349476 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260114539 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267016644 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294551012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286864286 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259346216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259585979 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25971087 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259600967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261138352 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266501305 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282580767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259984039 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25952724 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27103695 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284198805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.261478535 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261467002 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260310047 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.260651458 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261643126 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271367486 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280773994 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2618417 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261487826 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260331288 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262034466 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261865757 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260280443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263178184 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258793583 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262286408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260773371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26547849 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271339264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261305983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262397781 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26938306 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28273124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26150017 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268669328 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262675796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262242852 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264234735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268583136 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260293367 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266640193 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.271889385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263232145 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.263913655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262617726 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263292645 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273801364 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.291452014 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263669284 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264337467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269522034 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276151641 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263826873 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267163657 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264236999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.260304163 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.261406479 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265588129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264988075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264519956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2650126 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265812029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262515568 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265409954 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264380162 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265938035 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265449141 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265162874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26588784 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267438931 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263905518 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266406309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272872676 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.284444578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265860429 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.266170064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262497968 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265326312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.266662073 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265049635 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.265737811 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266706906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.264963364 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265390073 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265497867 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265644559 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26517214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266731567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270577098 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26647921 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.269089968 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266640867 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263500798 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266599562 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266514426 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266059282 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.266832303 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265495841 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270809087 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274797962 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267579425 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267044627 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27012071 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265949778 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267800353 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266613063 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270879067 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276090188 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268178975 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27293442 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.288379889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268140282 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267559585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267519749 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266644727 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267346616 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272467807 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275926501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280943334 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295610607 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267849518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.271914286 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268333477 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27163664 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271835874 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268360832 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26829787 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268001661 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267790385 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268658085 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269751155 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.267311054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268113777 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269142154 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268549 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268425536 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268796647 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.269838728 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27014723 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267627906 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268268905 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269697422 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268684549 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267514374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267811909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269189288 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269604874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269908457 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276034216 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.268242787 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270217764 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270407283 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.26956421 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268120239 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270138899 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27263052 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270039486 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276806599 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290214827 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272198362 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277358176 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290089325 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271098226 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273939403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271071491 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.267773536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274870941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279617118 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271211549 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270703192 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270894637 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270695995 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271424364 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277599739 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.290277977 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271404132 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.271540068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272918011 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268592133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.272130039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272806278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272169044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27314904 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271420975 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272978246 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272424108 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272019724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271494107 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272323057 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276077497 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280345407 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.27712649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.273479866 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274787308 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273307868 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277422971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273430757 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273607011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272917427 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286573073 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.300460588 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27949899 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294759576 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27463285 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278337581 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.295707304 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278306218 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275097452 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274454373 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.274731033 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.275163854 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272059212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274291413 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275163482 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275192854 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275755646 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279888494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.273405737 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.273508641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274127632 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274360556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274758128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273414701 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274896525 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275940817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276187723 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273395964 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275099496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282732774 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294762685 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.276476071 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273931288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275785586 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274629009 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275566888 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275710723 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279794191 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284618472 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280199126 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28542282 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278021547 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285579299 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276342222 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280512788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284039822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273424176 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273840113 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276376034 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275936057 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283905938 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29609606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.278285917 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280606486 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277331977 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276198828 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275250733 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27624294 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276482927 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27630832 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284032106 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.299154207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282389447 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278436901 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274408141 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278096662 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277337796 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276319239 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281544103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277759998 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277879736 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278018817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279594352 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278573417 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277274517 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278775235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275701637 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278716351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285292162 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29917985 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283396377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279210581 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2866388 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300639998 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285414918 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301351252 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280088312 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279650532 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279157416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279760566 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.278780097 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279976305 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279580808 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280784884 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.285129232 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279295161 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281985647 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.281219447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278875495 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279800109 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290458379 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305243805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281451836 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284455485 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.277436489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28206131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.28452413 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27968472 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.28013027 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28338318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292915625 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289589163 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279147962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280633646 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280563121 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281600949 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281312096 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281002028 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281039355 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280606233 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281723331 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280975467 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283799971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.280737608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281988393 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282320462 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283674699 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.293247593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.302422686 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282684859 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282161586 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281824126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282349859 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.283454811 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282300388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283140527 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282577555 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284327162 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290942123 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.29017905 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.284515722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282482978 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.282691206 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283216351 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28493546 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283090084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284174474 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283066863 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283894904 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282744113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284411348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281957116 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283611005 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.284204399 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283461407 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286893551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.290910348 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284106655 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281480677 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285361117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283468458 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281973474 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283347055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290538073 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308575052 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.297049605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.294273572 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288068624 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.284503768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288718984 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.293905779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283560959 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284170284 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284575761 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.286256925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.287726325 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288700804 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284802291 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291417434 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.306010902 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284408319 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293002777 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.306061571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285024116 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.286306601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289381775 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.285169455 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.282293211 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285466129 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283822609 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292490953 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307578247 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287799262 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28684915 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.284598375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287541835 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289417887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285947743 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287442627 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283700604 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287364352 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286305148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28652971 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284584925 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286093503 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285770532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.29076882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294211028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.283110034 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289360344 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287182167 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288164363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287160721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287073144 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284097414 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.283657038 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.287029231 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287720978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28691661 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289952315 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287836574 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.288740992 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290476958 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289394701 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291476854 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299684969 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.297061242 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284661587 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.287357989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288845057 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.291384073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288061282 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288592169 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289234276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.291005338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288283489 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288735575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290143281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293007659 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304150264 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.309620505 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290421459 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.289696155 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293908422 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289744451 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287044445 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290446181 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.292404817 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293324103 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297847124 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290535736 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295860572 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310478946 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291753247 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.295109151 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.295100161 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298434207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292855598 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289599485 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290215729 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296502174 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307812134 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292000694 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303089073 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322823741 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.311660808 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.292431302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291280002 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289334898 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289630715 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.293202457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29112198 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.290622627 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291394271 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292217295 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294727021 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297566687 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292120735 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.291278673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291566471 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.29115007 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292228968 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289094564 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29159826 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291750845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292130027 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291978866 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292332897 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292895954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306249459 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321098108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292179244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292977284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.289895442 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.296383711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29713279 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306327416 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301513396 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.293477981 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293376961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294403364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292807896 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291063887 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294362661 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294852962 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293126038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291085971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306931989 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322449142 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297864749 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293655791 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294017135 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294399294 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295730758 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294499373 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293614807 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295723338 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295956846 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297993789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294197294 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29395119 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297946202 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302830204 seconds)
  done (took 762.913572183 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291743546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291790151 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292472972 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292664258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291500737 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29184923 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292587475 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291557713 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292547811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29258143 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292098941 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293073223 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293020355 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293652519 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292960121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292754455 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292933323 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291901447 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292497788 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293508056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292858809 seconds)
  done (took 28.354309304 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295551634 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293852933 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294176903 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296862787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293408557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294722398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294051512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297432597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296303894 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294638116 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296424416 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297783399 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294553959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294323458 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294555576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297055894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296004119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294018147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.296163059 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294171334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297716681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295784944 seconds)
  done (took 29.713300641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296925864 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.296697921 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296875111 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295236829 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297790784 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.295251218 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297875968 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29889294 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298588303 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.299508854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297637661 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.300150421 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.306113959 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303272772 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.300240817 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.298237942 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442376461 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299555166 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.298489382 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.298236519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296497286 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.303669529 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.319171238 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297384528 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298292916 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298726304 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299421126 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299329796 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299243436 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.300079098 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.30379016 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.300078355 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299202018 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301951049 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.299903805 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301264147 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303609361 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299819878 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297908351 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299594204 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.312180861 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.323410079 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299937268 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306222142 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.322560125 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.300650579 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.305896495 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309684172 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297713649 seconds)
  done (took 65.130700323 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.30046477 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299865189 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298423915 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300283026 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300883384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300879314 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300218476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301006287 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297897053 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298662701 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301900247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298651697 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297303179 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30079905 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301317384 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297358436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298005162 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298669203 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298112766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298554487 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299176011 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.30141096 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301484726 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299543043 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301157314 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298197266 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29885104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302522234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299396821 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299133343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.303021558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302631334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302327851 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299916724 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299873476 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303149791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.304799353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300293636 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303824913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299558088 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303599012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303491123 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303461513 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303160137 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300631512 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300984061 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301066703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300263411 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300951117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303751268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30330612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302125046 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30396771 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.30088031 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304138007 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304179876 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300627746 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301288054 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305020492 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302944375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302463624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304955738 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300257435 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.303083925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.305120519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301972589 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301504644 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304546909 seconds)
  done (took 89.703684321 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304515298 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303455986 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304108343 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305258865 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304466489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303669446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30424411 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303839096 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303733148 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304226161 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305477017 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306078436 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304699927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305418635 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306904457 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305808017 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305943381 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.3055658 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30588764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305024978 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.30567285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305067131 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305580545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304319274 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306116449 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30558192 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305550647 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304840933 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305916064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305773122 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30582842 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.305190579 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306115896 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306617092 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306349983 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306932368 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306730222 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307225039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305269139 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306676176 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306430228 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306073843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307774555 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306787969 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307991231 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308714972 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307828592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307983065 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308943944 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308416154 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307817852 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307055297 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307265614 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30843891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308073008 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307832943 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307567615 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307862253 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307939219 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308525745 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308908224 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308682133 seconds)
  done (took 82.211737949 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308031759 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308456642 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306056631 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305379631 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309327126 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306005578 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309004221 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.307822111 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308751577 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309478037 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308935884 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306326345 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306055264 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3085615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306258356 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30697399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30697865 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307133922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308391357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306999697 seconds)
  done (took 27.376064166 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.312963373 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310553469 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306630931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307648061 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310098444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307865529 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309261946 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309549574 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307293137 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310319571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310202093 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309872442 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308184715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308173559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310801454 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308595035 seconds)
  done (took 22.175770874 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308028372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310553682 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31105326 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310155354 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307718586 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30956744 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311492385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308945307 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309884413 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311665933 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310750161 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311829112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311494194 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311391056 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309605634 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312098529 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309655717 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309080675 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311089202 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311179577 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310236046 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310022012 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313292564 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31334744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309568073 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.310980949 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31100422 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310061504 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309564925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312720702 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310974699 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31088512 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309628251 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310036221 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311798718 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.310719518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313002082 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312748419 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312962814 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314091719 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31470087 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.31185385 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313827799 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313561417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.311992266 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314274042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.31219235 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311399035 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311801812 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31080591 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314091245 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313822958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314534252 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314259139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314471516 seconds)
  done (took 73.361578758 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315399241 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31523515 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311650871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313942295 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314055781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311235349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314524898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312685126 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311841509 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314464832 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313319833 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314478521 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312566376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315491689 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312984084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315319918 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312261725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312502404 seconds)
  done (took 24.875029399 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312162342 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313750036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.316106872 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312790626 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.312957031 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31640406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312058877 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315333619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316643912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313952066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312505213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31718993 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31495045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315726866 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314457682 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312683374 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316220106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31595005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313600313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313685228 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31777101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316353098 seconds)
  done (took 30.154555893 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.316379237 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.315130176 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.315003261 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.333904122 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.336785051 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.340777514 seconds)
  done (took 9.189610178 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326091593 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31845921 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315217729 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318225476 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317867688 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314494355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314990904 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314928019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316055714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31531203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315213165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31772701 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317820904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314414732 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318820128 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317960048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316318172 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315116258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316359023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318153454 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315733693 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31746298 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316404716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314514995 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316705917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315645956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318322336 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31739706 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315682384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31843975 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31923973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316298542 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318052857 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316214664 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319691228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319823635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316615055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319860174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319975286 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315927135 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318552942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319641339 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320242389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316459741 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319777475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317023225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317258475 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316463586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31741225 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321231776 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321032375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31824864 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320867639 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320889472 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320625586 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321158081 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318449511 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318070843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320081915 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318031293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318261498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321757159 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318114395 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318456342 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320182558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3183864 seconds)
  done (took 88.24401642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318823688 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318254569 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318962537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319663422 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31905927 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317645705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318580679 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319305586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318351117 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32002394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320660294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319966508 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31852406 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320483873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319988899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320174218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31950123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319395432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320270922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32218142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319090548 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319984162 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319685789 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318681651 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320860232 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322548515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320656043 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320868412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320517696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319704461 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320827255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320517283 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320294876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320671081 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321202555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32214445 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320541314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321375421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320651257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32438373 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32071038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32383329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321910141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321917379 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322153555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320140629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320954859 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321356171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32157256 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320814606 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321076813 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322501928 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32271876 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321714565 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320956693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322021833 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321295306 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321724079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322840136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324192187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320831127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32316315 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326164313 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321475753 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321811222 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322712556 seconds)
  done (took 88.416232903 seconds)
done (took 1779.783247079 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.304088472 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.340457068 seconds)
  done (took 13.884693172 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486580586 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439062397 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.323188206 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.369352731 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324032178 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.329856701 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.33242612 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323564797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323468389 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325034834 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324376373 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511917285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.317688517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324254944 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.323538537 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415877921 seconds)
  done (took 43.042952975 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.355328919 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330124815 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.45787677 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.355501462 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354334051 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.536030466 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.394730739 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.335188981 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.530752695 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.383862441 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.095340392 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355046951 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329503294 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.582264171 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349369671 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.536649987 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.608899246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.101418981 seconds)
  done (took 31.234075146 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.846208118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.365260036 seconds)
  done (took 9.453569908 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.358608221 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.331517707 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.355002566 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.347639074 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.366075607 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.408567251 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.339965147 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.338438425 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.375526738 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.385577999 seconds)
  done (took 64.855745386 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351285727 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.33478431 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330856051 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.328918618 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.320937769 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.322680343 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328799472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322098363 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.581519481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.474304959 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.356876242 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337303026 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350863706 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.332030401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32856007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36753441 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.510560149 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.35017645 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326542488 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.336963522 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330295711 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.476868204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.379450344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.337715469 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.475136653 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.59352945 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.334258407 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337335574 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.491100364 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.351486271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.331203591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.33136817 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.33354802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.915928759 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.812108742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.350134747 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.358681662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.341547778 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.329434003 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.539813638 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.353424795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338751874 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.325629399 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.791878549 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.493988883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.4566206 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.724151951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334332432 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333962283 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39916865 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.333308131 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.333801389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.364224022 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.134318951 seconds)
  done (took 113.007417021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.377371174 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.813150297 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499083208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.35285124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.250730488 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.200529572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.344809795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.6639529 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.394787582 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325687973 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.68765037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892469331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.353927343 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.378071786 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920737439 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335265632 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327871444 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.164170249 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.344411131 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.326674854 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767063534 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346549867 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.344531089 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.607687931 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36868798 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835928583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.03127015 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.854265479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.357014055 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.327763116 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857016018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.352769724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.405226617 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328417209 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.63026522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.73826403 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.722084579 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.350407735 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.327763833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.333073473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.347485802 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833564472 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.73603289 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.347401327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327090887 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857648377 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.348357998 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.337946511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.333974032 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543837389 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.307877358 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.33122437 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.01902602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.329121257 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.610254116 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391397582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35202045 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864684327 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348418418 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.557347894 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.385537557 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.328092723 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336665309 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329032596 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328676359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720814275 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430776009 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.332337686 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723328943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87373427 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.356096517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938676566 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.313999934 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.366913075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.386511049 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33109389 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.059367202 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883622769 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.399572436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329401618 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.70898395 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.350245212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.683938791 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.356973088 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331486109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780036922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.352649024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.355428275 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.335143156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.331123926 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.151086129 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332881816 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.644501193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.415314819 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.332056048 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.333233279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356092022 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33135505 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.331805985 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.336859194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911694098 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.350977094 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.66587783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.363600308 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331226988 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338448235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.333789376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.331676523 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563490148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.839979737 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.340421796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331891422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.332707821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.341394934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.536156105 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.338770104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.684820825 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.354632967 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34176637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344998693 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.234906077 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364745892 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332879071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.342165486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212314777 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.570413385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.36153581 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.334645541 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333778871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.36539934 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.867623137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334483504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407490331 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.338239202 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090996534 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.368099593 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.354551908 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.961406519 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.345507871 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334053989 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335765837 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33426794 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.665030283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.648847052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38072446 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.337145711 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.353343197 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.106107175 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.393842332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47980362 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35562546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313016638 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536577713 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.508791311 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33585988 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.893330025 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.336884063 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559286924 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341554174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.675786538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886436708 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.354567274 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339410216 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.093577793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050221373 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.939573437 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.34072117 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.700940263 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.346790964 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788893189 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.335523623 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.337401498 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.947667592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344668121 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.350902477 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.337127298 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.337909041 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401414865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515936328 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.207547645 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337078636 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.84559085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405929935 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34628459 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339687703 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33837716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.688714058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428805093 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.339229706 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.353005841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.337319589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342433496 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854112266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.351804755 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.346634365 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.496037816 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036279704 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.364794276 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.350891719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.029238995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.700091147 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893777383 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370324343 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.69185734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358914959 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.381527013 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.207892854 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.427452127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.897272293 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357695024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.338216811 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010779279 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.366178232 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.407016681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.340246401 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.340526645 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943295975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.365507759 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340580071 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.880499944 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338873927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596993771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.342707554 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35874167 seconds)
  done (took 1117.399059924 seconds)
done (took 1394.11467319 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.339313262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339777887 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.330001206 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.348254041 seconds)
  done (took 26.618021693 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349957847 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.345766588 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.348055124 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346448091 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.348553862 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346755195 seconds)
  done (took 9.348008317 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.717216612 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349078573 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.348099726 seconds)
  done (took 19.674947783 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.600728049 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.790200248 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.779843779 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.87326576 seconds)
  done (took 11.306610879 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346737874 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348006078 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.347654931 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349315014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.351416799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353335751 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.350776745 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.349116734 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351440344 seconds)
  done (took 13.407341593 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.907029218 seconds)
done (took 87.520111893 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.198710851 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.959726049 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.343632186 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.793621657 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.308979551 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.903737474 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.513491815 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.250196164 seconds)
    (9/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.108046364 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.62316311 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.599717136 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.426845911 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.384443556 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.369622496 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.410505794 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.343443703 seconds)
    (17/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.383493875 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.935731498 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394305983 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370626764 seconds)
    (21/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.560827002 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.787436013 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.792096497 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.752187877 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.474448498 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.012315802 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.344902893 seconds)
    (28/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.515307548 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.029529821 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.244795111 seconds)
    (31/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.35922844 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.178024083 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.343345726 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.918200673 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.344912761 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.234292687 seconds)
    (37/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.225305451 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.854791363 seconds)
    (39/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371013863 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.913810969 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.403459381 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.474504518 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.956633774 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.03852301 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.586103189 seconds)
    (46/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.836299152 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.038791469 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.366442921 seconds)
    (49/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.005827492 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.40506395 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.56829876 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.336001713 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.341232477 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.140221853 seconds)
    (55/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428414043 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.854788415 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.344845375 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457657956 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.164156599 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.625534443 seconds)
    (61/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.082447104 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.477737736 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.693498065 seconds)
    (64/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469932946 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.356417996 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.33729206 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.216345202 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40371231 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.127853088 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 6.347634779 seconds)
    (71/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.796167995 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.983683008 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.133278423 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.45785748 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.210905575 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373834097 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35364695 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.765736714 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.047182837 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.057052859 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.841122346 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.403410576 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.686954788 seconds)
    (84/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.741661551 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.537712478 seconds)
    (86/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.70372307 seconds)
    (87/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.432077999 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.452840756 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.361831334 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.271375198 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.340841094 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.375592035 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.659063062 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.347602649 seconds)
    (95/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.341200202 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.392103595 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.350953043 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.413377332 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375536934 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.0317453 seconds)
    (101/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365283134 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.327455236 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.582505918 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.370361573 seconds)
    (105/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.310192126 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.390962592 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.375836386 seconds)
    (108/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.106479826 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.361254921 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.272171761 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.353394056 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.563096664 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.193400984 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.127461243 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.478074447 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.482594418 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.663862978 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.396234941 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.349765721 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.432022619 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.419867589 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.893465947 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.343474808 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435647453 seconds)
    (125/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.1557416 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.279096518 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349996244 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.90030963 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.393519403 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.937492216 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.792728732 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.6247128 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.376622072 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.698913107 seconds)
    (135/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.379639652 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.246254362 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.443821314 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613695391 seconds)
    (139/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.649714018 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.435902586 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.329748428 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.474842559 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.98403903 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.840096568 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.435936911 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.449199533 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.240579623 seconds)
    (148/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.69472516 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.03537509 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.552203164 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.863407959 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.360785521 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.224336389 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37717534 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.35878753 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.371236487 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.019326284 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.240094297 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.401354805 seconds)
    (160/309) benchmarking ("sort", Float64, false)...
    done (took 5.761472424 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374476411 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.353752507 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.694346081 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.790017422 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.397326015 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372318268 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.075730348 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.400712782 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.943420501 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.385977104 seconds)
    (171/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.339138328 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.670684395 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.370388357 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.09908746 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.36202344 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.079005118 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.529731799 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.398677994 seconds)
    (179/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.351947681 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.888041754 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.497287992 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.495018069 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.370831753 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.352659751 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.115931089 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.378883383 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.558093894 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.914899839 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.592274442 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.480660423 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.367826196 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.380862336 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.601568083 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.40206989 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.471154283 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.380850295 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.789806251 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.13639088 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.431154714 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.400609391 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.549158547 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.399896888 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.400036569 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.357787883 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.343214012 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.88323547 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.412706346 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.371302927 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.054044445 seconds)
    (210/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.905424568 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.989323502 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.575472195 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.400129599 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.009458743 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.371740564 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.474259763 seconds)
    (217/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.232443959 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420447316 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.660186228 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.3954272 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.770884602 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.367776494 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.507804045 seconds)
    (224/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.87909945 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.356975 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.441158616 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.379267094 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.032276987 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387521488 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.746537372 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.397281382 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.356342575 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.461033889 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.873990791 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.734576423 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.376301866 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.337543873 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.415372483 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.439519212 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.678831657 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.394614494 seconds)
    (242/309) benchmarking ("sort", Int8, false)...
    done (took 4.392812482 seconds)
    (243/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.346551456 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.492465581 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.368170345 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.527657699 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.763305027 seconds)
    (248/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.782293697 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.376827323 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59321802 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.393856672 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.360297669 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.060105515 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.357906581 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.368105509 seconds)
    (256/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.790138878 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.991093683 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.426770314 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.233599569 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.363971944 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385737759 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.344735845 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.339598095 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.432183859 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.064597303 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.380305795 seconds)
    (267/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.737256415 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.771406026 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.162668324 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.356687463 seconds)
    (271/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359342736 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.358553172 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.764910558 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.810589374 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.485607983 seconds)
    (276/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.635011841 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.895789878 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.283322582 seconds)
    (279/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.417377379 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.430169703 seconds)
    (281/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.395615442 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.156333496 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.443010244 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.442681908 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.36077254 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.495310366 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.744826848 seconds)
    (288/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.565586961 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.214288541 seconds)
    (290/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.445428203 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.370164929 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.400923463 seconds)
    (293/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.085601236 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.433064104 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.186735781 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.369681673 seconds)
    (297/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.449215071 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.358360781 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.36187899 seconds)
    (300/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.036943769 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.403193403 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.394143377 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.186381061 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.470090925 seconds)
    (305/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.753024633 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390254903 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.2580261 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.241741361 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.209814702 seconds)
  done (took 953.746186198 seconds)
done (took 955.006398654 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.39458476 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389068008 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372061786 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.394001105 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485787363 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.399478436 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.384833515 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.375478805 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.420678386 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423284632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.372588713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.400878276 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375426791 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.37341048 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37455669 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388136211 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.563240016 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375898032 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.391288062 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384575273 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.39022247 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.372735717 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.424939224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.399015576 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.378578955 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.37723472 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377194723 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394444583 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486398533 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.376708107 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378132787 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385994442 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.565024774 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.373626602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.370665805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.395722251 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.38659791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.383325811 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37999455 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407942098 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.037303302 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.394915049 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.376548601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.375560424 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.376393095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380953778 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.378064586 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.382655333 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389323145 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389421285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.023642159 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411618868 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.38057807 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37742263 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38725048 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376410054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.381802944 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392818319 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.397208137 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392516183 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.553264354 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.382481028 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.379196151 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394728612 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385936548 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.061225937 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.393072943 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382763397 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.035414117 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.402998996 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.060811369 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40768498 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.380231 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.39261001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.410088015 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.564624945 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.374284243 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.377971586 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.386238383 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.377955291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388096969 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391658751 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.383556059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.378788494 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393515765 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403396078 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.389230907 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.38004923 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.388154285 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397809104 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38620682 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.390166702 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.382270709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.374883403 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.389410458 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.382561218 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381795608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383008253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384250429 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.389765254 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.033356105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416977523 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3761296 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376485532 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.378671402 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.39392778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.033093417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.40214857 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.40399579 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.42897904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382849997 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.556700175 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.38383679 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39748808 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.389449055 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383846581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.375702081 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.554758243 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.027656772 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417029987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.383912797 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.380507276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396231655 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383618027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.377539791 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.56892221 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3841247 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394629892 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.502978965 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.39257497 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.413530051 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.380439405 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.385667529 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.411489922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39821392 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.413484522 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.38516959 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39798569 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.39791687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.377951376 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393704733 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.392361331 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.382862211 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3889963 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.377123664 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.408071507 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394558771 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394034949 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.40290015 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504421236 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.380316555 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.557020115 seconds)
done (took 235.391182604 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.441161353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.378862785 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.465111215 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.378695357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.482530449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481696571 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.375300313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.376769286 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.376825527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.758340288 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.376921335 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.377822252 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.379461944 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.377882632 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.461793854 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.381145876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377466335 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.720271621 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.379540973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451424216 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.376625712 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.377777248 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.379847951 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.762973119 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.377781519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.378124716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.451937425 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381590556 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.729045757 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.382149454 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.377786567 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.727974451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.471430331 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398449938 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389954058 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.388488654 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.485619581 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.403950418 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461024098 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461437277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466953934 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41898637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.373963568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.378831067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.38369547 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.382824321 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.380124742 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408590563 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.380155077 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379275267 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.724350908 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.391761428 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.390571132 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.379404022 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.381039208 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.403760043 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.380264075 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382850357 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474105208 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.384620916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.444496423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.766188905 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.760151007 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.382632876 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.380436284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.381278879 seconds)
  done (took 151.616061515 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449994734 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.455748896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505087682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402926505 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435145336 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509620817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.404882505 seconds)
  done (took 11.457315443 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390423398 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.384687057 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.434559194 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433360504 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385712539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531764707 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38484241 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397213965 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.381635647 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.437393837 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.386839981 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385807727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.391338369 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.383452883 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.43295246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.395339902 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499416395 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.386053934 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385043709 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.534951047 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383289506 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.391131367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.436438695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397247922 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.38641604 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.390663948 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.95111855 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386514291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383450048 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.386156429 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383843356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4238477 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386128824 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.381567939 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382881398 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505940759 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38567747 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383729328 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.386754305 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.384957915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386343555 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.385336786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386509102 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384754783 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.387214452 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.409713802 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.385933789 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385952578 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386179207 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387535927 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436862557 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386891428 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.385057229 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.386423626 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.44281592 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394375648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388254232 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.38600794 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389871926 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384644291 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.53844566 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.437188752 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.386610955 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.434970586 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389396917 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387336877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.388614373 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.389272157 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4421809 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388383735 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436403727 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.385732338 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542898001 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410767138 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389290907 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.390417428 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.391469727 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38826291 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.388411948 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.395722591 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385764725 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389721697 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395478917 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385702367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387976323 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491096178 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.497585871 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387141491 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.402411889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.396854362 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.386104921 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.442136149 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.388637428 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.38680696 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452378582 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.504864978 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443431034 seconds)
  done (took 158.431441135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.393305595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396586279 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.390818963 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.406550325 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.390103534 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390440517 seconds)
  done (took 9.668126816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.395195269 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391760033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39125744 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.390270432 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.390682515 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3921819 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.391373154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393162363 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395360601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392148061 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.393023632 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393562376 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.392718615 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39168993 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.390945966 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.390655736 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.390924137 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389276983 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.392583903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390888912 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.486870772 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.39201894 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393176284 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392804128 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39726411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.391033969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.401173893 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.393381283 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.392591341 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402135477 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.416344417 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.392631035 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.394715103 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.400716265 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.398359427 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.395305825 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397917879 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394203268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391019438 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393926917 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395387421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393824534 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.393432975 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.395532275 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.397202922 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.400243484 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.400315079 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402155402 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394088786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395728389 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39538701 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.394930356 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395741054 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39546886 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.396037579 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.42093779 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.40058754 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.396051779 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394689968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.395784404 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.396782762 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395351316 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398673739 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398348811 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.40192666 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395603547 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.397340444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400016777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395552877 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.394855791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.396077955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.393345028 seconds)
  done (took 102.878075298 seconds)
done (took 435.338857039 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.570840823 seconds)
  done (took 7.875986053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.627155352 seconds)
  done (took 7.934106738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.885546179 seconds)
  done (took 25.195846519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.448767348 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.4266411 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398401942 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.416021987 seconds)
  done (took 26.996912963 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.683848858 seconds)
  done (took 7.988100764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.38633945 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.395584365 seconds)
  done (took 14.088691887 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.652836618 seconds)
  done (took 7.957664879 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.086638689 seconds)
  done (took 8.396798368 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.392221131 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.417461995 seconds)
  done (took 14.384936864 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.367540082 seconds)
  done (took 7.673214426 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.77288953 seconds)
  done (took 9.079198094 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.394476438 seconds)
  done (took 7.702229009 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.467159004 seconds)
  done (took 7.772884355 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.548424168 seconds)
  done (took 10.853901766 seconds)
done (took 165.20467602 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.38833361 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.38909491 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.388535991 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.389362414 seconds)
  done (took 26.860621719 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.921099156 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.429431464 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429913644 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.440598676 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.433178344 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42849549 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421179164 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.422380759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.44103446 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43266708 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432092249 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432099088 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.430936877 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423209604 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432148709 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.432870691 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.442375374 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.431788702 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42244229 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.433356958 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.399207749 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441273253 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.434626652 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.399365279 seconds)
  done (took 36.095573336 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.91974173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468879823 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.551732005 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.450741934 seconds)
  done (took 7.698555992 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.449790933 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452640955 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.462808054 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503429668 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.529290664 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461723397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.425870086 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.421022746 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40647773 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452013567 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.528543992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.468942611 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.54621866 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.399813696 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.606770696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.398924624 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.398960735 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.452014901 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.503456287 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52019879 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.399536543 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45036139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45864895 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.46788081 seconds)
  done (took 36.473137678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412258179 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405885406 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.398739558 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398113777 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.422016345 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.399394062 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.399565833 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.399424672 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.399108593 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.405340294 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.397142066 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411393068 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.399689857 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400820207 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404051129 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.400781733 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405778689 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398522567 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.399438445 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402229759 seconds)
  done (took 29.370095292 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.392429162 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.246518384 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744584197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64922512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.393991856 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.403167503 seconds)
  done (took 28.140377976 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.485054077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.666194505 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.402418972 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.829217509 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.924473427 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42156804 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.401204329 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.688539746 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.07596371 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.085467708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.474457156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.483918135 seconds)
  done (took 21.251935768 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.395335015 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.395034572 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.406376738 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.409714028 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.465452953 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.425381638 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.407547561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.395794205 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.474198369 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.489892946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.427199395 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.467319518 seconds)
  done (took 38.472158925 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481817926 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446128621 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.55502494 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269710573 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12191512 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609116501 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317591371 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850789543 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400040493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669367927 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408330561 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494663544 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655879671 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406934724 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405232022 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.534448115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646145739 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963918916 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399601854 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.948997801 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430467353 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397690905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088632342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439403629 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609669131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382397957 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.659676184 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173557369 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744335861 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418457831 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408648746 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398551227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672808873 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12588933 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515838073 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408772735 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298560008 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947067285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.381854951 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.968598246 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424996197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409227908 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410742989 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399143541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334458723 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404652039 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864685777 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405499573 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.110898742 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400287157 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411517925 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495409416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403333858 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.973009697 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494039513 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406416799 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.396925276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406832208 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973579022 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.595192227 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424661256 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.343768724 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.91048644 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955752476 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123042968 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.523625466 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403566202 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404368206 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33634492 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041211356 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425483928 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540762249 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.427755829 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063180881 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2052355 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424820973 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36176271 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031138809 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406985765 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.343894489 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630748331 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178817707 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341756031 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.34807975 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337462176 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234828153 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41102323 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.942355125 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410357452 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.856558076 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414808415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42116803 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426495135 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628239211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.281650015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402816279 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.409203541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528606652 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425454538 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856267902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338924729 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.407852072 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660575241 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.615569113 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402718706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.567992118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654916741 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416996371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424916094 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407449577 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422800669 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.071004809 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436992075 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.585168907 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429535452 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.180452338 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273916144 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405589875 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.533296658 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413151758 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691399361 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.283211933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288261157 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472261641 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407648279 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405412995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088679243 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265956862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286936785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.401353175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405201301 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425743448 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.405351077 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363681322 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.420717803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405664392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.191690935 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630461251 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417588444 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680513372 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341004371 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54452422 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421931009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.630253022 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.810867426 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.434858272 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669300451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417669829 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420748359 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426437109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426313629 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503571752 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429397034 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.424912245 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675134334 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409923817 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410154688 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.113376749 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.194853128 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410547415 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.414686507 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328767617 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078646434 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400316347 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417846039 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302585649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420911778 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476353984 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413732122 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418913162 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.604430538 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457969448 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413468388 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.408722693 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632520806 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420183913 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.011006146 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495461548 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.632260134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081315966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443917421 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.343699688 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.119019505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.102604477 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409935767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.612450903 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410032571 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418142687 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418892578 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.094682066 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080335502 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431804337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019462514 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.422550437 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421490619 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.414444387 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41062876 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.616454182 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.66333685 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419884739 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.431516461 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554099206 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.425098267 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346221119 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927047171 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417060873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411551265 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.18960689 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445533449 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0126562 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926457861 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674143245 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.269964633 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424807835 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.234816173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45898346 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414944797 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419903417 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42680831 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.427521887 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420806498 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422730829 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.029862609 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870497894 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984205916 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226360013 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060722752 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500908302 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.421242328 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31011072 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876470549 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347595321 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071704593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633629425 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.893505574 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368756647 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637096425 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.793948038 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331611982 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424024075 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642406659 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475736449 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424260045 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434207028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624726703 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447461731 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425539193 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350416789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.693836686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673285414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417193568 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501635772 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885693362 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414251319 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.219960864 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.414184374 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.923828781 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634176953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96247153 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808077791 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.422593622 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421709343 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927758527 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422688128 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945060889 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119267109 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437745296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.64900789 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35566091 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4288538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.425533957 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.41000552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.048474227 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414375116 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.672317532 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4263589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349519498 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427007313 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038701676 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.292529377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.42232283 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417552288 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293536673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417898265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761781904 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.426537043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.543431357 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439354753 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.350259184 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35075396 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.109383524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418049607 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386188756 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003627529 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.87517668 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500533354 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443024485 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276008695 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675253929 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.432443524 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107388265 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674188899 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.390761564 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440893109 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.516977271 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4259537 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.408581675 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301118537 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655215495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333692906 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643836203 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.608538124 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.319048343 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417993063 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631629874 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301699075 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430854682 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705835688 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.151658235 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.432886258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22290117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465743894 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437425505 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446684255 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.929150784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425812296 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490580693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429811441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430352312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.430177414 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617616904 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420309322 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454878177 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43345991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513773618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.675107758 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.55242857 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194617524 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101399523 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267979311 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119268704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453713007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421418557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430537364 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354830933 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568644623 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950173231 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693498006 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541114559 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.018261713 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441908808 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424943208 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448896608 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639977011 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695539343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.296657815 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432755846 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084002695 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.579514397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432477753 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.633616166 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010598804 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074691542 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553553307 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419739262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906361599 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696677766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.514665222 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42093832 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015738826 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.447519789 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.931804901 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.451553897 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429623725 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578752829 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431816119 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149642699 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.454375839 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.579934001 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.197097037 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157638581 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690338135 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.015211834 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.433288264 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102337557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293684913 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699057537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492250062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435135996 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.529732378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569485202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.421585824 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.336044417 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423954579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270028575 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.13446834 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.433530079 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105339764 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710090819 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.421316003 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.423604662 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447669236 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.435831506 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.649043826 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255572775 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651042366 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434176337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426713646 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.417519955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105316606 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45830088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359376372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.429120265 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701455664 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683877796 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45012566 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.877885013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.135538827 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063002596 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401894236 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446672929 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43505011 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268414918 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11717384 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.58225236 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019163846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087553664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429646747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708316503 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.430720553 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442532033 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710619601 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.430084832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426765506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448200812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.106144172 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349135669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.452533874 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.10184154 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.371791605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.655956385 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16020465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366157383 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43686394 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.631910112 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42871525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549561469 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43923186 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.443280124 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429811462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.168460455 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711423949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43314738 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.43127076 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.422368388 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437560738 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444783849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693043505 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435471244 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.109497367 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.779659682 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686241848 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438952618 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.418300334 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.431446799 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429437796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153472911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406177365 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.116460532 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090602547 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.439353081 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.4490326 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432961747 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.647426937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641651236 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447908081 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449323209 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428022927 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47245263 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.329368734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.201761756 seconds)
  done (took 1647.450913262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454342665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.484380942 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.449792179 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.538228038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486618847 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.577937277 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.513199709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.570125081 seconds)
  done (took 53.418572606 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.432018583 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.593204676 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.463756216 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.437448787 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.439526155 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.433272121 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.970826946 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.465387762 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.438421121 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.440760923 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.444713259 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.445393198 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.196225187 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.447511268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.438612673 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.433664572 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.438967962 seconds)
  done (took 67.308717359 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.445857164 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.554772491 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.483587424 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.433536619 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.638165328 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.453786983 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.378640571 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.486469567 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.446181629 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.713007749 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.09216544 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.459362686 seconds)
  done (took 82.931327562 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.439675456 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.440686692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440613302 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.439740521 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.440305849 seconds)
  done (took 8.545826085 seconds)
done (took 2085.322345884 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.827327977 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.296120697 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.178535704 seconds)
  done (took 5.820677867 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.579945387 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.62756221 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.799942735 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.755302773 seconds)
  done (took 8.108277097 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.717891524 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.816982454 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.617229398 seconds)
  done (took 6.497635633 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.12686128 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.433822932 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.567141069 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.434613295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.44078831 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.441970223 seconds)
  done (took 20.664199893 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436868024 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438345779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43639777 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.439313063 seconds)
  done (took 7.098326293 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.413090882 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.140939817 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.414799823 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.438738724 seconds)
  done (took 18.75295227 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.184276599 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.19810272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.180004583 seconds)
  done (took 7.909242568 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.439226215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.284495325 seconds)
  done (took 10.070470271 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.751499655 seconds)
  done (took 3.098117875 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.570140505 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.766395759 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.64505254 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.580147234 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.682330186 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.079611448 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.424340548 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.915418462 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.554206877 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.197720699 seconds)
  done (took 31.763670741 seconds)
done (took 134.082494098 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.898259292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.457429636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.635728435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.869041427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.667710163 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635358749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.726675766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.835287064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.379774409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.367288545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.87741924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.667523294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.671870633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460210827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.672027513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.459143072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.666995677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.945690157 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.438303417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44604265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.72852409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.507840107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.701445788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.527406836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.669690732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.588796224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.089366122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.459834261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45139136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.105429224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.59073433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.450284789 seconds)
  done (took 201.997196491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.435520411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.468284425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.435435214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436713455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.469141507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.437167473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.458416215 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448836785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436435531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.465029301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.436919569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436293518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437335746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.457143619 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.43589095 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.437080354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.471017299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.437292767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437421246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437525972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437845301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.446625361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.441991572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.453165208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436379583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439346825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.435765472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45519466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437502373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446075335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439100791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.45112645 seconds)
  done (took 207.586430941 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.438516643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437241755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.457530148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.458008347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.457056437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438598485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.459233346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442406185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438686225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437946854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.457739207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.459707335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.441444299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.439132389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.440705723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.45028513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.439515202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.450069828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.453608765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44533331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.441171793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438434118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.437628148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.446700014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437629722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440268294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.46411686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.438806289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.460473925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.450673677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439930478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.458327879 seconds)
  done (took 207.650831237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63638213 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.447001167 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.448030988 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.381329537 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.4514463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.447835716 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.442886036 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645502218 seconds)
  done (took 15.255437351 seconds)
done (took 633.836172554 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.966240764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.65904539 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.660747195 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.469692485 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.335642727 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.489616832 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.468716309 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662773718 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.428109478 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670271086 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.835944953 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486508637 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.993317951 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.467899124 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.755320023 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585433363 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.418316246 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.542565174 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.830760427 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.151110716 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.769811104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.068078022 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681698568 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.417961721 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.013769291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.056867195 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.345431451 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.392030891 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.488259299 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.831811549 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.336054985 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.611874932 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.543239002 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.539818545 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.595040085 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.578172606 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.58861689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.539140191 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.688532958 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.81041836 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.099298935 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.234379596 seconds)
  done (took 99.464141468 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.432093559 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.433144519 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.431603028 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.432622429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.432668115 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.433987988 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.43222309 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.432176111 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.433806284 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.432245741 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.431533978 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.434862029 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.432534726 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.43329885 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.43304973 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.434371505 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.433374129 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.436077777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.433069751 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.433493217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.433620561 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.43278788 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.43450607 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.433038506 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.433525808 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.434339379 seconds)
  done (took 38.62223719 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453222936 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.730150897 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.910488706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459959108 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.45297457 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.457105132 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.547028365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.453491133 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.456738437 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.456825784 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.635894616 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458176554 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492443674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.942677565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.455929574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.455446209 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.454144591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.453824332 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.738219075 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463205496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.573127755 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455222175 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547012217 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462684766 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481205452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454561988 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.459597876 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.00132388 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477673055 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.639556142 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.438553248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.552710662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.944376235 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.944831577 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.440228125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.464095305 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454707265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641246415 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.457619437 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456193672 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547817458 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.456126669 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921758754 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104947414 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47833768 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.456880132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018378645 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.667561428 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.754675965 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463411967 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949415826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.45883263 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457927484 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457211813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.765848835 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.473283071 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.457482956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.030337321 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.48298275 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.551260445 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458260136 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.458246466 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.746865536 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.457723784 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.734044488 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.459267967 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465812493 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.481875485 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.925150497 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.461276614 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.128758115 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.479937807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.458598023 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.640550383 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.734342743 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.055607309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.484154517 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.749036835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960675022 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.571034652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463481525 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.984995908 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.574818623 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.462687548 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.460061009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.46107548 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459345727 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.502668443 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.548836095 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.060836292 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145720002 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053971791 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.57497325 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473018757 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460086761 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.031917987 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481250232 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.459012078 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922218374 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.128146706 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.482149609 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.468479926 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.136140281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.484420613 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.553549351 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.463428579 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931914897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460371243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.505470913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.459193632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.4668745 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484956676 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.554738339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463383718 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.461139948 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102511661 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.670900621 seconds)
  done (took 192.361600914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452349911 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.454525969 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.453005112 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.454069706 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.453179666 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460221457 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.453603406 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.455077665 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.459572586 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.454369871 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.45579878 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.454712693 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.456505012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.45591165 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.465540608 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.461185723 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.110425679 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.455739449 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.469131752 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.454185629 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.296374418 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.457103267 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.468800332 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455215023 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.455822813 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.456064076 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.457966007 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.456714234 seconds)
  done (took 155.66106939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.463883233 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139868463 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.484106585 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.620114098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.487084872 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.460733352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.618980447 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.531802859 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.485104449 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.460979141 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.460908592 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.825032884 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463641049 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.081261951 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.695755445 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.640590436 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.081680058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483725245 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.461728134 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.462175182 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.622185733 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.470898977 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.853746138 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.205232853 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.495670446 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.195093647 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.457017321 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.465202591 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.463000701 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.196674633 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.492524368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.853232492 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.565522128 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534628779 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.214393423 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.114238499 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.104886968 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.65162405 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.472498363 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.4635581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.462055484 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.449922596 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.197366447 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.496982036 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.4652543 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.186697767 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497857536 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.465922512 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.474589474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.462011006 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.536415871 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.558557525 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.879279543 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.211201698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.588188443 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.485487497 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.622744272 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.845127617 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.467618223 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.086051017 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.448075846 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.20276299 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.496298527 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.450122362 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.466311175 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471678847 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.645824955 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.626196922 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.086386445 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.488176631 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.086677876 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.667802572 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.466436152 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.465943849 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.468460037 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.150272638 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.109533514 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.668023142 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.626635175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.704026727 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.451575785 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466668136 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.451424662 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.559903472 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.466726166 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.203094877 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.111187137 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.49069145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.468415346 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.469537479 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.469714082 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.682249866 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.190120713 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.590545036 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077034329 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.879945741 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.863021853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.477872879 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.539069389 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.48769538 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.861517089 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.478132305 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.537284788 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915031508 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.838315865 seconds)
  done (took 177.93717377 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.753114063 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.89432549 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.571957573 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.617260678 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.112518284 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.078572337 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810386336 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.634585787 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.593947057 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.758787527 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.8048582 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.557037933 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.671884635 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555153947 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.288389305 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.570659389 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.592678787 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63911477 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.600427115 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.589537033 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189355873 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.791948477 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.675444864 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.589116663 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.57289583 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.379711293 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.088679953 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.056141985 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.668824976 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.968829679 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.041084991 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.708325744 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.542389247 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.242290309 seconds)
  done (took 71.585083356 seconds)
done (took 736.983027546 seconds)
SAVING RESULT...
DONE!
