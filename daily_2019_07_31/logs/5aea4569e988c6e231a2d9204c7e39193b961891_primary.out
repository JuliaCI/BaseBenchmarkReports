cset: moving following pidspec: 4736
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34003994 seconds)
loading group "string"... done (took 0.536412595 seconds)
loading group "linalg"... done (took 6.70297012 seconds)
loading group "parallel"... done (took 0.236257606 seconds)
loading group "find"... done (took 1.10432855 seconds)
loading group "tuple"... done (took 1.686548036 seconds)
loading group "dates"... done (took 1.166650784 seconds)
loading group "micro"... done (took 0.219567948 seconds)
loading group "io"... done (took 0.971764237 seconds)
loading group "scalar"... done (took 36.367145712 seconds)
loading group "sparse"... done (took 10.933718469 seconds)
loading group "broadcast"... done (took 0.91042271 seconds)
loading group "union"... done (took 11.771300786 seconds)
loading group "simd"... done (took 4.13906643 seconds)
loading group "random"... done (took 8.485452534 seconds)
loading group "problem"... done (took 1.87103396 seconds)
loading group "array"... done (took 19.864233706 seconds)
loading group "misc"... done (took 1.675086829 seconds)
loading group "sort"... done (took 3.094880349 seconds)
loading group "collection"... done (took 16.564985907 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.477066401 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12045459 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113545045 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116660654 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138281407 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113572826 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120724668 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081855974 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.78462951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136998612 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116510038 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405561446 seconds)
done (took 4.88578573 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16979328 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080176874 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079732349 seconds)
  done (took 1.273896669 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06428361 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119265732 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065347509 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065534753 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065354126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064666234 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065143852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064972331 seconds)
  done (took 1.62534076 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0712459 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069535155 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067257023 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069665862 seconds)
  done (took 1.395382827 seconds)
done (took 5.654533868 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749605499 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19707773 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180155388 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.38688172 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.124104963 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160010926 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633503284 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.298646231 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.179418427 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07876747 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100598254 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315661616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104906725 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637481902 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075324776 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088233442 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135268546 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433067995 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06569365 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080720222 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087541145 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12636545 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083439422 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073817877 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140265466 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069651526 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126852764 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079171465 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06498437 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204167144 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171474961 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651734405 seconds)
  done (took 10.058353243 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094454687 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095862517 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067293051 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121356874 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093844949 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068390936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069532488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065615304 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084614752 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125485136 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086561221 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098567897 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064039899 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067326057 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082777247 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202026257 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078596219 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079222662 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06911053 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073435685 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103470807 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076520073 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075842149 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075803096 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126867912 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178817052 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096968738 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096135549 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06533012 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078846519 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113640238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123992406 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063898793 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06522788 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122054743 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093342372 seconds)
  done (took 4.496720348 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.887887706 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136060906 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088119532 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157653733 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065810302 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104194743 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063635762 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082048353 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195019812 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.04405847 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.427177296 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108663904 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08293079 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066309846 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067176371 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106942809 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065127071 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335776218 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107338527 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110699108 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064025474 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082537394 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072557671 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067561801 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06606301 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065500471 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066971281 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.099385174 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.297288838 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110881197 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067164747 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962364398 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113898617 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065679031 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098864656 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160525772 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084781679 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130301536 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063593954 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063261775 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14387461 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07150392 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06388256 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.07975837 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100320465 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099467365 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.194631449 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066284842 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158971198 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065159951 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084044614 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063075396 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.694194785 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152425175 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074249701 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065758854 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.240916531 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083976936 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065359206 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063455327 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.168581714 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127684206 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066301713 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06596156 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064725824 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066938718 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348344222 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06534503 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.716199272 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069007699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074835628 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067975202 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065873549 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071266913 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0712087 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083625428 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064804683 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066121691 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064441987 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064503998 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06774546 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082823412 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187257044 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064796119 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066187667 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063396887 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084736243 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099118566 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068062436 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063945998 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098955742 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066283386 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065863133 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099419237 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065439393 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082325125 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067379461 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111406393 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064736428 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083676916 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064943394 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.093797368 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066545351 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097641985 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062487317 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.075361513 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158780897 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.212999916 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064028141 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06357845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065963945 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066666467 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066441715 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067149521 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077632828 seconds)
  done (took 19.543532355 seconds)
done (took 36.102039681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270634389 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073017417 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073177663 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073278244 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073221837 seconds)
  done (took 1.761763761 seconds)
done (took 2.941197259 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117299204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09695035 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063163852 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093374616 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062967631 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097987766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09710832 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079674647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097523794 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063085504 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094580344 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062703333 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062872478 seconds)
  done (took 2.287635283 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080689503 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081480216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067738476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080340735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062327578 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080772619 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079254315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086472439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079391998 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07058387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063270425 seconds)
  done (took 2.006568463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079752817 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081773149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067997453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080652543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06288202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080291865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079077537 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083709121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079654913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071588535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062372994 seconds)
  done (took 1.9989941 seconds)
done (took 7.463445507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075779128 seconds)
  done (took 1.239319635 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.575356282 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.995263384 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079279878 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109588905 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180257205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116235854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271045366 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085274318 seconds)
  done (took 8.75513819 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100028913 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067535747 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070211846 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069388122 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067286479 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068147449 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069794578 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06792858 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066801509 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066834274 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070504288 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067786178 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070473192 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070748404 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069310081 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06731849 seconds)
  done (took 2.361930956 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090323777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.088837157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071729835 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072954107 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070542764 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070558435 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072837842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071751019 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069626135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070493112 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073346128 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071920035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069838567 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063372466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072655255 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073699176 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06941278 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072558804 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073456329 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073592546 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072890353 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062912119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069902468 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072071087 seconds)
  done (took 3.006608509 seconds)
done (took 16.53529548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108661942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07015069 seconds)
  done (took 1.347106038 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079060615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080648585 seconds)
  done (took 1.335453823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080783948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064195484 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087139135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075772995 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064878561 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064404935 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084936055 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064806579 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064785768 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065102117 seconds)
  done (took 1.893528123 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066421384 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075443897 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069087658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079005646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07183566 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062829605 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070730307 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066128446 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075261049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061629546 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069448761 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080335706 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069415454 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081536287 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070686299 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066779174 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06914109 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065436097 seconds)
  done (took 2.449216128 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06435213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065634304 seconds)
  done (took 1.310737235 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06615196 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062228338 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06551326 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064612294 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062733763 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061387212 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062319996 seconds)
  done (took 1.622156119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.369214344 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108978806 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290689214 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069378531 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080313466 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24728867 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064404378 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06918123 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06922617 seconds)
  done (took 2.588596336 seconds)
done (took 13.729796168 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077655464 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083750976 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093231255 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336445628 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090602655 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064901538 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112704937 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186296806 seconds)
done (took 2.238430832 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204091033 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.558468738 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364369942 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.191556771 seconds)
  done (took 2.301833668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311672617 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090411936 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058300064 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065554567 seconds)
  done (took 1.721547409 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065189693 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067196339 seconds)
  done (took 1.324283609 seconds)
done (took 6.743526879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081484897 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064871945 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064350878 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062723027 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064396741 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064588155 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062135994 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063651018 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064571297 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064681833 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067188425 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062482371 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.06496738 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.064430547 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064748933 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06223622 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062114939 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064188946 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062664005 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062025455 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06223903 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064257598 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064219736 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062238172 seconds)
  done (took 2.772293774 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081591822 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065546246 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070106318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070106689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068893421 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070084776 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069136684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064954322 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069755156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066994723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068208461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068202431 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06679205 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068890587 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06651452 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068696777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069608563 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065188152 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066809075 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068750536 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069683107 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065030991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068220054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069668932 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068184596 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067797804 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066557163 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06501054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07001028 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067974249 seconds)
  done (took 3.2527201 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069138244 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062296371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063307936 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06893009 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062825882 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063407762 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062231658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062534128 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062916752 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06232943 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063758604 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06227159 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062497038 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063226233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063727496 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065990579 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07717988 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062978392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062528061 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062866626 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065721638 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062280763 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062533716 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06224805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062196996 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061988194 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062587174 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062263019 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06306474 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062086004 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065460356 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065501726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062235394 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068882758 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065529828 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061929933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066089978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062081167 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062688012 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061970522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062201976 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062114394 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062972606 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068797576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062411004 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063892557 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06321786 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063343492 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062832002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065101979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06171951 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06215423 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063902535 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063541139 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066015858 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062102896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063160518 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062337171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063700736 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062265645 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062151199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061756698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064451468 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063060155 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076554243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0688203 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062133977 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063753468 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063207862 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06436692 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063567781 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074707202 seconds)
  done (took 5.82115854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089265629 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.193690319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064173874 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064316719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060910297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064431843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066114813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062805 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064015143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068083511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062833669 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063727395 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064083653 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075534845 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062769395 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06407029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06859559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060795375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063054023 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06590612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063113112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065887567 seconds)
  done (took 2.79228545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151190222 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068517338 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103176432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071778133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065918967 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071135534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068154659 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068558486 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06877049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066658845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066874072 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06899785 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06664052 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066522076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066517145 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067042608 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068737617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066989997 seconds)
  done (took 2.549057843 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075913038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065353981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084763781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06555942 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06483192 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067117901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069549825 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072357323 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067065225 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064850692 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072865405 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067098377 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066969429 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064608255 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067385 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064796887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067313082 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064459794 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072372612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06917338 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0691526 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07224392 seconds)
  done (took 2.724398965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078410462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066868947 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081189389 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06803646 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060940627 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063457988 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068936354 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064907226 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068954011 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066362276 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064927927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063311319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068103574 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064665702 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068080489 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064736638 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066660723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064731838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066706616 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060771404 seconds)
  done (took 2.550799102 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084064645 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066811409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066409291 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073705547 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066439702 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066422278 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073820123 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065963631 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065914376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085618609 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06571691 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065868526 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07368253 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070358134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065820759 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073472483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072731208 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0728986 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065929969 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065848133 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085624419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065982245 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073177013 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065872716 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066191272 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065768173 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066045006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070812592 seconds)
  done (took 3.179368685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064927758 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065014545 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062220292 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061871993 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061938403 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062291476 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062312446 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062529056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064662893 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062275741 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064653745 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064654792 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064845626 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064594852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065266746 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06465645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0646479 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062172856 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062049306 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061828342 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064603434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064817961 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064553128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062301439 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06202568 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064764167 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062359306 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062444801 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064313392 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062333803 seconds)
  done (took 3.119192673 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07406912 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071349472 seconds)
  done (took 1.361007603 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061895814 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078519231 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062555479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06905654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068453254 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065370599 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071680149 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068729689 seconds)
  done (took 1.75539956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08048131 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075977668 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065995 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078776222 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074745405 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081506818 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129939173 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066017069 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072037705 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062902368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07811826 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064408614 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070752196 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065133377 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070654633 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071300916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062587343 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070662935 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067257737 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063613994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066147164 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073291886 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067069221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060330184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065793002 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.085853877 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075452091 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064280773 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068047841 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072314291 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07028443 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059115363 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064913952 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06527355 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062587036 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073870259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07940001 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067766509 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073883106 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065810855 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075253206 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060456467 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069349541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071485312 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075120786 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065558117 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065772252 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060277882 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0631468 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067175556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060438207 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065075966 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059762853 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073931196 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06868188 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075602574 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063747899 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066158707 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067486724 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068122817 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071400598 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066774968 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067167839 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064557027 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074650051 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069378368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073846881 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059902832 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059025868 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062940003 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074067644 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087569978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070837133 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065685818 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065953449 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062842276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067903087 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065675585 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070408082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071054642 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064870197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070051644 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072572546 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065500956 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067798219 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072921394 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063294604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068079675 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063101044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081019804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063675174 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062960751 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06300426 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075486643 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068346159 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064463927 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063165585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07161021 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059317215 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065325421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06593396 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06563264 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074464749 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068083974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068128275 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072483999 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071028425 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063904801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066368321 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060967344 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06484284 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063150468 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070576178 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058299442 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066472637 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064854551 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064315795 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197202802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064040062 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065303541 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073852699 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071324306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063664138 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062125795 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068133493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065077369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068501559 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07292571 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064235061 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060602771 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060268976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069420604 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065043987 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069857877 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06997061 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067750652 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060339779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063402565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070339454 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073407325 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066197736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06732885 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071274737 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067436676 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065045403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072292492 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068724073 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064776166 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071406522 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06678266 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060972718 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067845831 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068588412 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064193379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06884837 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068860999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067686225 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065902187 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064394208 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072355882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066080971 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065002705 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065045814 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064305295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074944724 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067565985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06055958 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063183965 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074334427 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063265396 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064959916 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06450248 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06738571 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066465875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063715695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064574714 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067664063 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075684046 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069613861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066717198 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070724209 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076374319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065603218 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06807438 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064387785 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065930786 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065668718 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073371038 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070475876 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069455028 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067357435 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061819048 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070609733 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072221214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064436103 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062601499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064400398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068840778 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070230847 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068956405 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065397939 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062897154 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065548994 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068137906 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067505919 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06434247 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064684181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071699109 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063384173 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07178794 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066676501 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075115661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068574938 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060402241 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068376209 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063346001 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071472256 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060599136 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063641717 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064744612 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066190275 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064385492 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067914013 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059671894 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072164568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072099954 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064464304 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063499935 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063630479 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070771102 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065628512 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067966147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067734269 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069775984 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073952509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063682356 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067508408 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073851402 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.191505549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060545081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07109676 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065272362 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065224967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065229073 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063740615 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069093524 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074284983 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071985624 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059299636 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068747089 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064479811 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064712877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061069018 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070072409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068584572 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067042327 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072611854 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067012626 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066034386 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069406078 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065049561 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067062803 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067032762 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069319904 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067545966 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067041105 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065684925 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068712084 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064087504 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063645756 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06737822 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065794692 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066298334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071487156 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065353099 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06613873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067587121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065775534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066656471 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066143478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065663939 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068166241 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066826126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066485079 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067990998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061329438 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073048159 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065169088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073511378 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066078282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062759911 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072370442 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06753988 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071567253 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066143036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065942426 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066923545 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065067007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069210483 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072983056 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063749565 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076247114 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073188296 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066041338 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067763282 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065379201 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066823645 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064692745 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066135106 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065789017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06590788 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064561364 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06949666 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067762475 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065519037 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066691449 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06578609 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065499673 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065942279 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059496905 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064468842 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064622177 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064744206 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074474498 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065347547 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064735243 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063710541 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06580711 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063996971 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061577928 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072807113 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073757278 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065533715 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072079495 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064275473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066520377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075222216 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05967599 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063385711 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062764398 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063704637 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072260626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06562646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073953622 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06480011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064449584 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062440544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065826151 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063503803 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059549056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062299793 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067761383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063284211 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062882143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063711332 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066899677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0646815 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072773148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063096581 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064927308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063810575 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06117759 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0630561 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.195093284 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069424445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06663833 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06409694 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063673853 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06530495 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066332489 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067614823 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065386216 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067386082 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074895797 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065049281 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068551773 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068518854 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060542988 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06863879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066075646 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064594565 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064546928 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068978839 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068931276 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066170188 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074408921 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065609988 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06600997 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06585817 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063880324 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065425805 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064918816 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065396412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06478216 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066956574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073979001 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064328429 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068425412 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065551822 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06603595 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072388344 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.0655878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068459087 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071694138 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065634166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066973039 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07387997 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069974486 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069614282 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067222148 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066942017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070968469 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065039489 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072077178 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066176406 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065595565 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067660623 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063425665 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064483475 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064930353 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06510091 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071358873 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066064714 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06531586 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065112911 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063177326 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066369837 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068934178 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073032016 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067442039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068755678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060710463 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062573786 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065689602 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062959688 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066638123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070352067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070956348 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067878023 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065494617 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064687307 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074354919 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070856475 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068825285 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062882349 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068479826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065663066 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067338736 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065940993 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065241561 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065957247 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068658403 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066358765 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0643644 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072300595 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068361015 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065830404 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066644436 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065877969 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065095377 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060437905 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065786035 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066851076 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070247643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067061982 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06487324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075144727 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062978646 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065812995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067835154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064143023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069625395 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060276797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066250123 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065421277 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065393117 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059890781 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064250369 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062968905 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066482394 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063501933 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059334358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073826104 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07248546 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066863976 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063100862 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062815811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059257072 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190663126 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065133027 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066870686 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067729611 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07614047 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065318169 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064622344 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061123476 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06538762 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068391808 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06884336 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063203799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06107588 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064625629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068990482 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071846972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064604502 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064659353 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069034174 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068421197 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063292947 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068817775 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06273596 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069538718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077239617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066318142 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066583778 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072395558 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07381725 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066407288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060652726 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066166238 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068123929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065961988 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066145681 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066906112 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079992295 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068727622 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065401727 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064984193 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068397088 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064715991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073394301 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066671176 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065692048 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070079224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06765778 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074289469 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06864793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074269942 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068599988 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068077866 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06475766 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065997712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063464599 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064547394 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066394531 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065712899 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070777699 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073130495 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064698075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07555034 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074232455 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067187278 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062429978 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064538826 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064682683 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0605919 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06564471 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063557797 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063111954 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063387329 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063940796 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066095222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070436055 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066076744 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065858179 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064834079 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059317335 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067649907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067407865 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065945972 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062288693 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064826666 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065459393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069063653 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067950845 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062786911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066904518 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066860884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065750434 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060427262 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071411593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063964816 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067505699 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064670121 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067794545 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065655016 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068860192 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069891432 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06615335 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067188195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068535053 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067314297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06244738 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062162632 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070184027 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062759399 seconds)
  done (took 41.79987794 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0981711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061356644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061009147 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06142045 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07207475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061698525 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060730313 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061900275 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062101573 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064174167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060742752 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060599371 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069207795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076195022 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072146036 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065541549 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06065158 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061800328 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060585754 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0617467 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069435768 seconds)
  done (took 2.695817366 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073018959 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069330736 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070760751 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073848986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065873636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069083727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070422834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069275775 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074300294 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065820546 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074170097 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069113766 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06578325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073585093 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065417147 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069453923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073921409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065785692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069011281 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070676456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069363435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071127697 seconds)
  done (took 2.827220956 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065671166 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064280234 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066231173 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060825428 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064497847 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060127559 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068181911 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062768441 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067987007 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063753 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063843884 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06395321 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066279167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060011202 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064740592 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062429421 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106363718 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067418057 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064191502 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065300241 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060072891 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06671752 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060343461 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060795867 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063774371 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067985483 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065571061 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062805295 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064294684 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063824518 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064574196 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062445851 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066352496 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064883312 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063495547 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064185833 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064877711 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064358636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060458678 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062878828 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065367163 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060470563 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064876638 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065972312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062465005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062298287 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065985447 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064035234 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059831883 seconds)
  done (took 4.466438277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077827839 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106791179 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066279499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086889898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078240144 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073459072 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06808757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087721405 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062219691 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062950211 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079354814 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077465456 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064883502 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068841303 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070825031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064242252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065488362 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063467592 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067896612 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063749257 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067942863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070357602 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078572945 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076868904 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067931534 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063737577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063628744 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068171337 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076201075 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068631545 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068359919 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069801386 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078329476 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069235929 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063442473 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066526785 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079708442 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064442764 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066495318 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062088921 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066040305 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068249369 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070189007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079853958 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064643562 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069054721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064271555 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061772217 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076554199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066707066 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071700122 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078056554 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067758542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064446233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068470461 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078603629 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064366465 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062419435 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067460547 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075681825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061849318 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06801783 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0770927 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066161161 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070874254 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077317616 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068995516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068049543 seconds)
  done (took 6.213816399 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073132259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070950192 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080089528 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078097691 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07028272 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070485375 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070620381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070418997 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070191675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075142626 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070440973 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091176766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066151329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073080174 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070606764 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070992171 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070531646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070751617 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070740366 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070564356 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070489876 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077586984 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070833519 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078761009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09696945 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066077319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070683818 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070613017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07794092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07076072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07745603 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070436042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070452572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078004224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077716945 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070257072 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064086943 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070112573 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070490211 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07086607 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065794443 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078033753 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070141265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065886914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070468054 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070390835 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077750195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077312604 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072945032 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075098019 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070545653 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077982097 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070407943 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070829877 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078364234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10213845 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077894017 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078247468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070438961 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077618853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077560965 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083652033 seconds)
  done (took 5.89429307 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082241645 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073130252 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073918334 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060337091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062852698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068148117 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062947644 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063206421 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072591819 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072727871 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074957977 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068491671 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07079144 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075028424 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06838758 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070858464 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068007225 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068177612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072747591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068013326 seconds)
  done (took 2.708088903 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072799533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081239034 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065906014 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070082779 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067585732 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070416694 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066927103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067759946 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06576845 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067862777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07440651 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074232363 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06530047 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070131283 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074146896 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070462237 seconds)
  done (took 2.426891874 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07301727 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071217519 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078274321 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064682597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062995675 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061628765 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064423657 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060648888 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061190002 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076573512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065708727 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067002522 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064563094 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063502053 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061597115 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067036194 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061167947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062348064 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064238106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076694177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075056093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063126074 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065430769 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064715322 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064746619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069082152 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063850367 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062009483 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061972873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064631718 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064763492 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067933869 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061880782 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062122876 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063303177 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062455955 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064292446 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064913159 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066739248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064265758 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062554633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064171432 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064447847 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0656775 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061228248 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065171797 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061578365 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066845847 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062758423 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064570863 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064224507 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066838986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06489342 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070717776 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066935502 seconds)
  done (took 4.903289268 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077801488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068418324 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060595795 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063107756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068174338 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066204402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068122905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066012526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066145884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062892111 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066504513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067412308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067088392 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067803887 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066482725 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068237511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060734571 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066773321 seconds)
  done (took 2.513763068 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06963877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065039037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072227754 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064972072 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064510577 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066842729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061083827 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063296563 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063376938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06462406 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064649769 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067051448 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063408349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067055733 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06474906 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064495123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066646192 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063471753 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064528021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06076496 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066866537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06373521 seconds)
  done (took 2.743698416 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070936782 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090359344 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.135650831 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082088 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080250081 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07791265 seconds)
  done (took 1.849171262 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088374595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078041182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065459783 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085957933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071693684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065732268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065936063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065996928 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074174911 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074241017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066574041 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074375294 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074238666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073245145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071486921 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071190881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065572115 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065880478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065251253 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082212959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066490792 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073881308 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066520633 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065394538 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066041084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073511946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074255001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074238259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065845094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073889388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071337429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066004346 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074199904 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074439485 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067625675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074502692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066105796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081843104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07112191 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07345525 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067544217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071566974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073968402 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070405673 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074168675 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066044099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070316912 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065871342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065987396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083463844 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071550355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073057324 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071786427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07456989 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074544854 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084451739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07469788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073750281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072203979 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076807396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073546956 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071333028 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073286729 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074940154 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071773164 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073608428 seconds)
  done (took 6.070465238 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079850111 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084731176 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066290654 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074746877 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073778963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065984224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065905278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066145018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065949432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066751923 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105288845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066390096 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073872044 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073936386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066145858 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065957459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066093055 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073479256 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066100566 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083997676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065977957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073215145 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073473551 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073337399 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074352071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071802509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066095771 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066560975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066393782 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066325295 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070752026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066333581 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073469498 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065725477 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073967849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066479919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069122935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071209068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066000091 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071522169 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073448026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081880485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066083909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066037631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074204466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065995531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06616343 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065804917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066083657 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065668324 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074411999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074304712 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07426327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07301254 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066076579 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065997663 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065872021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066134604 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06625541 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071415292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073318084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066103158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084114843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066698247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066335407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073667915 seconds)
  done (took 5.987726955 seconds)
done (took 126.168140847 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181353721 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166675472 seconds)
  done (took 1.650495602 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067361073 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095175054 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075557063 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126602591 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065207123 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098168117 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097290929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076698213 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06514102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065258269 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065310868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06643372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129141856 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065860748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065325197 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066876043 seconds)
  done (took 2.60596643 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.094636666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172027257 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098205578 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063844377 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094976199 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071668858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06349099 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073501845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069685517 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0645022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071822896 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069562923 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064973098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069183936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069549312 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07146913 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063900732 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071526649 seconds)
  done (took 2.734669065 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097775947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088725881 seconds)
  done (took 1.507617357 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156947849 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103531858 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148243566 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330820837 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158739915 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226556164 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125561418 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124411976 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114345611 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120740793 seconds)
  done (took 2.925665102 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097626447 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145366554 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253502432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114709648 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071027519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089670916 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11439378 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076229822 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076381233 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076175085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07566099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074662856 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094970674 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072032571 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072149976 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074283509 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.09762507 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070931945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073642139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072716304 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094991631 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064626282 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072302431 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071046679 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073321413 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073201715 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065115235 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06416303 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072740408 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072191499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075613815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088115168 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072918999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102503885 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068858212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103543923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075002319 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069894686 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072498356 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069977289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07430857 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074345882 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070643508 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074915244 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064296765 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075340579 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064010187 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064468395 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076970651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065604487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076232448 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075740809 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103339852 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.0657635 seconds)
  done (took 5.786881644 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.65611632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101516617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068872873 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106237675 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094508911 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070994281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682392883 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088630971 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171644104 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090001381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086565315 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068839895 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079131784 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08186534 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108613323 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099396195 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092460221 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069866391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098883285 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096780923 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066939072 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091805628 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088663173 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373049416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065840083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068082961 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066647894 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068559695 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.107979063 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076196273 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068825856 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119221899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082325344 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118618388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065496376 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06630718 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066541582 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077618208 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178533246 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130416527 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128202094 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065716165 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066404447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067487328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087801637 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065773296 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.107723056 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078624962 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116560611 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068312216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068425479 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066341009 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067749431 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078492695 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075785536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078724861 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227575719 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066837245 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066611839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069987202 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178212064 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07710172 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077050251 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090232895 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127209507 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066385077 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.715632962 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082470633 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066345845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06793991 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065854393 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067347059 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066255062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241267032 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342162246 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069384824 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069275735 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067959805 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161877185 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077854778 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067885728 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.109866548 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067315868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067365567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069112683 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06953732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116064214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078983318 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068792397 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067010313 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068839644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067419125 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066007105 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.159801761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078963081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07848828 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157655645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067993968 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110539666 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07768205 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068983056 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077867565 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067036647 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069728404 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068598611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078576416 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094110085 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07793291 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068780184 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066156841 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.09601945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079784498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067255842 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076722011 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.39589258 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078788371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066110205 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0793682 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067379875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109500475 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06851167 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17351972 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067422879 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0776409 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068017003 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066303663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067181261 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108928485 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068889147 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067429407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06792503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06858578 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077873553 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.13083898 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069042581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.158787037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.131579203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068914745 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117346163 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067232205 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114424987 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069103137 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067766132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06613162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.705273194 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066736713 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06708424 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068809727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134787648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066639253 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07708176 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074825745 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064910065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.684717549 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076124485 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.202908367 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079100498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069051462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068173782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067093753 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069553051 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10815109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144186583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070319485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068050218 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076998771 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109388342 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066609466 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077276065 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076808511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077669631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067409923 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069316619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079654794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116139085 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077221853 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132546583 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512437649 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067894762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076324847 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141420674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066642336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083101866 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067325498 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080921885 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110090587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076582287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226158107 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111823121 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136536665 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078762756 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081398849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066444132 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066727201 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078141133 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067555241 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068480312 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077045722 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068718534 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068898503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081878548 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067139127 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.170871993 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066194065 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077443161 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065888324 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068881151 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081322114 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067279176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068676199 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078013509 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068842822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075927759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.647461731 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076252221 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067192755 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068734125 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.132627317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110514403 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067097566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067005845 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0686399 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107663743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.153874264 seconds)
  done (took 27.728306324 seconds)
done (took 46.265702371 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205877123 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148159924 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199981178 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116595927 seconds)
  done (took 2.089267227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120373096 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099534788 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093738567 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064622357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10006978 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064355665 seconds)
  done (took 1.897611472 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303302506 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207237346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179354123 seconds)
  done (took 2.03981987 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194157594 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184460244 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393844154 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249690429 seconds)
  done (took 2.479458882 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140184056 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087529492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066534498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082933146 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131745635 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158668477 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099458816 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123517537 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077265327 seconds)
  done (took 2.374718226 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142233729 seconds)
done (took 12.395817647 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098878244 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.121044638 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172175436 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223903601 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207264313 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.15401443 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163735911 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074903245 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080586511 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.160096306 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068947311 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17223689 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087881226 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09106353 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081076361 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072118971 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076580505 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155863157 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078658743 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074265963 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072764954 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176280576 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133394661 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191052856 seconds)
    (25/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.166906003 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076154672 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076019463 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064501876 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183041646 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091271212 seconds)
    (31/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.155671588 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075389371 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073221822 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.117655736 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141151198 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148490425 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148184241 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.128645142 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060891291 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050022084 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.147394294 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065700041 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069848152 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093513006 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070153173 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17274096 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090632698 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104115259 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.089930155 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08921975 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.163312164 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131386768 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120572325 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147550302 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071039083 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157288621 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.135869272 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07108224 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07091599 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080979565 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073978923 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08979121 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076059707 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08836781 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061227792 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121835146 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051719943 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068376738 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066341235 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050703737 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090051347 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070464276 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086654948 seconds)
    (74/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10573575 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.180507839 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112018606 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085254229 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064662523 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088245154 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.145209749 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.153715111 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.160407587 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051390284 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091338078 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105024296 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.064278128 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071818937 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165927307 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.168402389 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162695503 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173706819 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.150995525 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068788105 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.130282043 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.166905885 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071354974 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067548602 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09147012 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059147962 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136562704 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072357395 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132851516 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096301751 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161707689 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071873383 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103774732 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115776813 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068566804 seconds)
    (109/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060281911 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069545143 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084717743 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070901564 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.134120486 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070465889 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.177055384 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125715857 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.04922675 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.34779812 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073963064 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.050893189 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049444307 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063762243 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137426659 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069345709 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09525014 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062210708 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070318358 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07040445 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.143659021 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068843826 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070031733 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061427654 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05037646 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.12689295 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070258771 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.050308963 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062248037 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069267004 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.049929042 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 0.120197684 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131566718 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067303236 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068917242 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.164823045 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070820824 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062786584 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.16479203 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072162241 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.141849358 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068765195 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062155799 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077117229 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086634266 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070019396 seconds)
    (155/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.148363594 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062469401 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069568673 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085631953 seconds)
    (159/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.095194245 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.04878751 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.060837618 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063728041 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070061771 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08692462 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.094260987 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.077259778 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09121728 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.049560093 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.04988894 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.155531146 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069426636 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.114857121 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.049433444 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088675487 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.144895034 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139201199 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062603111 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064634304 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059027968 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.048704706 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.083413632 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062908504 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.103137476 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069335862 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.049752864 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.048623805 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061941113 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.049814566 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168891853 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068898497 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.048809843 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 0.121092814 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066011108 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.050307003 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.141051794 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070434675 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07282518 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050906441 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062667296 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.083163117 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091163716 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.048995681 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162092618 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132656797 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.092275785 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.068433043 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062701852 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129123034 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060874045 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063094067 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069105978 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062871982 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062993131 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.048838481 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048789521 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.149474082 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.048766043 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059472009 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058826934 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071540608 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070418042 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.050555872 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.084380218 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.069243679 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06672554 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071452324 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.062072236 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049423158 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.050888985 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.132893261 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092158295 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067542142 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.050118031 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.049957528 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062150053 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063274761 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.089839981 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062452043 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050206862 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.068310928 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.060608603 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074767072 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0489855 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.049594962 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133441952 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062415922 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06328789 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064510685 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.062744881 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06522945 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.048974295 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061663313 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083032347 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064344166 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048830931 seconds)
    (256/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.058609485 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050293283 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068876127 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.048278318 seconds)
    (260/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.048871918 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05186145 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.08862146 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062674726 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063518466 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.04842805 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069009185 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.080483742 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064669477 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050136305 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.060691328 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.061625336 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.069915096 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083872139 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049995763 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064775129 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048617169 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065075871 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.129076112 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.051677297 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048724766 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063514525 seconds)
    (282/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072647084 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059570931 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.04834705 seconds)
    (285/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070234787 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06955809 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05008208 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0638024 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066776343 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061021233 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061690444 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069581482 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048863614 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063554324 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070015426 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.098994491 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050512041 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049108488 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051697746 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067845578 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.085855804 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049196041 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 0.130699071 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067593089 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064262207 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.107473516 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.087999101 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062546244 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073788009 seconds)
  done (took 29.02546511 seconds)
done (took 30.392332377 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098815501 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094719351 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076596846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094922933 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082346288 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078478215 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073904277 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080213434 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081982189 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084237023 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080568484 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057499868 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076536374 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076652852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07695016 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094281567 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081426334 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075665902 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076161007 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067668085 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075949967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068650609 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070240759 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057063636 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080652326 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07381662 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074590912 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075733586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068335693 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068094232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071735445 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075042843 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067479117 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079806072 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07364757 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074438681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076164722 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077985058 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069366678 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067588009 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075683317 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067483757 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074139336 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075013021 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073285964 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072842745 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074342339 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079122251 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0926713 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069347328 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076067707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078329532 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077704789 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074056873 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070782168 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074080361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07206763 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092750647 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074981099 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069035433 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07542353 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074795769 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072182403 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074590547 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074007507 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076607077 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076473805 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072753272 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075890017 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07224333 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066543721 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074030833 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070156649 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066823047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076446878 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077792336 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066069305 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072341194 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073659523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072086609 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065857559 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068718186 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068382921 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072442827 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068486452 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055719938 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07057277 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073139177 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065615208 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07387401 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072307118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072564294 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067804161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075802446 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065539707 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071160689 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066268816 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065971214 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067343677 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069397089 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065391854 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067899202 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074478041 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067339885 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071843787 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078695022 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065560771 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071937727 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064565724 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064732823 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079891456 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075222887 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066282862 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068697956 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065149009 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072955732 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064995242 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065792142 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065905722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06566616 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071270251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066167278 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067607464 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072537584 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078752238 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065601778 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06888015 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067670627 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065258248 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070671698 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065748196 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065266771 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200409988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061970975 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067916324 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0663695 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072635073 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067756007 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072632982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066796745 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073531364 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070188022 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070714318 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070816461 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064416011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058602648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068142355 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06845346 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066858893 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065408484 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067352554 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065613886 seconds)
done (took 12.948635288 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066815216 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140582735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097306345 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09476093 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085072288 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066362052 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075305631 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101041501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067247378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101303168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086898314 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084547187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111173973 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064838894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065553561 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069422223 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066906644 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080617146 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099788099 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086347317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108109241 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065235341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094113591 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089460756 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08641307 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100447356 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066754169 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069316796 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069463572 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090132939 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08584846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069582507 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06637239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0996638 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091676451 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082553658 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066352316 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081740991 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066292871 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065521547 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07988364 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096983635 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079126741 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079615882 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069773041 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068921662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067128786 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082900662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088254955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077896692 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085598588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101967785 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068597493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065504437 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064881007 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084382773 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065641818 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068726193 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065851383 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068259373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065819917 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06896453 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08077517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085929521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069436582 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079667384 seconds)
  done (took 6.84897113 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084713007 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089637369 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082850816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082511908 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06543277 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065828554 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065998865 seconds)
  done (took 2.10849662 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067479822 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087622733 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088726935 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088340909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084112873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086592949 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075880716 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066035315 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079996192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067346622 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087325926 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100526334 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066396534 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072239429 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089986378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066106964 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089915942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06636129 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069278249 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089153969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067936192 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081832218 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069345105 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06679946 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080643107 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066739823 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112078277 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070475196 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067932431 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069504948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06456471 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105610142 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079996642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075440301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066699675 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080788949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0809695 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064728519 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082364083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0714805 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080291593 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067092388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067653153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064741724 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071606082 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076674997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067118312 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067298764 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069917265 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087465943 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06765378 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079755068 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070997502 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068983314 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067957669 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070169085 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076199346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067618804 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08593818 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067698892 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082710541 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08237069 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079896162 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082476008 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068748215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079869512 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080322262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068944013 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068195383 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070076067 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082547447 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064864283 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067820984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076902879 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068139041 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088885681 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08929375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067565258 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075751972 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066909762 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066645341 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066555967 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088952653 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068779396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066256773 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070975872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069597073 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06489908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065212385 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069818855 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064417008 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06789191 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068998403 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069345213 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068885819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08245239 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068546911 seconds)
  done (took 8.817638448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069906345 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067921075 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068904736 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067234037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067727364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067285893 seconds)
  done (took 2.004997448 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093647478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069042822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079957861 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072807612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103829305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086985142 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086353976 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078594757 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083374639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078746282 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0857999 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088279425 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092685462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07249272 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085928782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071421983 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086394102 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075342969 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078058156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072845404 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085956831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072304263 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07261173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080825011 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075478012 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071774397 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067661436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078647998 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078127563 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078015972 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072473199 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075663473 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070013809 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077738636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086179243 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070221171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071790318 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079134667 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071752487 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075596704 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087364223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072552459 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074072314 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076641453 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077672938 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070115437 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076835547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07530918 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085217884 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076363977 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076557479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070959876 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074655098 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076281604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069897186 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077450454 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076208779 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086077896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071595385 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069360226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068291377 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074966291 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076936642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074397553 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077791207 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076419571 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069672569 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071958944 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072355471 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071158648 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076601295 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068822843 seconds)
  done (took 7.13063915 seconds)
done (took 28.474744188 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540668668 seconds)
  done (took 2.103102222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.6153222 seconds)
  done (took 2.203351623 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.38959869 seconds)
  done (took 7.975646147 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388433198 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502718783 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705318788 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128727942 seconds)
  done (took 3.354175454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668656616 seconds)
  done (took 2.267416445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207710567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193826841 seconds)
  done (took 2.003611246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.367814342 seconds)
  done (took 1.95815976 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103333178 seconds)
  done (took 2.694139048 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256284518 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161069506 seconds)
  done (took 2.01235563 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459011927 seconds)
  done (took 2.049463534 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.803235001 seconds)
  done (took 6.396617752 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205168237 seconds)
  done (took 1.845369298 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237842544 seconds)
  done (took 1.832006016 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.718814475 seconds)
  done (took 3.313359032 seconds)
done (took 43.605698327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079966707 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080038316 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079712134 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076962909 seconds)
  done (took 1.895616902 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075418587 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071096323 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075777031 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070863337 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075123143 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071121063 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0731598 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075322725 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070682153 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071376251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071225164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070968185 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073140176 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073375885 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069685262 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0734316 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074318812 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071533661 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073930302 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071226091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069243998 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073211126 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073593217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070947877 seconds)
  done (took 3.332506678 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076602665 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071237515 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07347681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07091056 seconds)
  done (took 1.896611731 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077423883 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089747809 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088272128 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076173931 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090025515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084370952 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067576893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067620135 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071343344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07571443 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067060148 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093849333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086208514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075404424 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077746135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064560971 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066742651 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085020383 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075938781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076403703 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068814938 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075628724 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066490774 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086438221 seconds)
  done (took 3.453026635 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075913802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101642956 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076010267 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085846858 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088050118 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064364497 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072994196 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087125773 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120927208 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063874074 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068709719 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064370746 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071317242 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063935991 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074439518 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103416423 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106429238 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067203238 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094223513 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064326365 seconds)
  done (took 3.223358232 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071268346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068611732 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064735897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067417102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076604371 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0716926 seconds)
  done (took 2.027176063 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066866195 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066348327 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066015478 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065764883 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07007209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06518203 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064758356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065865297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065812118 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066042006 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065248103 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064576309 seconds)
  done (took 2.394563335 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.331841745 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067076341 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067308053 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064455185 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069494588 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064982565 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078142671 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066531697 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088846709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065070025 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065245984 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0675781 seconds)
  done (took 2.700973932 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201714571 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074793463 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230417158 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133944423 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109265762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112806751 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101977817 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11077205 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139665922 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099020017 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164003748 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161241277 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104433344 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133776667 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087432332 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096264053 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151561325 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158756848 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101158975 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161971078 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140979008 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122991009 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143603899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099356949 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103154253 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11897986 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069559357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07839553 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165725132 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127897789 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14284513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108078952 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091416963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171978398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166221824 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139091569 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132195312 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082675021 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100228056 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131083932 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196475018 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087263501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15986181 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241649434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080249354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138065876 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117184081 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117361423 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104213701 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088316836 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141468326 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178637766 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136940276 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085092896 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109186531 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112090918 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113063639 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101384967 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176669594 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157962059 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124754403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070006275 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097308674 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149951071 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128209109 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106979829 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123753572 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091442967 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130226006 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151345736 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11590309 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139638232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125960224 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086387963 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115918188 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136559593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128445687 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166229968 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121608488 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07097664 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1214171 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100505898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079015435 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140529695 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07382469 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171632167 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096713058 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104194362 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111309007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10751592 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106565881 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157326343 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140216837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239756512 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064600928 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101656414 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117621839 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143725529 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08550497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105234332 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113488579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076724542 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136155986 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073017233 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120248505 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074150656 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122420416 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128422702 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073446799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117895743 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098151997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09776147 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130594587 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155150934 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086534612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079988108 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163070072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119152168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101282333 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140550395 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152638364 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097219128 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101044479 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14578949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174811791 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087689876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159011977 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105038513 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082039277 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085628858 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121085551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110318201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119418759 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080200419 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115267557 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163538877 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073668236 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092904795 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130316783 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077555986 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079464415 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101076179 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09862068 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093337308 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099623472 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102228897 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135682073 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120745618 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102307579 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263498017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096526119 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166143773 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086867375 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098460191 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101117585 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06891969 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132862569 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153657529 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078243982 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159970237 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121733621 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103414889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116805723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082838196 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137066922 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077538383 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068966195 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14085332 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107931136 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108139917 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1464133 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102773286 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123780317 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116574261 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13110365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129914565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126037551 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102941483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086078118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108887553 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122985489 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071762904 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089280309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078172279 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101789438 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093385454 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081609888 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138816181 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12151452 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097932844 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108947731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094387345 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144202507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074622215 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125724037 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116533777 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091749213 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148648722 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149517711 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128759177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096739391 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142044141 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068678379 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072465264 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.22810726 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121160044 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081589968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081928295 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11409807 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143835637 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126233574 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134180775 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108399209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117555082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151271207 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06756051 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113548281 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143851906 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11882102 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101776797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088277628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09685503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139987681 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107036892 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177189811 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111721017 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123160972 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150665174 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097657836 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078113217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101040006 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131809417 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103111765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14334636 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098293699 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085891793 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107243018 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072590359 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097732665 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123773672 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116564332 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131652975 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111884513 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129155972 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075392872 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113942629 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117705817 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119320386 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062926869 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117123701 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157807295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092154062 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116891781 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149216293 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077312341 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12126753 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313435518 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143299522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083003598 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107609627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116072802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125915845 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1172042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137734707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108412673 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132675065 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1064763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083324974 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085334183 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095466125 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102468854 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092330846 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105641386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111886802 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092511039 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12824122 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10065338 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108049156 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114404216 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094264657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087771067 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094205553 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170027335 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117081522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167778339 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096879893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141423499 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160052285 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073067613 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077274152 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07645384 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136305692 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081722216 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127948797 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095281043 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103530798 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120962424 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138885301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09320949 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067191696 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106277464 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131095588 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109762888 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096345174 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102168344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159536692 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098322588 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07809483 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111348221 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10251594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099889364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310808368 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060551633 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096255745 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074866678 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079461165 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12469236 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148960038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07853049 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099007433 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117081516 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107389323 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125506458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099977051 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097069233 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112395171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147125428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125643696 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087787242 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109864683 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126169279 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168486649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102602449 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093491779 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167196275 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147879404 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156314046 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086537682 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113004371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111692615 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108468306 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134701184 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082054494 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159258298 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079952172 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13241751 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101782266 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088101851 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126347198 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096692596 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086356011 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144166263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115075125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080949022 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075971659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115717364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117965351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104474965 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073672226 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136353679 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071765853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129482869 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164348503 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079281884 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244371753 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094692819 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078236711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105846646 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100565167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087315331 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095190773 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169088316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086163205 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146645942 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138122192 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109870286 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133377782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097447064 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633161304 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07616649 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148792363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114082382 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168449316 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094968536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115541426 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106781772 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121842049 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141516692 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103255309 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175584403 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128830855 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11404789 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07802342 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100082176 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100045737 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087102589 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102432876 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110489736 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113079751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091528627 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11341861 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119733179 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080117455 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093359281 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151627936 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113936833 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140585897 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137856408 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083454086 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115379244 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13583991 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078507788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11934921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147828657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10336798 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095947986 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.220581804 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100537293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165987736 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071276091 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161208656 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116938797 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106895108 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111139731 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111886459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128826947 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105729023 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118341812 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090852949 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107867543 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109647384 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079797371 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074987782 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101738498 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109364038 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094773752 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095866695 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095409207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148739319 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069822269 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093275224 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100767599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142385542 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17010638 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086357462 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081012352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115622819 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110178492 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109774529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117988979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07759693 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080430494 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079775616 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076181762 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105500502 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109621361 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101593892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108933753 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159765312 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081026058 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221883669 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092563617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102320039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0683337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076715054 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093568186 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095330946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105965385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098725657 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165719579 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092985422 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088177988 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090455058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071997116 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080965927 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266342588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10824647 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116234554 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095709864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061460089 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106831832 seconds)
  done (took 57.695580971 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107973435 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080828805 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094770431 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148231215 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120202244 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209582708 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156285362 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196475868 seconds)
  done (took 2.820541854 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068794043 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091996756 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097927003 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080373947 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065505677 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066435169 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220132904 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078802539 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064960869 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086753433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07710232 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067724721 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.3928427 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06465483 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066481537 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061694225 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067674337 seconds)
  done (took 3.421637106 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372276648 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.366500938 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.366897338 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071771309 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.636271903 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087121199 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.064959669 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094007506 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.068740917 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278627738 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704244887 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090886601 seconds)
  done (took 13.914099909 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074282289 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067583264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081447112 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081734157 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07080122 seconds)
  done (took 2.08515743 seconds)
done (took 102.50104877 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078362754 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.28920628 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052159823 seconds)
  done (took 2.076376932 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081065271 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082931349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082303843 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08044242 seconds)
  done (took 2.039782878 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074008823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074768897 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082960558 seconds)
  done (took 1.941088534 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.218854358 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.135558192 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084502391 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080685534 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075861436 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076369421 seconds)
  done (took 1.944748968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070590376 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073434589 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070964675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074541805 seconds)
  done (took 1.997036134 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07529702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051843569 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053960887 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054496407 seconds)
  done (took 1.940856986 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084765361 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077137823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07671448 seconds)
  done (took 1.945594401 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105036089 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08262315 seconds)
  done (took 1.895382176 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080121329 seconds)
  done (took 1.787306701 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096782247 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110789132 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125208039 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106561446 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133271247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106126934 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083678639 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084350608 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075168108 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085196398 seconds)
  done (took 2.714516378 seconds)
done (took 22.509836169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076759596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361591536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359269778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088521885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672753648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355548865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.961113142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090197101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118081946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066187226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082125415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647796665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.954199713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318816566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942043076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.411772041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648153287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066689349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066217501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066270848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950396794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065810148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065995248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066588762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647059429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.402475759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066434195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.405923768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066224708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06791679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353437812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066351746 seconds)
  done (took 16.272491752 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070702463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114913725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072224472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082450289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069007375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068033201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069689025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067421207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122165527 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066408804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082333374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065981149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070137606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067413414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08504806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06663995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067357614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067534735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066549497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066838279 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084358128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066431317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066601084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06702679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066793407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077762582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067043847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066586287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067040616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068889607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069456667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067603803 seconds)
  done (took 4.070475725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113024732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122179402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072422485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10117538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109530464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068633016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140079962 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090396529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124256209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066454723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08276905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066605797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098850178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067798383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085909717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067007469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067694835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067306682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067014067 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067124847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085380386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066429956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067206878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067324341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067117338 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079543749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067092032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067260816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067068927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06854974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069988905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067282948 seconds)
  done (took 4.312386902 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072309748 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073285535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081006969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082132968 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067971196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0701489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071178367 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067848264 seconds)
  done (took 2.312164674 seconds)
done (took 28.68424022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077713736 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067413432 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071138348 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079169888 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070928436 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076841533 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065754998 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072719719 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070321342 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071513556 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072978833 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0661408 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069572253 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066046155 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072171057 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066613515 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077231302 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070349319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07887779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077794004 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068565769 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071505484 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072790327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077742425 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077308734 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077230385 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075623668 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071035244 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06796875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068826045 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075241637 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082182568 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067238757 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077319847 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066325066 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066471672 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069993236 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066683889 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077747412 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074991023 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068035026 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075039196 seconds)
  done (took 4.739735558 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086428589 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089914511 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082749425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06089 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065672194 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063733733 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086682353 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058496982 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05845526 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086276613 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054776306 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058264616 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061578442 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053071405 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058103236 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055513999 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060438516 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054940577 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058151835 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058718248 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057085957 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053175316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059192823 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063504228 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055564197 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060827466 seconds)
  done (took 3.397408404 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073932177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082668568 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086757786 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124230917 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101326846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075493733 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076214417 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085335838 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083468564 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065668537 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069411029 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09148848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086311027 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07217838 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06644031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082193642 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079970324 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067392164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071882027 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088833944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082886581 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.075746002 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090689138 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078977794 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065217819 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067974845 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069493993 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090364557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070410348 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074743727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069760481 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069367264 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067339095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076827952 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069385195 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067744636 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087409207 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075149234 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07557221 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066169857 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069054966 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066954598 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087173932 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120667053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065437113 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072326085 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073641734 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075011147 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066241848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083805468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076628711 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065771611 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068949383 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065142801 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065969048 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078738745 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067890674 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068888532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0747415 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068799815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078035726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069939352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080987749 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065729335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073310035 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065419606 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066546257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064908652 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090753585 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067445277 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106352721 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067107541 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066752924 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074795229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07284393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072164796 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066391718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080618448 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075762222 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069515078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07425575 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069682154 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069171982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085915032 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068407686 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067755116 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067270105 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071718552 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068861083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067362191 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078977375 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066560814 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069000226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082618626 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065844621 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067316778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07186666 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070429944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0656932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077320042 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070703376 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066915066 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075526853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066326117 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068652809 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076068832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072305177 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065168339 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070461843 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072085045 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066730895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067765214 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068910519 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067803066 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075077388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07445802 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070985268 seconds)
  done (took 10.440416153 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15801257 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149816202 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068637842 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142015006 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074334275 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077220706 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145853565 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092508972 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06649448 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066814555 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067409368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112514047 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103342641 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11952543 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077017351 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066623739 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.081672238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115082594 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145749247 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139539396 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082357803 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075345641 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06886946 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06801089 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072789364 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080738793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089181754 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075404762 seconds)
  done (took 4.44824396 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080805595 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099275278 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072349611 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087948306 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089329939 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066554393 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068743418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068057204 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078939248 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076914703 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066499802 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072391321 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072976598 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07261064 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067404496 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07314988 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07322714 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067581314 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069377456 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07141617 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075947226 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.078535388 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069955752 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065749646 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07287148 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065789706 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062594234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082700505 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066871434 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088299422 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064188962 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073745208 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079757892 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067056626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06588186 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06610602 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066143297 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066295409 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068449231 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064986649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065118063 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056409038 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065802837 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077606862 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072934716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055411435 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071084707 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071432376 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072031463 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064309713 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069358068 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070794511 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069744676 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073513285 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071593105 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072057702 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067939848 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064945069 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07436362 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066999776 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063553353 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065301418 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070759608 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064772115 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074200446 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07074622 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06512298 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066025838 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068183306 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072608987 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066596762 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069712085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064275942 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068208981 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07081484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068033198 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068086761 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065072932 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066486814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066724807 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05481916 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066190773 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052646293 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069395059 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064553416 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06484809 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06600536 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071021703 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077725847 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067657991 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072048453 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066879061 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06542628 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06951576 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059348013 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068961973 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080716508 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080446539 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066128761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063972425 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080055286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07052911 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064762372 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05484553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073269141 seconds)
  done (took 9.08188633 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094735916 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086282249 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068025966 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081297969 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.088900817 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085469222 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072960654 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075162672 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06770357 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.080482071 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072146283 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074956613 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06662711 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075453275 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092431768 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074760014 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068219987 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07544284 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070542075 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099490551 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080942395 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079755067 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.072950065 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066645794 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074189764 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078323028 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088377379 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078662649 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.076605279 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074111522 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078281837 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087985438 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072809141 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.070466127 seconds)
  done (took 4.423628759 seconds)
done (took 38.254192683 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.813800773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.981137709 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.803405583 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.182594568 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.952764477 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.81837457 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.851982252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796365409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.041367064 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.837418203 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.064728662 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848671082 seconds)
done (took 65.730731397 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.852721188 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.940727018 seconds)
    (2/2) benchmarking "String"...
    done (took 2.070728582 seconds)
  done (took 5.746052876 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.123850657 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.325310002 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.039765499 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.795471122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.799771231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.089056153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.585953463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.316431568 seconds)
  done (took 30.688904348 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.010135892 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.991365593 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.461577356 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.495105154 seconds)
  done (took 15.747129838 seconds)
done (took 63.97396072 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.797740025 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.792605388 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.797625528 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.777467778 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.850032643 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.805509246 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.235051468 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.809496557 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.791923231 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.782309341 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789223799 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.212953767 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.795971158 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.396737664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.788166422 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.800537618 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.849839754 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.297213408 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.945551201 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.809652855 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.804620156 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.998815235 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.798246081 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.801466342 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.827131341 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.799234117 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.239990998 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.804121068 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.412478847 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.802019002 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.831803175 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.290767654 seconds)
  done (took 205.27154836 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.80430421 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.717741118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.810475262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.805133266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.204104262 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.002541719 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.938027272 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.257987826 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.803884525 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.831078131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.980045715 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.802489483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.996704853 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756552399 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.810856091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804624601 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.982937592 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.06787166 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.808658177 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.076620531 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.821869899 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.82789916 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.78068042 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.025775966 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.830040318 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.897963561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.809351667 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.827011972 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.990560094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.960482308 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.814492139 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.813222181 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.987986369 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.674264075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.815490846 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.813864064 seconds)
  done (took 170.696274866 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.189825008 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.804646754 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.803600253 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804578392 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808660544 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.804553241 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.927611963 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92663139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.255230908 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.244356564 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.857640759 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645955795 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.806863072 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876267054 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.820102833 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.804700013 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.807107684 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.821680224 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.833073934 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.804933617 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.80734428 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807356291 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.92969771 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.818077092 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.810247056 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.809255697 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81397081 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.17593444 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.324863621 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.805649933 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814797372 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.049940318 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.805370681 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.805105475 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.701476671 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.452456758 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.89153952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.807272609 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812310149 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.807312471 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.029271634 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807100511 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.807893158 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.810807328 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983058373 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.804629415 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.931158372 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.807225957 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303403039 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.806888825 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.809181573 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.807138096 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.754899808 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.496698303 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.809304206 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.809436576 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.812245876 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.807953142 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.808425798 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.813812766 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.653089373 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.048489712 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.807921664 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.810536813 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820358426 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.806182157 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.880555587 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.806535637 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.259707918 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.864162672 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.921624428 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947794769 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806235198 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875403858 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.900618417 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.807725156 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.807655686 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.80760493 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.808329125 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.889699367 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.807067718 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.960435116 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.815463938 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.809750884 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.858393536 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.87926279 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.806973165 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.705786079 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.809260989 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.808673223 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.117276812 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.874552661 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.807278702 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.809136316 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.810079402 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.941162895 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930712373 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.580385951 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.81108324 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.565270215 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.81072396 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.951416557 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.8120973 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.001856972 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.809290511 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.810191474 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.897192584 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.812249108 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.810683744 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.809332325 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.840528053 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.814485684 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.869629698 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.811436899 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.181527306 seconds)
  done (took 406.965224394 seconds)
done (took 786.915257901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.478653329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.445520258 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.557828803 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.475217859 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.444710969 seconds)
  done (took 14.151102782 seconds)
done (took 15.89890208 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.900458405 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.899123992 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837166059 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898037679 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829095079 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.89931728 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879164756 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.834153465 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.867224222 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.834761406 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866960026 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.832986711 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.824978153 seconds)
  done (took 25.952846059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.044845077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.053468491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.884225088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.051916376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.859003716 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.040615329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.975034043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.962915701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.96230848 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831239966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.824178 seconds)
  done (took 23.239511293 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.052264634 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.056419511 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.887825947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.052728449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.862349802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.053110069 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.979269231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.969831687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.970851156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.827509166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.824659187 seconds)
  done (took 23.286620254 seconds)
done (took 74.228964003 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.822724861 seconds)
  done (took 3.573561416 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843326671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.979456079 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.824359931 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.823662143 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.822523425 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.825826558 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.82361585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.820886996 seconds)
  done (took 16.514873635 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820870645 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.818219731 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.819908494 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.820593196 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.81781162 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.818023433 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.819852319 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.817442227 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.818127011 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.818219464 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.822453068 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.817873126 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.821681276 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821396047 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.820718721 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.817523569 seconds)
  done (took 30.866658674 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.819953188 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.81968331 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.818452911 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.819692477 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.819969644 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.817989874 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.81847991 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.81849188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.818124963 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.818602632 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.823052639 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.820011202 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.820026634 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.819113864 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.818681547 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.823174695 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.816922777 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.819888456 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.824068394 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.820327994 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.819461644 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.819967537 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.819325791 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.81925161 seconds)
  done (took 45.430045022 seconds)
done (took 98.134795096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.539982034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.281936417 seconds)
  done (took 8.575091792 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.824438263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.822613776 seconds)
  done (took 5.439395703 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.823591804 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.822659028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.822194163 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.822316096 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.82224861 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.823463261 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.822159478 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.823671188 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.82230688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.824562859 seconds)
  done (took 19.982438282 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.824273153 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.823134623 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.819135467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.822955327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.823456664 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.820198233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.823083163 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.823479394 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.823276981 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.822510862 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.823352374 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.822235774 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.82269325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.82164797 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.824207577 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.822961749 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.821343674 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.822270223 seconds)
  done (took 34.560846751 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.826488784 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826928178 seconds)
  done (took 5.408782041 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.822223206 seconds)
    (2/7) benchmarking "second"...
    done (took 1.820279194 seconds)
    (3/7) benchmarking "month"...
    done (took 1.8208943 seconds)
    (4/7) benchmarking "year"...
    done (took 1.821732868 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821566488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.822390825 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.82040361 seconds)
  done (took 14.504717995 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.82637788 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.982396816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.051673775 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.498078505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.825887682 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.828973247 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.754589658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.828811354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.829553113 seconds)
  done (took 20.181850139 seconds)
done (took 110.404999752 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.63842248 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.818090169 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.200703076 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.875282815 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.878408428 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.119276109 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.819365401 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.043926586 seconds)
done (took 43.14862149 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.825965222 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.288578809 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.294089349 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.84197474 seconds)
  done (took 12.179278296 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.817411661 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.353837792 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.859161802 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.418768978 seconds)
  done (took 20.228081329 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.187925416 seconds)
    (2/2) benchmarking "read"...
    done (took 2.183969653 seconds)
  done (took 6.13248749 seconds)
done (took 47.124969792 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.824180128 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825814876 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.825059111 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.82342035 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.825227897 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.825573055 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.822974287 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.824800728 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.826120025 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.826370155 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.826364885 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.823019725 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.824253527 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.824955534 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825470504 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82231259 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822422814 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825268229 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.822680037 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823127482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823234324 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826949423 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.822429825 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.822778474 seconds)
  done (took 45.540860225 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.827695667 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.824650375 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.824970992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.828761063 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.824686577 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.826192763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.826272411 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.823512055 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.827779521 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.827050355 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823859882 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.823023588 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.826925015 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.826414141 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826209797 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.824276606 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.82801066 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825198261 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827554823 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.830208364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.827363142 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825242018 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823985259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827975344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.8258429 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824160458 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.827716894 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.82560817 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827033644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.825290841 seconds)
  done (took 56.542150723 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.833774315 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.836018026 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.828080105 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.828016549 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.829984053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.825126773 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.826973739 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.828444497 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.827927996 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.827299032 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.832074126 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.829354588 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.828490025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.82925264 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.829912652 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.830522839 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.82801723 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.827539849 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.829179758 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.828701738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.828388518 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.828342828 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.829301451 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.829232314 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.828456548 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.829593446 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.830781013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.830106279 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.830854389 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.829991163 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.829695843 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.831496541 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.831142563 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.830054476 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.830037254 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.829260789 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.833303417 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.839221363 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.829533759 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.829405886 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.830325093 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.829973384 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.829739219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.835178843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.830379724 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.8300406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.831510581 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.829287839 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.833067725 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.830689044 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.830658721 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.830841423 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.830088335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.830445503 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.830867239 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.829955638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.830662007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.829797133 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.830754934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.832176513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.82977675 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.830974601 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.831633106 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.831117831 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.831271702 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.832487945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.830978868 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.831935993 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.831757495 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.833052301 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.834528338 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.832259282 seconds)
  done (took 133.55514066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.831979712 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830095326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832351298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.828735444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829218213 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.833937092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830265069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834155059 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833693589 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.832763874 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832567872 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830459309 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830568761 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837933156 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829859409 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.829987115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.833310241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830319642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.832841572 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833726158 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83239376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829776159 seconds)
  done (took 42.063015038 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834204455 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834954185 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.831173678 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832681824 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830018104 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832829514 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.833581832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833498291 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833777363 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831365237 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830636644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835135783 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832205449 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830246536 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831446711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.83049514 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833282518 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829532011 seconds)
  done (took 34.744070689 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.831355468 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.830722864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.836288605 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.832890173 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.832940964 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.835837746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833504499 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.834340666 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.834719158 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.831544121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.83790405 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834648397 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.834175047 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831793402 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832744189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.834796289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.834616631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834332543 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837278264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834874372 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832643514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834127044 seconds)
  done (took 42.114412744 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835473781 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833969671 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831237185 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832740334 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831697475 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835347174 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.835005806 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.831686797 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.835773495 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.834651907 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832700635 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833558279 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.830636182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832427481 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.833485694 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831653971 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836411876 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832258342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834697325 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.834309688 seconds)
  done (took 38.435130988 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837720377 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839324766 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838038139 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839744707 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843238965 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.838152237 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837795464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838708493 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839236686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840303032 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838485038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.837938189 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839442642 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840319515 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837650756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841463967 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83873149 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839889565 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838605647 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839248427 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842656191 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840109825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840000193 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840787537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840212347 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840305746 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843225167 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840505248 seconds)
  done (took 53.277901757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838836337 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837672424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.835556589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.834748452 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.834354075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.834967398 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.834345225 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.835430837 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838483962 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835046842 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.838697559 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.836995132 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83764652 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.838642884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.837675211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.838796016 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837551217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.836116306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838973202 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83531385 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.838150825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837660723 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.839945887 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.836241801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839252582 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.838440662 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835853571 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837135989 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839223237 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.83774289 seconds)
  done (took 56.883231612 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.856894885 seconds)
    (2/2) benchmarking "in"...
    done (took 1.856596293 seconds)
  done (took 5.480928502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.836934545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840838612 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.838517718 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.835741682 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835954546 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.839007755 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.84009838 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837639593 seconds)
  done (took 16.47422736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.838036993 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.840224914 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.839159512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.84057859 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.841637151 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.841248902 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84657682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.841077842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.845056107 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.842227639 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.847462501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.850185754 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.844656378 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.84121132 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.842393209 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842086337 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.840873519 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.842142146 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.840897831 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.842635916 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842934466 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.844258633 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844091318 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838812773 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.846095092 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.85175947 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.847053349 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.84219443 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841578247 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.846709526 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.846059234 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.836996733 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.843196122 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.843590921 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.839908137 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.844960388 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.853378609 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843214209 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.850302948 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843362125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841843108 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845425382 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.842290979 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.845525152 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843859315 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.844796084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.846238211 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.838602715 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.842234765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.84681911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.847304589 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841482501 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.840935788 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.848786852 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.844715498 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849251522 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.846282032 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.846042029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.85207888 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.856021309 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.857167061 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.850152326 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84382697 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.846070869 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853568906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.868081798 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850003967 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.840843434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.840402035 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.843165014 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.851686375 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857731415 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.85489379 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.849097347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844431969 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.843823699 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844647568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843228214 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.850698274 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.846932008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.847599772 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845289152 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852060363 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.868188002 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.844201448 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.845314136 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.846877056 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.847272507 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.844210744 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856955262 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.846353277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.843019319 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845023086 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.843835719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.846970679 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.849629357 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.844785252 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.845013354 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.84148085 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.843429854 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.847230253 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846403345 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.855424922 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846187244 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.846921249 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.852122326 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.845271285 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842962672 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.85345721 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.844655345 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.847075418 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.845583467 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.855006778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.840816309 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848457844 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.853594935 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.847893891 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.848371766 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.847956952 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.846189646 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855374445 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.873696833 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.849629926 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.845155919 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.850596065 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.860667836 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848703861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.850279589 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.847166538 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.843976721 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.844138464 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849257791 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.84786776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.849629469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850442452 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.850023516 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.843316744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.847366866 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.85047402 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.848078619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.849132161 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.847576274 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.849173153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.850609004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.851811458 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.848267937 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.857171263 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.848007456 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.849225384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.850282968 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.844134756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848632669 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.849591789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.848588255 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.850008828 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.84982931 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.847665434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.850724145 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.847328336 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.84665785 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.849562451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.848320891 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851895321 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.850399945 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.853887718 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.848970607 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.846071354 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.84760728 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.847932809 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.846835318 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.847579494 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847060434 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.850866665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.857921252 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.847932504 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.850865671 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852788348 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851481044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850276509 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850715888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.851457027 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.859475417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.851314089 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.857307526 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.851718485 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.852097936 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.849691091 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.850319227 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.848952895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851707419 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.851397295 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.857691775 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864992123 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.860381558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.853562875 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861348117 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.859140649 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.859512581 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.856192555 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.852216782 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.849190358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.851582304 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849920431 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853287861 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.85217349 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.853355962 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850348609 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.849946834 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852225991 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853409231 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851173287 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.852648742 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.853773912 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.848922069 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.851756982 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.85330685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.84969395 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.848644419 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.848856092 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.853161841 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.851359879 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85362917 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.861479112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.848840232 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851003627 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853850823 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.853695798 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.85057677 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.850720956 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855298536 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.855356479 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860319163 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.854729275 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.854840251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859570224 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.853676407 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.851853972 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.853990396 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.852966805 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.850332006 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.854812232 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.863014319 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.852220545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.855999967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.855200225 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854622615 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855746098 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.860353547 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.850571434 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.851932324 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.853035919 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.855769438 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.849779677 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.854814787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.855172789 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.855660851 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.855634509 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.854800286 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.853304662 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.856646534 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.855861948 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.855637512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.856345907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857863301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.864972615 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.861210489 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.855168766 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.858607151 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.855868661 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.858496241 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.855208545 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.85565575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.853964185 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869232074 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.866485048 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.864494137 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.856609486 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.853479925 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861265796 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.856142696 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.859880921 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855136481 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855894388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.855789394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.853726345 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.851679646 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856277332 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.854007078 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855135211 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.862496119 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.85980786 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.853718163 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856200001 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.859223487 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.858132462 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.857305283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.856355867 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.855889921 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.860414435 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859215554 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.857382618 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.856607769 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862432451 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856303589 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.85850533 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.855406876 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.856046993 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.856309219 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.85853155 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.859320359 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.859857295 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.866790082 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860381606 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.868858175 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.858394578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867878676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.859985197 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.859819683 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.868731806 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.854316055 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.855492901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.857333865 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.859816234 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.864633904 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.859374648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.858429348 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.862060264 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.859344695 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.860505494 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.856890379 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.860484045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.858029804 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.860583185 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.867537441 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.85873168 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.862141979 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85969278 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.855287902 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.861685382 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.857768396 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.856746263 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865248192 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.861146855 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.860043172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.858561028 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.858770959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.858531506 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.861407214 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.858935513 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.856292636 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.85865545 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.865524401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.85995163 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865656153 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.860294204 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.871032951 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861737229 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.867448426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86150904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.860214621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.860140445 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.860505356 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.862988923 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.859690339 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.860972171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.861955884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.861275259 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.862767403 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.862839315 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863632438 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862320841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.862464647 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.860424131 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869023781 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886833578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.862789339 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.86464942 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.857651995 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.863832522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.867792746 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.863240827 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.860581839 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.862554126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872646857 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.868905256 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.860917603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.864951704 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862381887 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864608433 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.862545678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.861684326 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.864329958 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.862052011 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.864272793 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.864151191 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868384739 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.86308469 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.863450677 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864485873 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.862695902 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.87422722 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.864873759 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.864119794 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86477154 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.861798673 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.862515617 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.862986789 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.865673917 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.864058278 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.860945479 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.862507089 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867936294 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.868314024 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.868315101 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.862044068 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.864799527 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.863128783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.864015038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86605085 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.865990154 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865429607 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.863197377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.865528437 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.865372638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.861188273 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.86180066 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.863099421 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864072603 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.865953049 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.871792969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863326535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.86192834 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.862585716 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.862818034 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863120598 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.863800399 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.874468614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867903831 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.876043079 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.872341443 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870357465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.865692195 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.866995718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.873100202 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.86399061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.864868228 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.867736781 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.867855566 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.865601811 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.869080982 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866884141 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.872527512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.86491577 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.866274117 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873789941 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.866900097 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.867998318 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.866977721 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.870741789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.86528988 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.862953442 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.865452257 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.864931388 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.872604803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.868371899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868006981 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869282287 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.863027407 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.86656082 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.870940291 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864897563 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.865875143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.863042141 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.865220581 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869833627 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.864936864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.862285686 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.86580246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.865672294 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.868084226 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.874096906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.861768764 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.867000744 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.867880836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.867742573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867310244 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.866793863 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.863444276 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.863285994 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.866910967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868515222 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.867311359 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.869293149 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.868197277 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.86913722 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.868216116 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870275446 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86998625 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.880088192 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.874116559 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.863945898 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.866192592 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.868046192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.871215483 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871213433 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.868785049 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866351235 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.869430741 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.865404207 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.871798253 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.866827426 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.870145958 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.884109344 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.867962697 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868773622 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.868215667 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.872880781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.867991347 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.864054055 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.866594699 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.870877277 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.870325862 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877810537 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.869900181 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.873701319 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869975915 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.8686991 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.872132106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.870510405 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.877014169 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.872637125 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87248059 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.871602156 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.873563378 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.887983293 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.869818398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.878137701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899710665 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.869582876 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.869709223 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.869918245 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873710358 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.872568872 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.871797722 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.871771513 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.868618605 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.869222744 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.872442962 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.870829401 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87459392 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.871202301 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.869572615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.86907637 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.870095599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.873415436 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.865475569 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.870911849 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.869478952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.873007908 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.872069848 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.872653847 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.872032413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.885466489 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.881162288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.870607954 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.872272405 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.867235482 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.874717993 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.873663697 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.882355374 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.878640262 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.872461897 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.871838686 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.872855281 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872601333 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.867908883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.871148697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.870497351 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.870112885 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.867562722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.885686774 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88157846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.876797103 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.870768849 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.874005445 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.87041122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.873726461 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874492669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874637575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.874976423 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.872019001 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878991544 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.869891761 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.870143089 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.874568898 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.879262592 seconds)
  done (took 1109.546290275 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871011462 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867873724 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870135841 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.869711865 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.868850822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868917647 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869011976 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.867433562 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.870276726 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.868866884 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.869417016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869318244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.86913868 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870115886 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874097343 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.869374084 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870623774 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.87017721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.869123193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868961552 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.869515289 seconds)
  done (took 41.062815612 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.873450013 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.870034029 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871452697 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871545355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869770176 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871418439 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.869353633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872207966 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.872943979 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868728964 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.870563148 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871328436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.869491732 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.868205112 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871025117 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874176314 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871588438 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870352713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.872021328 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.870612915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873410209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.870035313 seconds)
  done (took 42.967382041 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.876270227 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.876589767 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.873605167 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.870266472 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.873204651 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.870222057 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.875321926 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.87284758 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.872671559 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.876160092 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.873651994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.875748157 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.880538295 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.880170811 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.878297717 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.872946211 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.016954613 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.87526276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877928003 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.876349635 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.871237798 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.879970943 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.87185658 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.871096508 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.872456267 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.877246105 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.876666253 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.874087512 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.878854888 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.876056027 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.883313367 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874132137 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.874944406 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.877471489 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.874905736 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.876140994 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.878015885 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.879243631 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.87267208 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.874017054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.883777577 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.897914884 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.878486014 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.882974404 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.875863565 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.875205956 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.879890147 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.886341216 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.874279528 seconds)
  done (took 93.897046937 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.875073273 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.875925599 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.87292046 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.876001208 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.878185734 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.875143193 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.874580388 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.874903708 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.872753015 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.872784863 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.875262819 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.874017366 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.872263219 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.875734531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.876658157 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874475289 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873110798 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.872942532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.872012877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873611854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.873370073 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.877261944 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.876716704 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.8743863 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.877807466 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.875820257 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.873492304 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.877201249 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.874306844 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.875457665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.87860322 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.87807501 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.877772255 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.875949772 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.874107828 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.877820979 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.878997895 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.875504847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878591401 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.876034109 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.87691973 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877594826 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.877809242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.878001838 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.875298274 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.87430317 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874405205 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.875005244 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.874858673 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.876964354 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.876979879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.875724286 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878320832 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.874587612 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876349669 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.876370097 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.873531681 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.874962149 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.878030233 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.874846709 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873815056 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877735381 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.873452299 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.880794583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.88235718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.878602851 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.878036274 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.881695049 seconds)
  done (took 129.371346694 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88204284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.881087164 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882140415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881329942 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.880617577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.880313278 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881010531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.880928379 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.880071311 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882961153 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880351428 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.881219017 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.881616818 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.878834194 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.883067582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882885556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.881827787 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882526905 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.88157477 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881554092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.883052347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.882566921 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881856539 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.882317064 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.883035805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.882333598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.881835967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.882946211 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881673985 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.882201779 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884421655 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.886839789 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.884760595 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.885470746 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.883159423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.884315861 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884233733 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882779819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.884375854 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.884840537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.883815583 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.883775013 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.883320961 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.884657786 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885206132 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.884347004 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883388946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.884308262 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.881313778 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.884437285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.884835932 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885198819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888081669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.88370893 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.88379562 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.881141268 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884876416 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886758587 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885228689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.883051078 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887068614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.882405856 seconds)
  done (took 118.56509879 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.882139464 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.88276649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.879612439 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.880250104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.882137076 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.881379089 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.882387123 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.883582403 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.884497977 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.883098794 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884399913 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.880277971 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880693972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882981471 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.881006854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.881987583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881094191 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.882678054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.883520534 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.881266726 seconds)
  done (took 39.454483821 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.881203754 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.884444631 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.881313043 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.880060857 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.882618871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.880726235 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.882765428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884012347 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880704941 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884113466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.883614615 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8855019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883405479 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.880485431 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.884348465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.881673677 seconds)
  done (took 31.933944057 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.880944534 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.884146097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.886932323 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.887047186 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883776129 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.881864019 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.883783084 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.882030389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.88158938 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.886393089 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886301619 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.886068125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.885672718 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.886702702 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.883708809 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.885221136 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.882261808 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.882804069 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.885302954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.889708717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.884520466 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88344725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.885534811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.885707079 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.88219471 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.883615108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.88426337 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885018337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.882768193 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.885531587 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.883463884 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.884891347 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.884450324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.883620475 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.889266881 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.884027936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.885382335 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.885575112 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.888313921 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.886198787 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.886511371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.884454357 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.886542529 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.887445463 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884859886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.887569141 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.885343166 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.884956492 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.884466391 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.884951208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.887152103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.889628103 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.889080294 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.888025508 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.887576156 seconds)
  done (took 105.504511102 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889257188 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.887898875 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.885614324 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.888174173 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.88820309 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.885440898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.887143658 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.884662926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.886105918 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.8876844 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.88717533 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.888426267 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.886728116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.888733302 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.885705241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887266833 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.885457779 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.886789487 seconds)
  done (took 35.78345763 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.886912075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.885106815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.887718299 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.886096841 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.884072594 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.888585519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.886278138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.888134529 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88727626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.886657695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88729266 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.889071418 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887113196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.888520942 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886232042 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886012661 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.889633054 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.888589929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.886634425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885631064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.89013077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.888626684 seconds)
  done (took 43.336582482 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.888214718 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.889707856 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.9082835 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.936724773 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.927540477 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.888257141 seconds)
  done (took 13.25656608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888243523 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889118518 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.887237294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888288339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890719369 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888687191 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886714429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887093218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888988504 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888514693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885799079 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890183506 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889129161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886928441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890072722 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890043284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886478674 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887513624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88806354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889801019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88804248 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890379673 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886865992 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889781481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88766546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888281209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890323351 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888701151 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888025344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890891459 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890870622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887400143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889377505 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888503336 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892879207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890364297 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889154642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890453441 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891361109 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887664375 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.890443713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891725689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890329549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889631701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890996247 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888411431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888241765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888151584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889076765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891559933 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891586138 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888023512 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893301666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891464891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891573724 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891493033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890141095 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889163505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892234347 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891230777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890174487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892593516 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890159596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890840056 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892810696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890867384 seconds)
  done (took 126.531406371 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889068452 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889821201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890927725 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891589713 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889382743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890771524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891050616 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891082907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89165553 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891854297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893730994 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891092914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890213457 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890467894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89062476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890208119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889460364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892634944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890120223 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893528729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890101088 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89100722 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890735856 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891238416 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893715468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893577638 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892458751 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890175489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891207226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889939234 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892615966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891437243 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893396508 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.892167389 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891297239 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891173479 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891717359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893340198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893027966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894979355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891660433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895393774 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892034909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892952296 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893841273 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891790464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893557506 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892316473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892798457 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894119699 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892284046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893044555 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89392543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893524779 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893830516 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893085481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893078717 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893181095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893317176 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896137793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894073597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894285413 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89871459 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890748649 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892721459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895669812 seconds)
  done (took 126.71539658 seconds)
done (took 2584.793317216 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.903905247 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.899292718 seconds)
  done (took 15.628733961 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.058345895 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.008792413 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.89713482 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.925658474 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.894863642 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.889570831 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.913929524 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.894311352 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.895755031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.894642879 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.896600155 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.08124234 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.891975926 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.895449538 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.896133747 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.990762201 seconds)
  done (took 52.758774771 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.901099874 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.900607887 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.912312359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.904249637 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.900503635 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.912862864 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.933139757 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.905234153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.936034153 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.922929189 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.970148678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.91107495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.900810751 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.947829621 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.911602653 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.916863722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.002663081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.974144277 seconds)
  done (took 36.492760223 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.978932705 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.902316537 seconds)
  done (took 10.718571775 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.927933898 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.912687091 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.907461121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.893838809 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.907954796 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.90084958 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.909313705 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.91752433 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.926454805 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.898820269 seconds)
  done (took 70.936128884 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.907833287 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.902938685 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.904086783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.900786985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.892513374 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.896137658 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.900966654 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.899669472 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.581364155 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.933551457 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.906991788 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.908348768 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.900720139 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.901617954 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.900696696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.92421699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.063025105 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.899010031 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.900539456 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.907579371 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.902192246 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.959635861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.914806936 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.901957098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.931474397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.584275844 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.907036145 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.909389772 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.021528378 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.900536882 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.90196198 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.905159012 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.905603916 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.293157076 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.195969432 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.899590004 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.910121714 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.909149555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.899174353 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.013477755 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.90237523 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.90772561 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.84250558 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.189586456 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.002793455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.944656397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.260171932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.905117422 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.904289544 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.933710141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.903648816 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.903081668 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.917053471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.420017892 seconds)
  done (took 134.472742842 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.941399258 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.383346506 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.053666721 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.900261042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18976039 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134256763 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896173298 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94639003 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913305521 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.149776544 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07480645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.017219537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.897521624 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.897893459 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.899804837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.896370899 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048463811 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.969432338 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.899527293 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.900449448 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933525988 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.166572987 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.024452384 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.034338339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.921587241 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.123147131 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.02486865 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.015707142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.902912261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.897404626 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.965943842 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.900460138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.899489525 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899950941 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.065063794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.003693039 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99580288 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.900830886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.948882737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.897877037 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.928321978 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121602978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.007634129 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.037949268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149691551 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.126381294 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.901772085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.89899856 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.905516989 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.097821243 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.115736463 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.155813888 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.030482431 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.900899702 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.242810948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.89882035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.920004815 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.152457087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13292511 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.011459885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.943974329 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90351001 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.900204523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.216832879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.902210309 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.005213457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.280414305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.901538611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.010718385 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.014553735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.134962274 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141483327 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.931227992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.922427622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.937880956 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.185574241 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.972586535 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154811434 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.94442747 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.902163976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995005602 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.904858078 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072976553 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.218428706 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.17138083 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945362524 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.911697804 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.900821497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.150055419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.150895789 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.173941791 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145328945 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.069410297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.953545136 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.900867095 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.902327542 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.943781226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.032251838 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.901379253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.264062654 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14242903 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.670349399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.929865252 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.215168906 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032652578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.897982239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.895143792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.899016209 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.101998484 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.938141788 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.901962752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.894761023 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.141303835 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.83567704 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.019432415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.613682525 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.956245294 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.89322034 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.157398684 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.897313056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139052927 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.924178944 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.202558807 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.280590362 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.933953364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.08710633 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.136326858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.893156762 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155552144 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.203761416 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013640271 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137985954 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.631664295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.889509168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182940984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901472546 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.914757641 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058957414 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.892510545 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065959819 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.898302008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.199697449 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914316393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062994295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.152879928 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.165361916 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.93263565 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940203662 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.893952084 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022773463 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.890248665 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.865908272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.071437733 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.986892511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.889338719 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.470208634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.889109141 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035244927 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.185392048 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910180507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959299501 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.88769843 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891830896 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982439885 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.913234545 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.497693755 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.88636192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.056697805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876946854 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.336883576 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.885018493 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.197338161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.099389403 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.888133575 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.891370369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.687489041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.886061054 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.033618652 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.045882129 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.583510296 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883684522 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103847542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886218522 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01898889 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.887180942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.886478403 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.235394593 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.91068394 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.88508573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.886833268 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.885274294 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88416461 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112780489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.911600977 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.606493819 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.022684058 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132555368 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.194790462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.147709731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.931002363 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884270117 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.146100582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909347206 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.951111349 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.883730209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908804363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127261813 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885953078 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.111176071 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.171281893 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.960913106 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934446242 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.883072089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.965454557 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.882777617 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.025002407 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978980626 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.882759507 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.885589698 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.998225764 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00670795 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074297712 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.883638686 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.925355495 seconds)
  done (took 960.35312133 seconds)
done (took 1283.185361541 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.881657953 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880708005 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.869186259 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881025773 seconds)
  done (took 29.329819766 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.890365853 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.888371123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.890553143 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.886989683 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.886318318 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.886539783 seconds)
  done (took 13.146868662 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.934731668 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880404835 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881355563 seconds)
  done (took 21.512742898 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.9541116 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.288628677 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.989654568 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.326449767 seconds)
  done (took 10.37632725 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.890732331 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.890643135 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.890392197 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.88890371 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.888486437 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.890566362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.887090088 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.889035617 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.890360421 seconds)
  done (took 18.824321948 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.073886871 seconds)
done (took 99.081589797 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.578437203 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.813496121 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.911834586 seconds)
    (4/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.506634503 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 6.907155975 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.229401076 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.202825325 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.932550748 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.906605842 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.109386657 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.97425648 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.450300146 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.917097938 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.426597685 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.0455906 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.241684162 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.950585738 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.199934619 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056474302 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.91072784 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.965682528 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.908281694 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.910374601 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.891712564 seconds)
    (25/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.111517353 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.909059173 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.067895541 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289883971 seconds)
    (29/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.071346174 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.694050735 seconds)
    (31/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.089551207 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016076243 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.027661166 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.047513652 seconds)
    (35/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.043744654 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.050153976 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.895680232 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.187003326 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.233804534 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.263901709 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322114577 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.974127158 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.124263493 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.235037066 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.013190834 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.37291621 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.784627855 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.215586323 seconds)
    (49/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.42645074 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.819142512 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.797267096 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.985222471 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.174128891 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.031786568 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.021020594 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.012410612 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119693816 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.941738081 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.189169198 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.718935875 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.915254056 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.937571308 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.997243056 seconds)
    (64/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.995693326 seconds)
    (65/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.182570918 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.987570522 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.782640616 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.931197817 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.967107419 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.000265824 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.566077512 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.060961261 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.803261346 seconds)
    (74/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.046489148 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.207457857 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.851036431 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.828890365 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.913938627 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.952981762 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.902530059 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.613978579 seconds)
    (82/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.093640148 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.430573625 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.212706738 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.427989766 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.611235086 seconds)
    (87/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.880106892 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.01320292 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.204881868 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.878701899 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.900320255 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.961346513 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.939620386 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.99283575 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.898388416 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.085134622 seconds)
    (97/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.995820325 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.245615895 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.086630003 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.917749959 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.324559069 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.158360986 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.261946938 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.916073385 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.002895631 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.901340454 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.935520027 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.011632994 seconds)
    (109/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.204309497 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.9435693 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.932118514 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.925146957 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.019758264 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116988781 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.899656129 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.525642102 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.206783404 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.148977548 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.94754 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.418833541 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.93136119 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.917267713 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.97630352 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.004249402 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917453682 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.161480423 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.945616618 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.943104731 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.280112708 seconds)
    (130/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.327019623 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.202356342 seconds)
    (132/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.000291534 seconds)
    (133/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.946126333 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.448838559 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.941030982 seconds)
    (136/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.900704418 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143879565 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.197018485 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.046541191 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 5.719739331 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.036816344 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132194181 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.200610317 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.917366513 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.966598923 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.186297936 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.518986127 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.916313724 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 4.984498187 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.030302674 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.211163084 seconds)
    (152/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.840475738 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.654068974 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.405064151 seconds)
    (155/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.561214542 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.146158469 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.950883748 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.109047084 seconds)
    (159/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.111474899 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.272434647 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.045341298 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.922153357 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.947547218 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.570126381 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.055859002 seconds)
    (166/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.87661915 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.924746042 seconds)
    (168/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.638230929 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.913420912 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.312226808 seconds)
    (171/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.949898828 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.946655239 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.146555772 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.193894106 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.909083378 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.930536448 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.259713236 seconds)
    (178/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.038358755 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.09637948 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.999920755 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.570744421 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.305253467 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.912082181 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.193325395 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.262465991 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.297786355 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.307634747 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.341192807 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.92890935 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.952818098 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.224965123 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 5.69489117 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.910521406 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.655808879 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.110584751 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.968700719 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.023218606 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.305039733 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.176308562 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.925510897 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.993169376 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.222253874 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.928015482 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.001533906 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.587787212 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.119808249 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.023351084 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.130132178 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.978589567 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.417725157 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.036610627 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.297195652 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.038472543 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.428804842 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.118672712 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.543097451 seconds)
    (217/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.117181618 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.173685873 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.437627679 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.635313081 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.939122415 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296159251 seconds)
    (223/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.947406107 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.121304744 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.975948094 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.000909818 seconds)
    (227/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.320402913 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.798103491 seconds)
    (229/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.896973006 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.582592404 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.596918333 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.931995412 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.522993137 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.326005837 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.247090966 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.997947043 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.9592963 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30043391 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312092531 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.061584454 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.952107041 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.480060369 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.118283812 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.805004142 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.911496319 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.080863736 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.208050936 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.040816002 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.510453816 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.037948797 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.059407129 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.082358013 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.927094304 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.032773897 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.302808547 seconds)
    (256/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.107630617 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.90018156 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.03940769 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013593161 seconds)
    (260/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.179272291 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.897235773 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.967502854 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.009338053 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.914040473 seconds)
    (265/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.542631328 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.936170723 seconds)
    (267/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.927778953 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.756291087 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.289735968 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.938741336 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.581268712 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.296630181 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.207490853 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.535937932 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.080015926 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.207515498 seconds)
    (277/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.979929627 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.908966472 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.914279052 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.080672646 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.036073139 seconds)
    (282/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.915593133 seconds)
    (283/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.217194442 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.092254001 seconds)
    (285/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.939132981 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.990894391 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.494239666 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.907202434 seconds)
    (289/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.209811202 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.9878105 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.017166075 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.118021731 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.891106085 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.964245342 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.931389107 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.981461326 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.88057952 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.970602963 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.060499801 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.047134545 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.308560698 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.00610751 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 4.911519339 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.935587374 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.907439417 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.258097974 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.999234217 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.91316252 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.616382925 seconds)
  done (took 1040.601956129 seconds)
done (took 1042.460737291 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.947351662 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936028793 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.921212509 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.941803733 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.03177473 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.947937803 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.932284728 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.924153911 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.969043064 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.970230143 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.91844574 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.948189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.921290783 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.920731436 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.921573528 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934319985 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.231943615 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.95043418 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.937022202 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.928464136 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.938976347 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.919942567 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.969899236 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.948245858 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.924697466 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.924752092 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.92437551 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.940720172 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.033405153 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.924565916 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.924151699 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.933738386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.23493996 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.950147078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.917057231 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.941979343 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.932635771 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.931572014 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.926477499 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.954452093 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.383340191 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.932532131 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.92377454 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.923056549 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.922878624 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926384279 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.922857638 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.930189884 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934220574 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.938618358 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377357938 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.943779914 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.927278148 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.922915051 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.934979249 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.922619135 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.927060154 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.937619073 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.943821298 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938441524 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.223784626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.958370606 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.924283554 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.940283725 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.931259642 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.414946034 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.925448635 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.92745986 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.383280748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.936094199 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.414992486 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937668965 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.923819318 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.938011095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.956158356 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.233511423 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.948743973 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.92249982 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.930682656 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.923184043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.932955055 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934866641 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.928523627 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.924671964 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938356148 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.951262787 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.933937846 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.925131234 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.934137094 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.944490394 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.931870245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.934789832 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928638157 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.919414114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.936391553 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.928935238 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.927888778 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.926623413 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.929134732 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.934999817 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.383541993 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947889664 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.921606634 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.923006026 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.924823912 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.938912652 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.382019349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.93190727 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.946400295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.973412799 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.927614232 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.226664019 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.958990316 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940827005 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.934348841 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.930489776 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921927046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225865768 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.413734012 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.946536045 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.927932253 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.925332942 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942100018 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.928672098 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924989946 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238585015 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.957754326 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942761588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.050075415 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.938239227 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.958655568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.92847141 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.930043319 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.955351303 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943812516 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.959563161 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.931875656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942810818 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.943738391 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.924067173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.938643509 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.937690136 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.929937613 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.933996681 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923469107 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.954503555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938461363 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.939034499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.95131916 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.047957002 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.925075677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.230189816 seconds)
done (took 302.489333571 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.994403794 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.914770256 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.021314148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.920800665 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.005804514 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.007158714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.917106502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.916414926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.915518575 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.300545741 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.915847003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.915379597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.909569988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.915533434 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.003002105 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.91303358 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.91079556 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.256567712 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.916412059 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.992240799 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.905841321 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.90936139 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.910001422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.291414236 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.906872938 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.91054672 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.980962104 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.907516228 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.252487404 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.901003397 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899219182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.249884166 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.996795057 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.918218443 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.910626416 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.908458021 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.984523047 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.903188747 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.977867918 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.979713969 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.000190315 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.940444462 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.9053057 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.892877142 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.9022239 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.900973956 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.895668979 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.926655569 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.891054089 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.893833725 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.238639409 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.901493335 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.891083434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893209227 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889756476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.928945799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887362799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.894334005 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982594926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.894442098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.956244422 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.272331912 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268474005 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888378779 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.883660752 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.88387034 seconds)
  done (took 186.726404683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.955553344 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.95967439 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.953096101 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.889630415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.93294179 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.955764408 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.888569044 seconds)
  done (took 15.349457658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887537001 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880567088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931821686 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.934534744 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.881817185 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.029981479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881510627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89154183 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878584741 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.930554521 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877579971 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.876222964 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.880965618 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.873312062 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918409122 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.883574201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.986377634 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.87142418 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.870940493 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026918221 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865980296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.876878502 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.92260893 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.878529288 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.867392506 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.873918016 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.452888553 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873290344 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865176086 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.868103774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862681038 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.908153734 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868870828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.860507772 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864934225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980749455 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.865960755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859495796 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864916536 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.858301871 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.860550086 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.860807315 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.861416033 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.855688263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.858807029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.881655823 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858233951 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859231441 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858862141 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858632689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.907234943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.856681895 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.853355292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.857058819 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.91053471 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862251263 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859452081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.853072719 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.855375024 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852704769 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.010754098 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.899859925 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.853302692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899707937 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855782861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852610108 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849775533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.850908015 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904325436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.853406836 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.898265914 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.847733873 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007850976 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.873417391 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852009343 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.852086446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.852736765 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855011062 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.84427487 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.860113554 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.848813965 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.852087837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.858445254 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849538548 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849308112 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.958769563 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958973331 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.84985951 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.867673242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.856872894 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.849573354 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.905083453 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.849817895 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.848326836 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.903087959 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.966420367 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.908761096 seconds)
  done (took 204.983714472 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.855383177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.859551095 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85030826 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.868120182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.852641379 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.851791539 seconds)
  done (took 12.917158795 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853528852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.855795243 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.851156063 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852309504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854674765 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.852409119 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.858659107 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852465523 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.860105662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.852942638 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.852275571 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.854003264 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854180165 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.855228889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.856762676 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852116189 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856076891 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84987867 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854104171 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854641629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997334775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.8549233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.30085881 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.854600741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858523403 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.852160134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862210583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.853723272 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855013181 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.860441771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.858002694 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854204077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.85508242 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860922234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.860945219 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.85444089 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857459682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.855950366 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851130887 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.855003233 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.855589244 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858208797 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853391451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.856455531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.854982387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.859322132 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.859119457 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860475638 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.858274513 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856018384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.855451029 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.853636491 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.85396892 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.855884409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.858120503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860504192 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860437411 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.858652661 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.857086084 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.855508077 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.857781296 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.854226394 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857186074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.862374708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861867055 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.856763917 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.855938145 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863163236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857553013 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.855542462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.85685068 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.852363645 seconds)
  done (took 137.01562202 seconds)
done (took 558.860638939 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.123752799 seconds)
  done (took 8.905830758 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.956626734 seconds)
  done (took 8.835018361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.385683137 seconds)
  done (took 10.170997392 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.891432828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.868853975 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.873838641 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.857406951 seconds)
  done (took 29.287385945 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.862116248 seconds)
  done (took 8.64768464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.865207593 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.848304204 seconds)
  done (took 15.530844369 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93339672 seconds)
  done (took 8.719089155 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.113019618 seconds)
  done (took 8.90124482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.865352075 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.861960864 seconds)
  done (took 15.530408637 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.834977668 seconds)
  done (took 8.620258493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.41247575 seconds)
  done (took 11.20950862 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.859148984 seconds)
  done (took 8.661426244 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.934786188 seconds)
  done (took 8.72318539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.143160844 seconds)
  done (took 9.928377137 seconds)
done (took 163.455881153 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.855040604 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.848832201 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.850347398 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.847484788 seconds)
  done (took 29.186706477 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.889342699 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890078711 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.891981471 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.90020303 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892539928 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.889167531 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.882634924 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.882117461 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901750804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.893162264 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.895314423 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.892276465 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.893531099 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893283833 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.895538311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.90835386 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.902749641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.893239703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.884217429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.896378629 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.85985838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.902559544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.894123323 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.85900015 seconds)
  done (took 47.170335158 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054265129 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.927475321 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.009372344 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.906348825 seconds)
  done (took 9.684079678 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.908274711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909938692 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.923587594 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.961018162 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.992553302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.919936815 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.886585215 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879447301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86528543 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.910833162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.9877497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.92649623 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.992429369 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.85569312 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.042572863 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858243544 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.854587658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90634061 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.956667819 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.97547713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.853647962 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.90592366 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.907778742 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.92409866 seconds)
  done (took 47.891434102 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.850926168 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.859062705 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.860853821 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.850619162 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.850471089 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.85414453 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.860879056 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84825575 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.871679988 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.84960246 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.846108268 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.847819761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.850599203 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84935527 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.847803051 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.862773484 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.862907594 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.853048346 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.84943096 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851783432 seconds)
  done (took 38.86475817 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.838803025 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.692569455 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.189292725 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.091772437 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.83586619 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.837864111 seconds)
  done (took 31.263832285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.855519093 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.907340495 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.850986595 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90011119 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983598154 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.851721114 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.843263726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.911275038 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956208864 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920218496 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.865334073 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.872582265 seconds)
  done (took 24.493989091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.838499723 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.838555238 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.839439795 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.856516937 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.855334575 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.852493985 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.851050459 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.837861654 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.858201382 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.862927096 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853160081 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.856522051 seconds)
  done (took 43.980673101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927884315 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.888234864 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.838379873 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5837408 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218824481 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050609957 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.558475383 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170320609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843047602 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113673558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850367905 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946646186 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096207629 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449147832 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877749066 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299392053 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139810991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036729103 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863652222 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542344955 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907289902 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.118872206 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.668163412 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901952869 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052899677 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.970516447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.102975454 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842284676 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976627851 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880522454 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853044999 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84080281 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115916719 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213985645 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946210289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851751643 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462456319 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.555099869 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.834120003 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.630215649 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.587876197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.005598007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852126229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842454785 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777397766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096532354 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223196328 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.847278863 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.553886494 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842379812 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853510135 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93774022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.846669376 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.659834026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789066205 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846288024 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841493763 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849430804 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41347067 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969778438 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.13197742 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.824865702 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.934299879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.543864149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227995334 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.991749383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.847511314 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847136305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778532112 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.621559563 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902002902 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193728385 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.864436191 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49417355 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151280855 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.921246181 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.789835322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101057537 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486568046 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.826180363 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071725117 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84403353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781014875 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.792175771 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779188509 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091596056 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878635336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.598450635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879487306 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171955603 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856016256 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861531269 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868194467 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069391642 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.731192808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845085904 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.663009147 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999324768 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867408953 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174685189 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779527556 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.849499551 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102316432 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057454944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022060288 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343509071 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007447338 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511949212 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.905380573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093154404 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903065153 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.10946043 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905627429 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974577511 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902932804 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846529448 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129009577 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536821851 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.991606212 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.878416086 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977684575 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152121871 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870855481 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928946696 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849117325 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84740528 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.644899142 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404724809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.848345863 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.851153882 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018663444 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904286551 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.85316846 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798381712 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.481905697 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881528576 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.865939511 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073931327 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529794251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168065334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783722509 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176192073 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941103319 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.073814085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.492252484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.925778347 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108883624 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032808795 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072442701 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902506367 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869676452 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947476516 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870306442 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.10497709 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15052653 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.853208816 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.853197147 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646903857 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888324267 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859183604 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.853810784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60103772 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117429673 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874218295 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856503209 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.74196059 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.864587929 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914852009 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85461533 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860930617 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402796801 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562490473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.857307661 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.443706542 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075299848 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859953968 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.545240168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969487424 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932530977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116619906 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907758137 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784679909 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561063678 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543596483 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849540129 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786637229 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850499054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861095561 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860804249 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.047542967 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119889406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895157775 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.549693355 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.897233169 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862168849 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.856088185 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852109208 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39144739 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96369927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.149061108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907267817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995807141 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.865701019 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785910374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856751216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857814552 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852220155 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.85318466 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885057789 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.536469428 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228739253 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114813827 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.459437476 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866720861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.558948173 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.91319219 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.851200829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65044527 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109058436 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.887976913 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871553399 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.862859081 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.545570655 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.55200047 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419323368 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163826308 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140181654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28044433 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.172076185 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887111892 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18764666 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787773823 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411692286 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914898933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197139652 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798579877 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940367884 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494751357 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19737017 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867887274 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080980741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228776721 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.711673612 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878790476 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065572009 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887795554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.114380057 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822749905 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.138862644 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994358496 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.547458986 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060651909 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183737029 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.653280691 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.869077901 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.853891965 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.501515402 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933221908 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568248055 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.026932645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.128086332 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899827121 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205757224 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863199578 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080544219 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189903294 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.10651834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981860919 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789314009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.865673824 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866318739 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.856196891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.885494172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.743204582 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.108624536 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866396933 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78949262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.054959601 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14045195 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.752305443 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.860431659 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854726909 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126496597 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494192618 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026705043 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.067245275 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406218975 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864242583 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791710331 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79135038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548705976 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862878593 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831600038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045068628 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.949321996 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802096938 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036553778 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949245503 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114160545 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.869748586 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113129766 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123651494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.559904527 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882458759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.956118266 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.471905597 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.959230501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856589536 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093451744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611413802 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083610722 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.847121143 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.798084454 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.856476918 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072399632 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857698862 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.67433874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078401555 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.576646989 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.869832141 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162475758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924885761 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.676596676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.897839025 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.948281978 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867177007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937189546 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868330964 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869110473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868398713 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902897444 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.673887332 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976287621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.872155109 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953673728 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951020785 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.381038051 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863849345 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117622212 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203397959 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164083465 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909837256 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858596998 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858238935 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792634487 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008675936 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084453421 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133007884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987967256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.039075726 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885812437 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477565515 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167728669 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107369711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134301158 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.755041747 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477125052 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.90517849 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.859964496 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87018367 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.07142536 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052480311 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135200438 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993534174 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043092257 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223483753 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134272502 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860303391 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859901811 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45595713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.864758763 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506320227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.893927762 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.682252967 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131395571 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871040552 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224646305 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880274134 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.021344043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.63520378 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516403969 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150163555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831652765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909456608 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120683956 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218876095 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166721252 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928505273 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872953621 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.970897169 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009048092 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.744746888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862604001 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862174642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919703085 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.574680729 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872449579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126673513 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165718041 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.859919264 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.759270112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88611536 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87219104 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086781114 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106055654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108949237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87311485 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869040256 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.678526388 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125504662 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914572727 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797870115 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.867114983 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957109096 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1077607 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883625692 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.31717039 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.574565756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11807714 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.859359532 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887102453 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1227354 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217001832 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166485744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.3937376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056237196 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.443420799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.560910226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17015892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.86895178 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.127667807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17285317 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.868465285 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.053395194 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908671392 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.121881253 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170222636 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.875453397 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541152779 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.832508183 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206974645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422804607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803746926 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875256582 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.92527131 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865801547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994463832 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876609777 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.774253427 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112555663 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.651625309 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148312336 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.871522671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.854240108 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.542729524 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.248046403 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903759717 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008170393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873327436 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.540861853 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.217127849 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123565704 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.058762173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.877782805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.871288271 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866607777 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853872344 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062834642 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.064544071 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12640875 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.071195398 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.909105196 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871256588 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.08456045 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079730229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.680456732 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000270986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051111901 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915168892 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.775744857 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370063919 seconds)
  done (took 1669.042523741 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88282407 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.883968064 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.898280717 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934446528 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896407993 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991370057 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.911701561 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.934170123 seconds)
  done (took 57.137939073 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.866916322 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083986966 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.876643908 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.868200623 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.877466824 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.866961109 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.035796909 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.879374617 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.87620773 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.878172914 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.868502423 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.867677928 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.174499151 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.893815651 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.868654937 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.858952812 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.876979907 seconds)
  done (took 74.343003874 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.869125066 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.923740512 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.897774642 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.878600668 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.940807558 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.888022254 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.743222261 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.876218145 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.869601873 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.028383428 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.5086759 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888770562 seconds)
  done (took 87.11996724 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877156559 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.875218992 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.876690763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875033299 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.875222959 seconds)
  done (took 11.1885923 seconds)
done (took 2173.186645118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.125060969 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081258149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095684415 seconds)
  done (took 5.984854117 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022847734 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.071454479 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.190177514 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.209283208 seconds)
  done (took 10.307891188 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.162057932 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.2676421 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.087681134 seconds)
  done (took 8.327991069 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287729566 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.878611015 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.986538457 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.871732633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.875756906 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.876106566 seconds)
  done (took 22.435813903 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.877377793 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.880140966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.878638353 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.881317952 seconds)
  done (took 9.32870677 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859982065 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597451336 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.859769248 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.877184794 seconds)
  done (took 21.005924194 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.629299213 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.637689221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.621854105 seconds)
  done (took 9.700390535 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.558731096 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.790160609 seconds)
  done (took 9.160847075 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.13035031 seconds)
  done (took 3.942933851 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.0105833 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.141931757 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.338332907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357180676 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.418448658 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.779162459 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.200848602 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.137249638 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.261899967 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.318465287 seconds)
  done (took 24.777317045 seconds)
done (took 140.058049573 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.264292661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.116936322 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.078626146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.263845525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104684791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.078140778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.091686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.244046589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.731951482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.725341776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.220265568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.104059051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.039200992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.126476201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.040083387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.245592938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.145588142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.282987359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.917892349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.115050789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.09504438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857889237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.06231327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.872874634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105048379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.03024177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.437319787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.248621735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.07041837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.45052385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033201376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.268427789 seconds)
  done (took 171.282660898 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.660834261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.878074192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877315043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884723432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.235704445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879339554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879924049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877167777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.126103015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.099299414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.877543898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.206053922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878278947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877992455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.882333052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87870009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.262609193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.716283528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891858495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893711957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898519224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.169022373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.897246532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.212555542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.280734907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896145175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.880196364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898134885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.88824051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891420842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.893737818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878568388 seconds)
  done (took 208.265016503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.878655157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881438429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881388746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87923173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.885326405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886126312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.880517582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879305604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.468204474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.459955951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889126644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.883934592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883746405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.88078106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88708858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883024847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.906291926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.891464274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.887362335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891920938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896175525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.692879138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901336773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.699659988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.896728531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894087125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881847646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894948998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899710326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900198495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897250056 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.881181492 seconds)
  done (took 221.037292603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083547036 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.888229441 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.888425861 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.845087804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.888356861 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.887320577 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.880302943 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.084727392 seconds)
  done (took 19.287486056 seconds)
done (took 621.699676369 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.31401941 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.166138545 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.076662827 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911662482 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.125854506 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.951914737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.907534234 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.971163012 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.086525067 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.98802474 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.562192726 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.928757388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.646991398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.936419268 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.036420932 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966556595 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.45599612 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.549135859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.090056623 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.950847871 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.089770276 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.846640268 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.985283497 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.132853708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.671131767 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.897663248 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.066607573 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.469629459 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.922407309 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.074571098 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.629285711 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302178177 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.921137479 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.90605868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.960289217 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941963993 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.241852793 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.919377612 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.029764735 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.648296701 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.952357265 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.981828347 seconds)
  done (took 105.033067246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.879289547 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.87758989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.876880432 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.878211123 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.878774318 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.877985108 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.876911922 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.876532346 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.877612541 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.876979262 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.877189194 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.87937211 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.878541587 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.878704468 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877429313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.878303887 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.878282694 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.881133803 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878542107 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.878147984 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.878923128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.877872076 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881228414 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879274184 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879500814 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.879383828 seconds)
  done (took 50.679463908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.892621505 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042502192 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.113947905 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.911764436 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.892118271 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.895130054 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.91084543 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.898470783 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.893632113 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.893929584 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987867224 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.898067306 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910945961 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.114366781 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.907929555 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.892123848 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.893297007 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.891940617 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.047844908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908786181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.912938909 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.897675127 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911860208 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905566339 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.894475277 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.892820428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.89535932 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.333407261 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.902885149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.982487354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.93691607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914744939 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.282772387 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.124204091 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947941189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.900357047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.894846068 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988216378 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.899633571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.89371976 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.912267635 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.898311031 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.113135763 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.394310693 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909558392 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.894484819 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.339024323 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.99880392 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.936015885 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.906696311 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.121048156 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.911985448 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.896356371 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.894804951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.929574294 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904179343 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.893132185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.203938544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.906595254 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91265204 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.900042423 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.895421302 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050421156 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.903542323 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.040082775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.90373212 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.90185943 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.895280596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.115284909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.91002391 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393098341 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.908840887 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.895737939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986115933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.044408195 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.365756522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909113299 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053919615 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.302749219 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.920536079 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.902638367 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.316707177 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.924851973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.903994396 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.897826205 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.897902393 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.895950489 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940672935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.912271798 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.332070703 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.400867072 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.217168064 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.925222019 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.912092354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.89627228 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.20546863 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.906227708 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.897903347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.110603926 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.411070878 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.910891215 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.906144353 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383194257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.913286482 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916902582 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.907708997 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.122086196 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.913885315 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.942957465 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.89830689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904369616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.900459464 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.916621264 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.904676967 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.897763621 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373738897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.012929279 seconds)
  done (took 234.644550126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892353634 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.907454993 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.892049436 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892556107 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890770572 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89771716 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.891501747 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891770123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.897204506 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891159728 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.892225953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.894876511 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.894067846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.89234447 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.92722938 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.898366131 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.50236484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.89456965 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891902629 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.892657317 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.540351645 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.897525729 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89196697 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.894247108 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.895304692 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.896548774 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895186605 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.920431821 seconds)
  done (took 168.188889372 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89996109 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016507704 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.920062841 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.927101027 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.908221642 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.897702562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924817201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.915370494 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.905250119 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897759234 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.897356397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960546213 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911968272 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999482036 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931946302 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.931497735 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005067747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.910526269 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897982452 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.898152635 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92819978 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895608825 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.961842995 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029157883 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.919599325 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016448941 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906985142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.90205618 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.899967119 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020183028 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.917964986 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961310182 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.929156666 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919004119 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021114216 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.019639943 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010753459 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.935113408 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.904424236 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.90010067 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.899837435 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889903285 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.020034453 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.922789636 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.902953703 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010194604 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.923036121 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.903784276 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.910938932 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.899802683 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.915011573 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919071113 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.968541699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.035812785 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938100596 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.92809361 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.927574261 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.200118705 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.916130905 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00279604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89966998 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017736526 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.923813973 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.920608259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.901685217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.907462232 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.930933291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934480229 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007851323 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.913971414 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002719938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.941652176 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.908962733 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.901836481 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.905068654 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.021172196 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.025984627 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.940725646 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.940312627 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.932811933 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.900278047 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903037339 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892276989 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.922387343 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.908330273 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01966997 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.023512442 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.914600906 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.904132199 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.917802489 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.905588878 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928557906 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028911934 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940822012 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.007271878 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.97401109 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979139683 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.919088954 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.918620874 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.908059412 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968205069 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.921264533 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.916437249 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.250011749 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981535682 seconds)
  done (took 206.157959676 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.999513134 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395371346 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.959969729 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.96473277 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.178195058 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.331681793 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.648992281 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.954940864 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.959087742 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.979774851 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.121531941 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.012558182 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.966109559 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940002616 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.366868906 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.945363177 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.952556581 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.973413478 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.957300419 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.485344489 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.249330917 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.086239353 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.950692554 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.075196042 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.935825009 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.229205555 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.442542936 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.337789221 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.992011339 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.298595731 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.279013199 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632977399 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.163463909 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.201489659 seconds)
  done (took 75.811293761 seconds)
done (took 842.333766985 seconds)
SAVING RESULT...
DONE!
