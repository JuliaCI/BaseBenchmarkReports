cset: moving following pidspec: 31999
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332378157 seconds)
loading group "string"... done (took 0.480787049 seconds)
loading group "linalg"... done (took 7.791739564 seconds)
loading group "parallel"... done (took 0.175362098 seconds)
loading group "find"... done (took 1.197433251 seconds)
loading group "tuple"... done (took 2.153658465 seconds)
loading group "dates"... done (took 1.352807851 seconds)
loading group "micro"... done (took 0.250368904 seconds)
loading group "io"... done (took 0.672619763 seconds)
loading group "scalar"... done (took 41.446166885 seconds)
loading group "sparse"... done (took 12.763524742 seconds)
loading group "broadcast"... done (took 1.122863868 seconds)
loading group "union"... done (took 14.635578008 seconds)
loading group "simd"... done (took 5.149274295 seconds)
loading group "random"... done (took 10.401455428 seconds)
loading group "problem"... done (took 2.037206847 seconds)
loading group "array"... done (took 23.928520138 seconds)
loading group "misc"... done (took 1.526947198 seconds)
loading group "sort"... done (took 3.708856066 seconds)
loading group "collection"... done (took 19.64706439 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545472059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140566285 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.157325077 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143931774 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236998422 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158951794 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164416626 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102068286 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.035444903 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.193785863 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158918568 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534833 seconds)
done (took 5.310862972 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228104563 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094842926 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109845908 seconds)
  done (took 0.879996786 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080198137 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150127447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097706182 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080557366 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098627311 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098170502 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082485867 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096400305 seconds)
  done (took 1.392215465 seconds)
done (took 3.271862648 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763881612 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.29478767 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208388927 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50061833 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.183711292 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220163637 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686288029 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350948975 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.273425252 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10402334 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152024387 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.402019706 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.14130077 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692020459 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093679941 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130538199 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181777851 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455682244 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084171979 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112866414 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119100739 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145000561 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132984684 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095380139 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191678186 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085920408 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.204678453 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112229067 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082937411 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.298598902 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20387008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697426315 seconds)
  done (took 11.120365249 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119152088 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141120356 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101013253 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142211181 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139144511 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102937044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087294782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100374357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127354796 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181847591 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133767 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128118578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097915571 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101493767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106567832 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249285547 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125383672 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124791435 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088585395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108058432 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125858045 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116881409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11296906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112288275 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170534665 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209921634 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114757092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129848695 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100337596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117047498 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146841841 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147796892 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097474197 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083703557 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177653395 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128721894 seconds)
  done (took 5.299129231 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19760551 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125113624 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178897083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170632951 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155406941 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166467448 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122676986 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257487794 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.137485119 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18072538 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149369786 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102544847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101161249 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086372131 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.143737226 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101945619 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.663311777 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169254895 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140507591 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121658941 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093825653 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102472488 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369335964 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.111034795 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08273558 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103148761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067526734 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168169357 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103409045 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.198927741 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125128439 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084260311 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139849796 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213566282 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131865696 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122951487 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100904563 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098004105 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.183904686 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092163679 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101484043 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105460351 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140022106 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139004205 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102427345 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100131741 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21151862 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08405477 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118596475 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.008715101 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183880881 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095302394 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098778838 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332695733 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102599167 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101471174 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079923307 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.301943601 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138252912 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089491015 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096759397 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08368564 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099104442 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080350624 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.103242837 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396659219 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099268473 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901069921 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084052389 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108465481 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084093146 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101145423 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107839354 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090351346 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118495343 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082762554 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10255119 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081400899 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099165947 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101528988 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095605622 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105868564 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082484444 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169724554 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083845871 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118163854 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130333547 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087562228 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099252487 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13427538 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105228708 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0859151 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141291955 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083663749 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114011013 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103309257 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145940021 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085144422 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.207901943 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095441172 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079563042 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129551245 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105294052 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135517882 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11512564 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084549623 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106008946 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081166886 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099775039 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163440778 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082817635 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102332676 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085425695 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11496778 seconds)
  done (took 23.44796204 seconds)
done (took 40.549504493 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.356892148 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107476749 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10776069 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107143404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104956798 seconds)
  done (took 1.545249924 seconds)
done (took 2.279841285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296706447 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181938369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099026055 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175898357 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096698474 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184481022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168306073 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116900902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.191751893 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098119027 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17189516 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079882594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098454339 seconds)
  done (took 2.721117232 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099207376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119206828 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086451628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116012752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080033604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115518391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113522217 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104635644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113562093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087442214 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097423155 seconds)
  done (took 1.864639133 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097434139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116667012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085733488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113575096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07931738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114673023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095517865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121382257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113833835 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088174093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097810022 seconds)
  done (took 1.854518436 seconds)
done (took 7.166443886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098124836 seconds)
  done (took 0.825855718 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.044708399 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.106966542 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119257642 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161530483 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.336420821 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205772265 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56749545 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133025208 seconds)
  done (took 15.6120167 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.152694959 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089167001 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105027119 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086118281 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105894954 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102344787 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088477368 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106514464 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08820634 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104444136 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104443511 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089167682 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104121108 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088705262 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104206582 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085752997 seconds)
  done (took 2.399906266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.124173407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122808196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111481246 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113329219 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108707594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090794833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111713052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107764198 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090240966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10794023 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110467246 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.093138899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109259962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100642214 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092722366 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112861694 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106312042 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093323603 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.111873344 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111560661 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094427509 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098948184 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108179071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093334734 seconds)
  done (took 3.368455845 seconds)
done (took 22.938067886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166803371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113783663 seconds)
  done (took 1.016147533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10270125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120747878 seconds)
  done (took 0.964110572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102537824 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099797881 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127164767 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114351187 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083720399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099834458 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12328859 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084436709 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099992087 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101073119 seconds)
  done (took 1.78088665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085838703 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113472981 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10598507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.102009228 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109007672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098879929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091621022 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102578656 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11358289 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080208172 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106254321 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118596294 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089300416 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120487281 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109409878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105270602 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089831703 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102874602 seconds)
  done (took 2.587959839 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082862844 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101012444 seconds)
  done (took 0.927658198 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08454441 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098015714 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084940691 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100393138 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097888331 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080427117 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098506262 seconds)
  done (took 1.387923525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497672751 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141213503 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261752082 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088540245 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125357583 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.313723619 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100900196 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107056441 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087153811 seconds)
  done (took 2.525382954 seconds)
done (took 11.933456104 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096859133 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121786302 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.1198943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.502749394 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.126036515 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083293329 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.165641587 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261763106 seconds)
done (took 2.228136018 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154860072 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335101904 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11955727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068643943 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098723489 seconds)
  done (took 1.372027943 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082535163 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103741987 seconds)
  done (took 0.937771572 seconds)
done (took 3.215920321 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082422526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100873502 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080368314 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101100838 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080245804 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098460891 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136094658 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083067322 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101974787 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080795223 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.100208819 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083158874 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.100579655 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.083415485 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100375183 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080294825 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098608875 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08340494 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098997218 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081044743 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098368094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082692071 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098398724 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080697533 seconds)
  done (took 2.996284174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111537398 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101359846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107005551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090758852 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105182896 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106599717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088823379 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.102079793 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088824816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102792 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104407483 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088050446 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102936853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10440702 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086069949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105707669 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090127482 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101766459 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1036291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088133998 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107319059 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08480072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105571609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107093447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088407178 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104693627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.104348691 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08505844 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107188115 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088490074 seconds)
  done (took 3.716021448 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088959875 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.099071959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082328843 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106853896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081227241 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101255784 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081118747 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100257108 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08246295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099310897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083544986 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099087645 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08149783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100466549 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101299511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084939682 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112238507 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082379996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099596867 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083321358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102707219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081780359 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100079674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081853746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09843312 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081164851 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099826954 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.099146217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08232325 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099667353 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084920476 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103592153 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080751163 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106624708 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086131276 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.100721955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085954885 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.099617265 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082152205 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098893575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081579584 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099213448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081102527 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105310509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099350641 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083275602 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.100463374 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083540069 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100642675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085031858 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.099183461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081774331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101960287 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082867235 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103326603 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080945104 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099956894 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099377677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082842446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099930138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081267731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.099240574 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084308594 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100737992 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097299885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106853685 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081836039 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100959108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082567905 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102230601 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101452353 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096472202 seconds)
  done (took 7.452648659 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086813817 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110725239 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083421617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102337166 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080360617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100021565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103462423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08284745 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101373488 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088912968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100649975 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101288849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083311875 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112591614 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082587223 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101370835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089335982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097328415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.099787415 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086072408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100345665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085301897 seconds)
  done (took 2.843027966 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.226833231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109397548 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148319795 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122456229 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097055401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112031062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106359947 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091098594 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10736601 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105338338 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087618258 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107223681 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087679774 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10430467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105098485 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089072052 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106616235 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106320401 seconds)
  done (took 2.784230535 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096997889 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102473264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125844294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085340916 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103878344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086962364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108328636 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123792808 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087325563 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102830308 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112489497 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087736654 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105473173 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084757371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105438496 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085204569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10550999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103400082 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095349795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108792833 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109855413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094325237 seconds)
  done (took 2.984062612 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101042388 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104505029 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123293225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08795106 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099031265 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083147659 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109754326 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084785759 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111910496 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104450156 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0850687 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101591643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091726486 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10234325 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108213261 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08532205 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104888759 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084798258 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104736491 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098474331 seconds)
  done (took 2.743302079 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11086139 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104396313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104916539 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09719401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104303799 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104852503 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096583455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104147357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104666624 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113602991 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104925265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104650381 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096915028 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110512873 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104745662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0979863 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114912931 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114944522 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10535875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086648324 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131705879 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105411167 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095836662 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105447186 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104624839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086429026 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104866007 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111019173 seconds)
  done (took 3.697581149 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196672065 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103482216 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082091001 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101184991 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082202589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101195418 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082247546 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101073975 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085066294 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101095319 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085869854 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103009745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0857877 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102486975 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085083628 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103295817 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087763558 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100882992 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082558613 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100395926 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084882721 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103908243 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103390549 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08336982 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102009062 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084374534 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100730484 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083008451 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102554132 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082876225 seconds)
  done (took 3.672426712 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096003486 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110901264 seconds)
  done (took 0.979483017 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083747778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119785305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082842835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106926876 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109655914 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085565639 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112691331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09077779 seconds)
  done (took 1.562555761 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103276366 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118766893 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087121089 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11847763 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11996994 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.102006123 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165356433 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106104626 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110193759 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083766527 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121450655 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083780461 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110648752 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084930597 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109562523 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092516665 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102058517 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111254471 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088445019 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102858053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086943393 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115044713 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10724924 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0821917 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106126877 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096259603 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113226164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105436285 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089853568 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114323835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091812849 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097104697 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103718197 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086501533 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10258292 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098713715 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117436101 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10696408 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094665844 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10646109 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115751342 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099015492 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109706258 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092122295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114755205 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087409323 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105562167 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098899643 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083268082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106326053 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08162373 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103613441 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080265194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115615762 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090134742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11761665 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10408756 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087822605 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108121339 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089106124 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111261384 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106799601 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088103574 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103941152 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094037434 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108633239 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094234758 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099178289 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079482035 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103257782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113843871 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109709291 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113103552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106045721 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087714526 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102393431 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089921905 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106414298 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112155571 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095096175 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105170005 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111276782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112964615 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104625662 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089632151 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114637141 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084716964 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106786732 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103360267 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100593465 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103307808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084120156 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102333791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095127165 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108521201 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105155176 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083497848 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112458204 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07947382 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105691112 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087417412 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10479228 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114881213 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092464125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111623825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112309595 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.096326137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104322374 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088864096 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101636997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088377927 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108297102 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111183439 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08031842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108051729 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087669795 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106265266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093463335 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102575161 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105298043 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09441858 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112366738 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084844238 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101416296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088927046 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104947536 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109923015 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093345989 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104097973 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081485853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100725253 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090728928 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105485521 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109784577 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093214494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107790408 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081566389 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10306484 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110446772 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095031688 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10491346 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087230193 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109160315 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087452699 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104532219 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110760398 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088853824 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103953126 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091313867 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107305967 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081584035 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109050928 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108829693 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085167696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10894472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091917432 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107517499 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106666666 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084483192 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110790296 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088092408 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104402921 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086400732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103998478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114769609 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088754884 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100661687 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083781476 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113667057 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084150734 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105568419 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085651308 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108122982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106665959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084765133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105634271 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087616782 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135759084 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111507857 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088522695 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11087707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115404762 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087519229 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107644817 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08691398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107195193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087860612 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112789579 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110565535 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092053208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107310556 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083349293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111320457 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112871675 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085646206 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104011909 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085485159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109938584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093462327 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.110680213 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106754255 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08573213 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105800834 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091641846 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109128049 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086397562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105802272 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111451979 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0866889 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11326436 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088301972 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115636927 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108902296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082600759 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110412289 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085736126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111837876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100689526 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083384365 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104736112 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088774027 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105101674 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090230846 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100329824 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094561927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113919717 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106617859 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086069328 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106259559 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096161451 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107649383 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090660755 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109395562 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111735232 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100075417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104953396 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090181912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115390408 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105722923 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080507074 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111609598 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085204992 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104830216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085547799 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104445093 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089117802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117111864 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111249506 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081019693 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108683071 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085315993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104918743 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100873433 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094132475 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109188673 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08874837 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115351366 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106986738 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087637767 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110096428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087152208 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10804313 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088479129 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110410067 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107218762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089193654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105262806 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090245192 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105768141 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085937198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108877988 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08767072 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.1065834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113282537 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089058472 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106959465 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090505432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.108102939 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088777644 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107455722 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106855755 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090731105 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107281327 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088122419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109284888 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082141762 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114244818 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106803084 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09597263 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106299578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084215418 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113436804 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090667988 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113004911 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107626708 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088815447 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108412097 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087196379 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109361566 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115174924 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085348375 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116116932 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094011384 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107150499 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090513053 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106495344 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107707092 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086492669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108515122 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088929642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106352303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086595675 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111410341 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108755535 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087579261 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108515258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089350018 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106381734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089447715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101462363 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087068207 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106018382 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107116311 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095899687 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108019946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090759588 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105990924 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089186322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106607009 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085022121 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116326714 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117222463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08907269 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115967579 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106373978 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089664806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117138326 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08100818 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104922606 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085236976 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105180482 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114665116 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088930124 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116538257 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088191516 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106665817 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085294248 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107573022 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105068909 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082608986 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10506163 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091722542 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109136608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087301329 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108572256 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089986084 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108240433 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114650465 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087106928 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108928866 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088765036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112747209 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086092482 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106061755 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09048206 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108170151 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104709082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084098408 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10659427 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08951158 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106939882 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087275885 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109237992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114310163 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087974929 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110745191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092783974 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101397099 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091362075 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107137812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10739531 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087057979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111482605 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091402413 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108702444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09521457 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107539861 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107760228 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088461977 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105990909 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08830818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107866199 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087836502 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106907284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109032041 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097180416 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10587546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089898555 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106950219 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088383194 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111219454 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108364792 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090201762 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11558882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090535582 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109641251 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093719635 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111215877 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110654399 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090675618 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108935707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093995183 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106924478 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115534688 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088028931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109044163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089810949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104590783 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088136715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107195321 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087387887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113783283 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10950619 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087282609 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106779425 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086530788 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109666314 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091888673 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116864301 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110378393 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091382706 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102464886 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085350553 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108422732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086545688 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109348867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110174259 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094254548 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109508848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08913292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107018016 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096262074 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113964166 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113052712 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086163633 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.1128178 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089756803 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110647422 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108784599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089088964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110141986 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094085842 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109443114 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087602579 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115831769 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113308211 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090175825 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109397803 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089162888 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107831861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083598142 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108930346 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090667014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115647448 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110637255 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089128678 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118226362 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087519113 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108099331 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113284913 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087784948 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115600182 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083186631 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108280578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09020856 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110954711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102916192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087469128 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105595234 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090998957 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107874609 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08392983 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118332596 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11600598 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090375074 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107190361 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087529246 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103189666 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083844069 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107198703 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089833922 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.1100298 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117676557 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087690127 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107427309 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085023182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108323516 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091579314 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112598194 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084485172 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103863681 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106847082 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09124137 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114950177 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087588118 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107912911 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091892175 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110139998 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106889371 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09410092 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104503359 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092482325 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119618585 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108652625 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088968143 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113926356 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096130698 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.109059319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083884973 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110333297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111023667 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089413867 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110001092 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088958822 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123743078 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111781646 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089259313 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107373855 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091790845 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107288432 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096812385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110600416 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109918176 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093999544 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109896312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099017272 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11093577 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114375652 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091342715 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111366093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087977155 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109186709 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086349012 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107247942 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090535156 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11057251 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113988921 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097503384 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109143074 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118241445 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09755452 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113416609 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0859522 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107649042 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088912422 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104798424 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090122496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107616567 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106544735 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0873013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108640928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089744814 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114044878 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091423944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11056638 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108135891 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082714143 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110678761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092042019 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109854226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08577919 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109506258 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090821024 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116158875 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116552828 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089915096 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.111105068 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091246205 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109629841 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084316829 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116004046 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087464461 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112907423 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108286706 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089940327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110767948 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093134894 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11514562 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110948627 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091853187 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121259613 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092308089 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106735165 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086404644 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114501543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107842432 seconds)
  done (took 60.898636516 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152836389 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096843604 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104415225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084442258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11968782 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105600274 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084991332 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105973431 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086272388 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107644828 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084345093 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104306192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115926014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131752944 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099689503 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11045759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104582413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085972287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103586775 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085055024 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116177316 seconds)
  done (took 3.013210642 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108162001 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12331139 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122109181 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126115914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095360721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121734595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120317857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123040452 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106435104 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1167855 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125416846 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122309498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097069124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116742955 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116674227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098317103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125130908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115412827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122766319 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101389248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120615471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121945711 seconds)
  done (took 3.367099759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099696413 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.1079653 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092876812 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104040303 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08887757 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103380082 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093058559 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106287647 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112247933 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08704951 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.108441658 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08804859 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112512504 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083622268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107674704 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086381072 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160455663 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114249002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.1088728 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090369605 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.105060443 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090793478 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104331378 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084424125 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107646291 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105106146 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110382494 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.106985744 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088852409 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.108247649 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089164626 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106674027 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090392845 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109542985 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087505438 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108646292 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088432344 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10971006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.104006372 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08694649 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109899977 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084675042 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109042921 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089634093 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.107174983 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087420103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109933 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088616185 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104702712 seconds)
  done (took 5.764037309 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108015944 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169379901 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090911719 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150394178 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126958557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119610348 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093064461 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128084886 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108061816 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087517266 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130002676 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127609929 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11079677 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094929424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.118612061 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110260612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091914823 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108965259 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114271322 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089549844 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115421003 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115952795 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105873007 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125283311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114606685 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108894577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089551335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115346535 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124857789 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095815094 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115568222 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117414692 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127233332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095200035 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108858961 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092584675 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128194234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11117418 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111985627 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087571285 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11209705 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09531011 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116455099 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129311499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090462337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115909365 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109752446 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086644912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124663908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112584376 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.099532677 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127760105 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114988812 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110251979 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.096226182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126995134 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.110139237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088737304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113618777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123866736 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087274638 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115047881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126705966 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091384652 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119597289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125732038 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115550733 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094698865 seconds)
  done (took 8.560519169 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096045915 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116418188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127796508 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128725008 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097847302 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118447166 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117471605 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.097235317 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118366602 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123923835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116860195 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.145503271 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09136083 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122127681 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117711453 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096952478 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11952765 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117474297 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117939716 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097150661 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118688083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127687207 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117111351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106570462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149170553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112286269 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116718919 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097838774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128898515 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117416925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131539448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117545663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098298365 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127952511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132417326 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118175768 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089691313 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117231323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11778865 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097552618 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112193113 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128853897 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117926583 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09116726 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117411387 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118525014 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107899146 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132016828 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120990658 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123930041 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117710489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107039542 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118434665 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118670335 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127808193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.154446495 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107484565 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128814874 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118165592 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128003338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128833154 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136736438 seconds)
  done (took 8.124660437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111103275 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12160116 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124998781 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106097598 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088019921 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115312815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088276625 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108915742 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121716764 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101389193 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124722537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115366291 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118891474 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102323158 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11612026 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119811554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115180878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096847587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12112179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114965475 seconds)
  done (took 3.070010986 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095292803 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130583623 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090942012 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119767822 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114963252 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098388384 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114189572 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113849195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092015858 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113779063 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124139227 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103133863 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111839867 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118434003 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103301076 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118792816 seconds)
  done (took 2.599731065 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099795835 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12450164 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131581361 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089886338 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110118672 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10816617 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090045569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.107224036 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086860277 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128967168 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11158107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09273333 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111631984 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089504652 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108194289 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094400284 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108812882 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109476964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091161075 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132843506 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122231903 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09044547 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112001904 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092870753 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111929173 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11802275 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091522296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110045559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088764546 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113244913 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111942918 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099005646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108626937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089207528 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110177133 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110158299 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091101945 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112247505 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.094671101 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112996234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088335127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112094539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111984895 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091535682 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107514017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091783179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107991665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117510059 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089005441 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111524846 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0915374 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1150997 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112511941 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102613253 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115202964 seconds)
  done (took 6.622796113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101895731 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11179553 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08574867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110555361 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094456981 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114496618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115537905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09434663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113818437 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088658103 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114985317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094669096 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114964988 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115439435 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092646333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115377568 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086449253 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114720966 seconds)
  done (took 2.721949667 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093292221 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106678608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0981457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111582583 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09040671 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114882322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107456418 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08983155 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110836135 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091127857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111914289 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093353033 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110537456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093388712 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112408754 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111613665 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.094295241 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110463083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092427429 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107329985 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093556209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111294413 seconds)
  done (took 3.104928131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.126110604 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132702524 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097933979 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.250291008 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.110227464 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.140949413 seconds)
  done (took 1.707517232 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111584907 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125882801 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113378094 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113403163 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123005551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114012764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093271522 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116132847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126390759 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129196728 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094739423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126246456 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126503997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125439486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102419927 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122485544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115424557 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09491235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113839211 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136127583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114246652 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103889616 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115844869 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114561909 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093031316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125235173 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125713916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131010763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093470687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125954101 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121831897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114918317 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104588005 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131115716 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116233594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126974158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094121823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137961833 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121915882 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124681953 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095366085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122951543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126506686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121701284 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104361651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115527377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121440792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094593774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117288662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144322444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123257769 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124599414 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101983398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126504879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125845031 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145067428 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13069626 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125845988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101660654 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131789176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126228991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122486674 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126086905 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130063851 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101670695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126319583 seconds)
  done (took 8.64644582 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109066534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133388515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11650655 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131843941 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105101114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115736271 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115770547 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093921108 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115791073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114900547 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161704958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094342658 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125666919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126218038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115676079 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094373323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116134547 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125508033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09269753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144530429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116113708 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125864191 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126165726 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125367585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109149208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122947968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115586475 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094382238 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115830299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115088429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122104538 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095231407 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126850836 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114097894 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103757279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116259081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115181126 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121187594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094721428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1220644 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125623392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137683976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094745537 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115326465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130975731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09304685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116472773 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114863183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09364751 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115779706 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130575023 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130711689 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131643328 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105264723 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116014148 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115747053 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095296244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116335828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115437159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100518472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126864067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115667416 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144930193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115652535 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094751318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127140834 seconds)
  done (took 8.521374415 seconds)
done (took 162.901432503 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106136911 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147012645 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.105010881 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177267415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108456849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121116019 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140772862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101957852 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1119228 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089626683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114055746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.115430858 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.157592547 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108139075 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090062621 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111579743 seconds)
  done (took 2.757968967 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203563038 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.268962816 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10870774 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114252271 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.117089482 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094813404 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112253504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098429134 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117044278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0915506 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116591512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092203168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113201244 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091598353 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.118758898 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115363649 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092339382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.115964178 seconds)
  done (took 3.037434273 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115468328 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148702392 seconds)
  done (took 1.124281159 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12142565 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184076496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303286167 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157365942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122323524 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136182304 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165133884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140111246 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.223484643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132338001 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131651698 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.104114762 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149442727 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.125141972 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123047374 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.105505375 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151725693 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121290771 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101563438 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126245083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146653799 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09227508 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.124307291 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098869623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.225882084 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.107039795 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11307259 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.092139863 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125542838 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11973766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098452851 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129665024 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122068814 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18173967 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.131279563 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170295231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127745018 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095151082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118313042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112877935 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101387041 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121845865 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129881977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120728412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090799491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12027513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088481406 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108075153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096741011 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122966556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122409185 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.099317878 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189784387 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105496227 seconds)
  done (took 7.927792087 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.838837473 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156288687 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092698709 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.939083679 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146991817 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109211883 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.836438276 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142522071 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245323971 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.81538513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114180262 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132488302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245368972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248001567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935252769 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319511719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687477055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134615139 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147415658 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163619576 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101964587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14501767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137908182 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.467258852 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.121859324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095306361 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123781168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127543213 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169779297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096307555 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122440943 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189401609 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283073742 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190069906 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11795529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112267907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091566951 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199136496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251891948 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225285725 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186900343 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114421503 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096282174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129580991 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137352806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092852492 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198082989 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186932397 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182757362 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123371084 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127454704 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104594154 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128827355 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177235352 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.132103316 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330119457 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338700183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095704994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128538099 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134729864 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277733487 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110249023 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241815972 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145715213 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225640958 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096528773 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802276227 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.178956837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120257688 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101769045 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125927568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124045433 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126147826 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179865878 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402911772 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109167938 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123150662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095562627 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241586168 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096082281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119728832 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.172815879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124775835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124931504 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108808365 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131700225 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181799011 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26333224 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10681012 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126793551 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119531927 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106432906 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121831956 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222494239 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.235403407 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173815228 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245274149 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121665393 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172118886 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173394214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125772893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179771133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125873354 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133303136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106996719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232081388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15560885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.133749033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121941147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.102945014 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158682053 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121498263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09795957 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.199165038 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495567375 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.202120563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.093514413 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121941212 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098835472 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187466529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097594488 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269621711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12218476 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176576463 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118420387 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089673606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12000579 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170500186 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126883429 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120988578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102570419 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120956712 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237157883 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226961684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125808324 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228153244 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188493854 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122613807 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178215736 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122925753 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174235098 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124250655 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121605992 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095803537 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802434278 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125574606 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120103788 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096337764 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199629591 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11337736 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104203873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113895784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087494535 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7860397 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115927787 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10237034 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127409744 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120979467 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119111289 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097566873 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117796431 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168756566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238962732 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122361343 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0960539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115162209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165554965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119964775 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091565787 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114611447 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091865128 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121954225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117060266 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105292561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198631362 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168651375 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229346674 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.607691594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092087066 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113681004 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238385159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091798617 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298664569 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119645001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233081528 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171155295 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123097212 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325199568 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.17220986 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201107405 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094576514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20124305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088661682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119133492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16991199 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113322655 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098279134 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.194122127 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108624731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130933438 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.984281708 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113366743 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231838927 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088781955 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.201803643 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099431636 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12625079 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305294569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091132358 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131302818 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169956553 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117903144 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114039563 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704038222 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114417211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100259818 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121038983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231937929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168644888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120537149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118967891 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100820787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189105175 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213960486 seconds)
  done (took 45.381323079 seconds)
done (took 61.085942951 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.299022466 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216837775 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263483821 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173263821 seconds)
  done (took 1.907427333 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179306111 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153690768 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125090925 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109714461 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155585268 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086534114 seconds)
  done (took 1.691244525 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.394356558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279489324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244478966 seconds)
  done (took 1.802227611 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261532199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278777008 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334393293 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423699957 seconds)
  done (took 2.285747586 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.291090134 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.155738337 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.145202714 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.177147054 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214946385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.308665662 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.177480771 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.255493454 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.168088574 seconds)
  done (took 2.828539002 seconds)
done (took 11.400849495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Int8, true)...
    done (took 0.271080189 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.148018561 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.256956761 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.169217919 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.255107452 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.278306441 seconds)
    (7/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.260836132 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124829751 seconds)
    (9/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.187157932 seconds)
    (10/286) benchmarking ("sort", BigInt, true)...
    done (took 0.247733916 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.123874058 seconds)
    (12/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.278893668 seconds)
    (13/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.274212805 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.133755324 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100889755 seconds)
    (16/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108420979 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12462487 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.127083676 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125335993 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.232855125 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.223370893 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.119351108 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124908367 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.204238133 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131845144 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.236769396 seconds)
    (27/286) benchmarking ("sort", Int8, false)...
    done (took 0.198811254 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.134689624 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.144548876 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194048393 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103926522 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143171474 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123540282 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.219717761 seconds)
    (35/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.130815927 seconds)
    (36/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.162453603 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073094565 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.129383271 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.103252792 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.115823275 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.158314116 seconds)
    (42/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.189680954 seconds)
    (43/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.132971289 seconds)
    (44/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125363806 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.247144079 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.109774041 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.130054559 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.200876313 seconds)
    (49/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177159726 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.186179749 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124863488 seconds)
    (52/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.136557796 seconds)
    (53/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117453338 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100276649 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.121014061 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.250629797 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096147236 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.160159352 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097467391 seconds)
    (60/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.196382671 seconds)
    (61/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133894862 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118225784 seconds)
    (63/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180777998 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.152624322 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073814685 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195447838 seconds)
    (67/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153332032 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10160507 seconds)
    (69/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116077568 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175641858 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124850806 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.199506984 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097426002 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099785092 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.097090999 seconds)
    (76/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111895582 seconds)
    (77/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168865729 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.094285722 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.132167619 seconds)
    (80/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117745512 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094463152 seconds)
    (82/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192963318 seconds)
    (83/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.148778641 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123757461 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112918793 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.175415547 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.119245309 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.120755799 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093773405 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134932363 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.19486765 seconds)
    (92/286) benchmarking ("sort", Float32, true)...
    done (took 0.247884922 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.107032099 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.184858884 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.148344054 seconds)
    (96/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.080066896 seconds)
    (97/286) benchmarking ("sort", Float64, true)...
    done (took 0.248602257 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07188338 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167876577 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.197366103 seconds)
    (101/286) benchmarking ("sort", Float32, false)...
    done (took 0.184777637 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112620012 seconds)
    (103/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125368818 seconds)
    (104/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.073340536 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.142347045 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074063419 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.146374776 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.204872723 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.122162784 seconds)
    (110/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.127879329 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.081265449 seconds)
    (112/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.126481085 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.119195081 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115147754 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119671918 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089885931 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069056 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11969107 seconds)
    (119/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15300746 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106568252 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121215518 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.18434016 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099383534 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118562188 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096384204 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120737057 seconds)
    (127/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12329716 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092060892 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11089737 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149354479 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120376657 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089129873 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121890934 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116666423 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070620113 seconds)
    (136/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099045182 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.149090594 seconds)
    (138/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193942557 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090905619 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141751655 seconds)
    (141/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069778314 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121292825 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071759653 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120208781 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079763171 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.193464954 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070277736 seconds)
    (148/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.127080057 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11323755 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097077762 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118036542 seconds)
    (152/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.123641137 seconds)
    (153/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.092002798 seconds)
    (154/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095922294 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067490628 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121477226 seconds)
    (157/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188371524 seconds)
    (158/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096577839 seconds)
    (159/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192795153 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122455014 seconds)
    (161/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091151655 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101914136 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069965679 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068527039 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112735061 seconds)
    (166/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068766778 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111298835 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095954218 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117631298 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098212611 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176593881 seconds)
    (172/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068607914 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166369102 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068663258 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137074158 seconds)
    (176/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11317046 seconds)
    (177/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068423482 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139454969 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088931019 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141168402 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124801217 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077209564 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068733353 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090675591 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068241409 seconds)
    (186/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118656224 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088550026 seconds)
    (188/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067679156 seconds)
    (189/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090696641 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.115387835 seconds)
    (191/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176277004 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091733283 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098978805 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174543119 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099025774 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115202053 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138774139 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068849783 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18346435 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097208281 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.233756401 seconds)
    (202/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104625659 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092729362 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.148377928 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088606985 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11240331 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09781315 seconds)
    (208/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091834143 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09813596 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110549866 seconds)
    (211/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152162316 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167183093 seconds)
    (213/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.197740085 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19375608 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074038998 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122598949 seconds)
    (217/286) benchmarking ("sort", Float64, false)...
    done (took 0.178702954 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068252556 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086727113 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093208055 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090166308 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.094900678 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091260806 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091608688 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.12331111 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225838882 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119502737 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.120675174 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092828506 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089323842 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111802178 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078814806 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.408170804 seconds)
    (234/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094839028 seconds)
    (235/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112386381 seconds)
    (236/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067299794 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131219993 seconds)
    (238/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068354473 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091821241 seconds)
    (240/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078006892 seconds)
    (241/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114152588 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11517683 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114534986 seconds)
    (244/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090201338 seconds)
    (245/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115425718 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089484671 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093943134 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078014534 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119399019 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095208115 seconds)
    (251/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091707898 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097810699 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091053524 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107945131 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.09096512 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089614214 seconds)
    (257/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166482706 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09126128 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092208146 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089468417 seconds)
    (261/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120742878 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088505963 seconds)
    (263/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1376398 seconds)
    (264/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069272449 seconds)
    (265/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092525799 seconds)
    (266/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095080492 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11152958 seconds)
    (268/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084492671 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121005304 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089028413 seconds)
    (271/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068633739 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112867357 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119322332 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100709218 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067993249 seconds)
    (276/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.101408387 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095217299 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112707907 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088738351 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127682647 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068118104 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117812129 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069495128 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12069661 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078037724 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113678902 seconds)
  done (took 37.669329274 seconds)
done (took 38.567208859 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106774833 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15293249 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0975225 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141190113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125873822 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093231872 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120411447 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123811759 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102286081 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126788767 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099946009 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094399751 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09879832 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122852587 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122092304 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119624572 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131320911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.100660867 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127504554 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114278505 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.099908967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11162501 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091156091 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070266851 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124064301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119811739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095089423 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12175324 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088780554 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112725152 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094313763 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119547785 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087768526 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126322109 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118626255 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.098054833 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122817734 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099244781 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11558248 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088792636 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120435827 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089456917 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118543592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119503112 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094802529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.117313665 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098761411 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125779467 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14341074 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099591893 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.12749815 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103943877 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.128268892 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099982348 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119030522 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098927258 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117310859 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144077663 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.10278778 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122892494 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102584131 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.127541837 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098735125 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.125245526 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121819425 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101710822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123494652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095216622 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125105641 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094762645 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112178644 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120947815 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091992092 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112169323 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098556988 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122819345 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087917382 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11742006 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096301721 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11698435 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087837808 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114309721 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091022525 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118653329 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090802324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094432038 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092790864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118732753 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08889554 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120586415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09468983 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.118962509 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113325727 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100452336 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11180159 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093983691 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111109441 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088682613 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113827918 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093104622 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112608591 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091738476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121375162 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090758866 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118340641 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101453407 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112303607 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117525338 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088809653 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111814254 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105935687 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123068614 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088765069 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118511823 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091230714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123149024 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090722729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11646841 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092738654 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114280811 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094532829 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112084683 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114905971 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09931625 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126846209 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088720488 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115849786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092130004 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112344672 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094767326 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113063179 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089306119 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11483602 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079008279 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115088151 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090906674 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120709098 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091722958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121597136 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090575052 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.1227506 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116931678 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09566065 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117758554 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088783971 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099050398 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094689838 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115291536 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.0937713 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11264726 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091354374 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112219567 seconds)
done (took 17.386831065 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093743587 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186964381 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156785589 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147730155 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110156111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113778604 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123378 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121672355 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115894717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145172523 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112364806 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133888182 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15296194 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093089816 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11519115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092824283 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115108465 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128888318 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127739767 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137863685 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165672867 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112224983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148643323 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113613221 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123494005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115621431 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114159186 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117347313 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093748698 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129593166 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110274359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116678881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089974006 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135356161 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130194563 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097333549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11289957 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09736082 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114103759 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089175623 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144374197 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136446356 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119553848 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095657856 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115987254 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09277048 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114756234 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098958355 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124155545 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093433056 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12847767 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158522722 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117247218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.098872136 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.112841293 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123543012 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099060677 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116256357 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090810947 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115318647 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089610755 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116981505 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105382375 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144749071 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117494474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123475932 seconds)
  done (took 8.790368792 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107317249 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141361631 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131794555 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109305217 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114127946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090998533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115322214 seconds)
  done (took 1.762203501 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090722053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140625985 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116343282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141343038 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137630932 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11639339 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125474471 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090653456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135004134 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115895091 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116581635 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155354585 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11831385 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099345604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14245929 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090001747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141743874 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114449075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094567983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142350602 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093945844 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137373483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116866627 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090993066 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133305105 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091377546 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167040359 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120136429 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092062462 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118542845 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089837676 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155387443 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133050361 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102872626 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115824503 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109043031 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.152040484 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088550187 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132027526 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122533439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108025561 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117780487 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092116136 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116210303 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095132352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128484014 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118914257 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091468534 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117678959 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115477812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116248671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108873263 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115762532 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094731039 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117746736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121765222 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100710316 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116462931 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115598206 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117436004 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110845133 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135599654 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.1327379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110782698 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119574243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107784304 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132657138 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119558853 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093114108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119296651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110391579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114528146 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092494374 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129431587 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092898075 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143882161 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142199318 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092896579 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126546816 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091304795 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117005634 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091199092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.143244752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119435895 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091759297 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1201397 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09479376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114305297 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090282334 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119705291 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089548636 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117630094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093915752 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117077899 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094340139 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13699603 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116142061 seconds)
  done (took 12.155496953 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092236511 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117124768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095587419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116982805 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092542051 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116710471 seconds)
  done (took 1.593126703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119718336 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120094376 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131095906 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098230566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158793931 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135623207 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.112930222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128736827 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135468078 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106825978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134484169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110456696 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141812761 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123581001 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109207492 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123043061 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13588318 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102560794 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129699499 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124034566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114102124 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123624133 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09843244 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136932892 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119442836 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097907103 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129054456 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130268084 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104231323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126175369 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12247442 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095284926 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122987087 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10036634 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136451276 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123638988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097236059 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122564581 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127618009 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096123931 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135716931 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098627891 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129024907 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122724414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101023683 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124342356 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121383467 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103019151 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136068567 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120509902 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095872914 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122448948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095991591 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122021957 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123629988 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102090414 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121138454 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110322871 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123582731 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123742711 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095837365 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121539943 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125634132 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09599228 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133192095 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09644489 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123838165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123304636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098499588 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124122919 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097215372 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120430459 seconds)
  done (took 9.461735383 seconds)
done (took 34.709906324 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697044278 seconds)
  done (took 1.661828446 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.846841313 seconds)
  done (took 1.81559616 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.196500127 seconds)
  done (took 18.197723784 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509102644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598704209 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.017820879 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172213243 seconds)
  done (took 3.266343203 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947919624 seconds)
  done (took 1.936947291 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28585636 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238398439 seconds)
  done (took 1.494395082 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772486191 seconds)
  done (took 1.752447295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.46150879 seconds)
  done (took 2.439632211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.3396316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184840244 seconds)
  done (took 1.519668086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568971081 seconds)
  done (took 1.551564515 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.862195924 seconds)
  done (took 11.855869418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27314986 seconds)
  done (took 1.271965386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306094028 seconds)
  done (took 1.292797339 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.511463757 seconds)
  done (took 4.502329504 seconds)
done (took 55.537656068 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103659132 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128954317 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103983411 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127212339 seconds)
  done (took 1.445364142 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1064847 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123497019 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106040299 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122970339 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132456901 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097919498 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125606005 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.104241054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12246054 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.123785527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098533765 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122229049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100977788 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125292363 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095157615 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126437143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127610372 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097754203 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12777154 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09921273 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121848866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126109486 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102300802 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121636827 seconds)
  done (took 3.749647049 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102015241 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120882634 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09823602 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120869084 seconds)
  done (took 1.426975749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102341026 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133295505 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107961 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12781016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134679546 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111485949 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119571596 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095055819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122381441 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102047931 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117513229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142302937 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108948305 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12727669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105003452 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117449889 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118579544 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109397079 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127264676 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102924107 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121441489 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101253862 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117914893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135904111 seconds)
  done (took 3.797335066 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174466861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130097015 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140906921 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097276751 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164028977 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143647618 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090783482 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143151406 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089743411 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134582472 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120524547 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136724892 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131853799 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1156817 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.090353829 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115463917 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103497703 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129404078 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09407065 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129983201 seconds)
  done (took 3.463664878 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101132004 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120151503 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090003971 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118711233 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101995446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12291408 seconds)
  done (took 1.647097135 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092911896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117020447 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093043369 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115886048 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096443147 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116937049 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09106317 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117558081 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091834891 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11751231 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092201358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116257618 seconds)
  done (took 2.252379586 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514973111 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12284663 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122548664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091931884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124567629 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091707583 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132515999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094691058 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144302535 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090410405 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117846359 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119864223 seconds)
  done (took 2.760244358 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24623051 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12790971 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288075282 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376996471 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188631742 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175918426 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305986883 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167072786 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.235668562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168873558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22862447 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180222783 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132154329 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246215533 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144583977 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121581679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223171639 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28679263 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16415654 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254158967 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172530867 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171495932 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184983035 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155987627 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141717299 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204370806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131152432 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112117737 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216468301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182464766 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190674051 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165607537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167074605 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23751272 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298587064 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202608852 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285032222 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137295835 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144468507 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171221889 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271033424 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144228922 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212192161 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166011474 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133617879 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21116686 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160774356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.230384403 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.123111797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146221455 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228138115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200321669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.215496539 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14226569 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331195991 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154904367 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175755339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193871304 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225615443 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23310935 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198413935 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122207607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192211654 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196795569 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217234521 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169324057 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193793841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150482627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18226074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199347733 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193014466 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207602136 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185723142 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139280629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173692617 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174840179 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174087777 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266618193 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188701935 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125099497 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173103651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152292973 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107135899 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1976797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128211759 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221831815 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147743339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166566846 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214025467 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161873068 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163869092 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217467678 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179189559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150885951 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08655966 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156195178 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157848531 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175122685 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14211955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159671771 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128120412 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133161532 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173428842 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127105577 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189519709 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119313879 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171054008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188970648 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128913899 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168186557 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126596087 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155328103 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194717623 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230279331 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142600955 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109785716 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239721347 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186193688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145061722 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180732625 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209269954 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147853971 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152233388 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202804994 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250062156 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145033057 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206108401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151582775 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138232425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106238862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212007705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158535604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.137923757 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135682036 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212195749 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205465033 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126826003 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113475554 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231863349 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108786022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134766697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150628088 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151203299 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112941326 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145943617 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149572271 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180532017 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210028147 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130021836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194350202 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123791567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245954405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14298177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.154788217 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125248573 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123679698 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219687486 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230293495 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10539738 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237600159 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173095134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22715938 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173376864 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110413039 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179618401 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133921977 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122513053 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198456135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170772007 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164583402 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198716183 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2267271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191983998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186922757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169243827 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203203967 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.141656938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156016305 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140023767 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165391431 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162062738 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125667375 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1152913 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137324166 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153786793 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145931264 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135706052 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198754991 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174753407 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219330542 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164697522 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126215532 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213444697 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104628475 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176174795 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206348266 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122006939 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22849191 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197320071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192963388 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147105976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233532949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095924302 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128542104 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146849808 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171962641 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109088283 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137570005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165815516 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186575003 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204369949 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175905997 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211773175 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21766935 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196302143 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09833838 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17146004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180378784 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181181827 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183548867 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143333227 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151983077 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181772085 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151732418 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215028613 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170643677 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178358934 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23121519 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153603058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107743209 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152886523 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175966633 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156695779 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175703093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149211036 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141215131 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156281436 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105741839 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191465593 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182615369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165816631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184681382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153574628 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19070652 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131882716 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167142383 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164852739 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167545221 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08345991 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171334903 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22628372 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145785758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163093386 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186741571 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13348984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311203727 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205719196 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190956033 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141476193 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159737082 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165138523 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165099123 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169353967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181656037 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163294329 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191786905 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162962972 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139111727 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13981848 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125516989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155169266 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135246535 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150555954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180680071 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140784076 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186134402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150359548 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16143985 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176556454 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152330983 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120049347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154141314 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248190304 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189722509 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195446766 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153447777 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177645539 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238017504 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101219715 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134643946 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135405823 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181634884 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1116165 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224891784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190474903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230501994 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187736817 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176582462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142985957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.095024767 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161829763 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171938045 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234928327 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149994041 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152468464 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201108939 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138939453 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107390873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169419556 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292845349 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145940941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217117555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083188599 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285739816 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127939363 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107834304 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165789017 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213638549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112381035 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182201362 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174386381 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154830668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165909907 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152632612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195864995 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242784014 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207253465 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183865789 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137297449 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16043577 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172890002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189279938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160305623 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141447552 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191578992 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19815729 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224535598 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117401741 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170823991 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171885856 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161221218 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221775875 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137998426 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211856304 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139073421 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19724867 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156994531 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142420802 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176693535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218704863 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116945752 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212609688 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187299542 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137394117 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108964958 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163863973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209741961 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124624807 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131565439 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181311129 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127874607 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200653416 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271682736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136232913 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156840182 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120947339 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138671844 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158418976 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162921307 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142279744 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14330163 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224381214 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.109189739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216804011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207034961 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173311098 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16859952 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148604101 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.753427516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.141222069 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19687917 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151049584 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185427199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154270864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175598774 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163988563 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17048352 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225944769 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159814814 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20602643 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228100195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18395974 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135535963 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162926132 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150885475 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147174638 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12818725 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170561266 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162968304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150107843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.210611239 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130805657 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136490734 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14182124 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203901316 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151875284 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184460786 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183550517 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143669326 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175903142 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191983335 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136839103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191936635 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216291678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116739878 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151978775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139010982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155938982 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271988314 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098302295 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215636977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192506512 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164123088 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172981708 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150509376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196876527 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16068038 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220171189 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118392419 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158368594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160594813 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14155277 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134988221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15787576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168406859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152140748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165481786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141061374 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195945125 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127324587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148437465 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290361248 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175667545 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250240493 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109562886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139578741 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163606643 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149140145 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18147143 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18276377 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139600186 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138359632 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109534952 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158933605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114546782 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160082407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194699729 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162117657 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24136951 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138584753 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255130802 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1430613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158463676 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089047065 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13507061 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154599921 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149983807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152792446 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198208751 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270439163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149744553 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107715488 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154013657 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129225335 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138252213 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165773072 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165914213 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184752068 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144516554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083610188 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16044947 seconds)
  done (took 83.860480711 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171647283 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134682394 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149682468 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20511546 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179223682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293748453 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213171256 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257070911 seconds)
  done (took 2.684324748 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096475624 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.155036039 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.162237517 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135079237 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093808285 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122091509 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.370406536 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135312162 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094266314 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.150649581 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174188202 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096470969 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.593216982 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099530532 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.123179119 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109697451 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.095210152 seconds)
  done (took 3.882060197 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.30461432 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4854786 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.022721566 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199372549 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.18187428 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122765849 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695127636 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11962555 seconds)
  done (took 12.216655611 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126929172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147797314 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137583522 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167941833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152630787 seconds)
  done (took 1.831113012 seconds)
done (took 125.999833725 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101824111 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129345124 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099793831 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132134638 seconds)
  done (took 1.542113302 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.10137213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071775611 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10264358 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076242671 seconds)
  done (took 1.439589371 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195448253 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171829054 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402180426 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073461804 seconds)
  done (took 1.602362305 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117811589 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135327135 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106349637 seconds)
  done (took 1.459567635 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10956888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132116942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104740194 seconds)
  done (took 1.444822335 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108288198 seconds)
  done (took 1.205131379 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113924139 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142399348 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113748685 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.14069587 seconds)
  done (took 1.6083816 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102625513 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129576852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114606914 seconds)
  done (took 1.444216921 seconds)
done (took 13.205928587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11088099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.521290734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41435784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112624963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722910844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382563329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043147356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148853043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16671054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096205773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141977184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673727664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.069486325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469733547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028362773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374827917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703560193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095191574 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121183793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096091056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027191365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094512421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123744355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093903985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70567473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427285646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096850289 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374811317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093801978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127080726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382970419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12504546 seconds)
  done (took 17.257402831 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105345186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18228014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127484086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097634311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124817206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096807722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126439133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094801352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179852336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124520578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11341521 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123173981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127827643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096885365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14437204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09411537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128116717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094481231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122642629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123766837 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114302557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123115971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096214529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123920363 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096384274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137474163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124881027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094774474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123060639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098367353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128287005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09703862 seconds)
  done (took 4.890213809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151499921 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191876116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129861999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129183896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170948233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126523812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202075691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149290481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184975617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095947485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142097327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094743057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15967336 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125468409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116355087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124059128 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097180268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123862917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122042941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097320178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142431829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095205838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124413683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095347413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125361025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138531989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097501159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123224779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094905894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128377911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099263589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125843458 seconds)
  done (took 5.230117351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101454151 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127124189 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11141894 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141073961 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097814059 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127540735 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098579722 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12575814 seconds)
  done (took 2.039922323 seconds)
done (took 30.515519782 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11453729 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128231715 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108731448 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136882125 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104153727 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.135903281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093780399 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136038767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136205024 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104657546 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140230884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093835972 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125879522 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094203433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137746169 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09900424 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136890297 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132355706 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.112706351 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136723059 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095731468 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134977657 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104326001 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138277673 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137638147 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10925823 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140673902 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101412688 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124756993 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09556786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128604915 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106823421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130053824 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137826312 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100353783 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127571341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096521225 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.124667143 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108486029 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135902206 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100069226 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135538427 seconds)
  done (took 6.119419739 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114050045 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144062901 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114068046 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082494292 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118031812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081587831 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141166521 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080255389 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111775758 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112525149 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104041325 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079277974 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079188853 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102792034 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078174323 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076888129 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110130167 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077858047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.0773919 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106841894 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081488001 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10224965 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08131741 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079383102 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105133924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0829425 seconds)
  done (took 3.639718915 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108456481 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142905791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116042272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186660251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163864932 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101900304 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136838612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142103438 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110948653 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123010744 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098164548 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152409317 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111408209 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132307537 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.123283047 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110717309 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13803287 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095983613 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13429579 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113386713 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139794908 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134162987 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113477543 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135185835 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094376697 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126460413 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098668674 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.144266527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12859523 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104953455 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128173984 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09741406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126492354 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106548119 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128215427 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124832818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115363905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138174595 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103912611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125831423 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102902782 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125585242 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145002408 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137284339 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126090472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101769119 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127332386 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133346146 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095482562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141488167 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104678559 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123472367 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09870246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12353252 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093980081 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13865838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095623862 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133187982 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.137371915 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10020795 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136479213 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098674371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141126196 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094591356 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133043831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.094020743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124511541 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12207643 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119406518 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125775799 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165161692 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096250985 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124649231 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104471151 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132933442 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102572015 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12559524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111404996 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136631379 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126351569 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106135115 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127210339 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098705692 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143190834 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097381597 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127027059 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095861268 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131621617 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097404782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125064515 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138385412 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095400734 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126313409 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114227699 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12440954 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095858366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131492875 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12800813 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094645156 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137177921 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10144029 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126400503 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105558776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125164975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097892264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134478427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129514123 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094169386 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129934708 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101895892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126058589 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096115821 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128374484 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096401715 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135091477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131028654 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100706324 seconds)
  done (took 15.175236026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.241248708 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222450064 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191344631 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301422202 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137631193 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120077579 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.218183431 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16297287 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125917209 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163792613 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173704768 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187748027 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.150586367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185082734 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173223284 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126001774 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143796964 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139961527 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251942611 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.266369617 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146431237 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103487921 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164400705 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16338066 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139875838 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13445919 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111683397 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138650048 seconds)
  done (took 5.915752056 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114488795 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158006379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100959915 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148179358 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151330743 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094944448 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130499182 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126047202 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108451402 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139405602 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095366374 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132378467 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.1328837 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105813828 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125393747 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105505659 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135592989 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097107185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129197107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100243326 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135889644 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133837988 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099825681 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123805138 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105191299 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124489093 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088915908 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145723832 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125088236 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117349393 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123721599 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103627573 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139404304 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125479624 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095333642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126486433 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097742995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126988431 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097244701 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123783076 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094810914 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108599496 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095032921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.14030569 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100447089 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111953041 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102171541 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132334654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096183772 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123256642 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097645188 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12911591 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127471573 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103599197 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126724357 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09699185 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128080427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087014347 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131638466 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.09805605 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11536373 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094596442 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129797041 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091125348 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132929669 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101754622 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125041685 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098387067 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.131384924 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101593527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127893558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101275939 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12390322 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097946606 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128301484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130309029 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100146684 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123836426 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095761756 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125823884 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077450781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125181166 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075652362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098400835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.124586094 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094032098 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127827886 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130806482 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111003595 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127780705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104262943 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126328199 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123031718 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09887424 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08418189 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128768875 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140696101 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113728147 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126220202 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093333431 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13962811 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127917173 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094976041 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07801702 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134722119 seconds)
  done (took 13.242027408 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135418177 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156059286 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126925901 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11496571 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158541594 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160910711 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104118439 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132936563 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097256281 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145167974 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095774127 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134285325 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095090947 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14080312 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158361685 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105181871 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127704079 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109432542 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12894426 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172407516 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113978322 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145241268 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143083162 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096303745 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131392909 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112012842 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164156672 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140466922 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109553605 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145351348 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110538921 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163186163 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146795004 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100381856 seconds)
  done (took 5.566722024 seconds)
done (took 50.768296619 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.224087658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444991618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20260652 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06898006 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.246359086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21391901 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220278773 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.20441762 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.811791142 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.208329056 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457540546 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.763965263 seconds)
done (took 60.198492387 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.313853926 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350065248 seconds)
    (2/2) benchmarking "String"...
    done (took 1.502536223 seconds)
  done (took 3.976484662 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.751871681 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136354817 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458771222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197920253 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198442797 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490779431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.914673634 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.581266097 seconds)
  done (took 28.100033076 seconds)
done (took 42.273037886 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.210672197 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.220263303 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230857348 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.190051167 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310756594 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22697076 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.514905147 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.216520731 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.228115569 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179658484 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231560546 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.212004022 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214927189 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.490741212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204719103 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204512251 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266162227 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.670323036 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.602571541 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209901242 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226457804 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.241445333 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223056927 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199688148 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.231705664 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212617323 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199851994 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218438061 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.754081084 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203939174 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21240336 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.697703961 seconds)
  done (took 190.581361146 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200963087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.348376577 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.421995551 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255334543 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.751292625 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400287807 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.362891098 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.793983103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.221884741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228064267 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.523013203 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.201562129 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.585299353 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.221228445 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231496749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.264744159 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.3945131 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.567488228 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238078448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366532441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212513126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.546424774 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.477007944 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.453117076 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.215212263 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.226435599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209555757 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.226589158 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.395275548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.334364141 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.212337603 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229453662 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827881465 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055849286 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225443613 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241255632 seconds)
  done (took 150.795770016 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.202184016 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201835056 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203024196 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23544912 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202546498 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779186469 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771515856 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.715391602 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.46689658 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.613273973 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467842244 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204223473 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296995523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218244187 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202461599 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204043795 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218817031 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247516407 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204263002 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203580821 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78481862 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218660073 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.353298616 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.396814445 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220093573 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240731162 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596027094 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205574554 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236701611 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536231233 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25347206 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204625235 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591252452 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.515170824 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320143734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206417531 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237823001 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204173782 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485319628 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204410929 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205035795 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206512463 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890199159 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207949845 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.780142161 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208557469 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.173605644 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208021092 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204789122 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.75023411 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.871697699 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225111368 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20505017 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207707022 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205376769 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206258393 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238665549 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.738611209 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304212069 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22324485 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205920266 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209150226 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238841246 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207084356 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205841046 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.29925583 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209300718 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.071576747 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276914251 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.345834466 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785386499 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209616154 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304842896 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327724814 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206310817 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206554691 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206622378 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206789139 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318764521 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20767769 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.620350589 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.383588918 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223779507 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.60245341 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308007361 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207981166 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630181665 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21064306 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20656087 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964015468 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304307799 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207436642 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208130007 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208120996 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.621913998 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776228574 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479865437 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211795981 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.709327723 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212855914 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207592815 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639290156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767635578 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905608792 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.213320977 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320977762 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385711823 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225914136 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207886178 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.612393981 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212553621 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265083231 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2118141 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606349934 seconds)
  done (took 367.598366008 seconds)
done (took 710.099895655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.831093417 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.825013554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.938939763 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.816268904 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.782198483 seconds)
  done (took 10.326066104 seconds)
done (took 11.460299852 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397846027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395853804 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269080993 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398529733 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242415587 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414461263 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375715164 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229582598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310500011 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290388052 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309853958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263475787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244660261 seconds)
  done (took 18.276600898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539426045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532817849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274984073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53239325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249800881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528737215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417569403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42143228 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425273102 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243785722 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223388018 seconds)
  done (took 16.524625041 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54821247 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520371204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278008675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548315305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251523336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519894703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414960676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426743834 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426903518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244945405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224498921 seconds)
  done (took 16.540248313 seconds)
done (took 52.47595102 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221362028 seconds)
  done (took 2.356814972 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25632879 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.4196832 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241244391 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224634611 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22102812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222038367 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226930985 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220660194 seconds)
  done (took 11.169000597 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.220071525 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220450081 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216104878 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217702371 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219341511 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218407561 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220021183 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221104846 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220769953 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.218034288 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221311293 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221188151 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218436983 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.220754886 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220596165 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218124588 seconds)
  done (took 20.648575654 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220891651 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218168685 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219790468 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219442557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218927521 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219118014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220164415 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.218558007 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219425273 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218950012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220018986 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219226982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21992102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217863017 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219163064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219860667 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218941413 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219051989 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224194843 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219739896 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220264094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21926961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220955873 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220616039 seconds)
  done (took 30.411506065 seconds)
done (took 65.722783844 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.835679951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.911546955 seconds)
  done (took 6.886070547 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223014562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222671667 seconds)
  done (took 3.589518788 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222733964 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221403611 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221826663 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221350939 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222307085 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222875207 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221522502 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222338042 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22181372 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224335351 seconds)
  done (took 13.361952479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22204615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222511856 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220443462 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222645335 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223377472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221118186 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223709936 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22244253 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223653636 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221109223 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224023315 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221206417 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224013033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222322711 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223915824 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22109445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220992542 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222090945 seconds)
  done (took 23.141788179 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22437806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224467602 seconds)
  done (took 3.588831654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.221546939 seconds)
    (2/7) benchmarking "second"...
    done (took 1.222050537 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222825809 seconds)
    (4/7) benchmarking "year"...
    done (took 1.222037178 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222763859 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221826526 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222443529 seconds)
  done (took 9.696472386 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224845768 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40186483 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506812926 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.83513243 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226288833 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229211613 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088200742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228926833 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230401313 seconds)
  done (took 14.11229534 seconds)
done (took 75.516421193 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.255416411 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.235181191 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.45028682 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.223555841 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.250350736 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.561989756 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.238443028 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.365962235 seconds)
done (took 37.723107718 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.229608461 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202535841 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.011079053 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.230797276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299664529 seconds)
  done (took 18.885577457 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274591494 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559089614 seconds)
  done (took 4.975843666 seconds)
done (took 31.234086875 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22629462 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.226186972 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.223817651 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227674876 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.224355485 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224390084 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227148623 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226653309 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227479057 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225847469 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224836748 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227582831 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.22690199 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.227573686 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227481915 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22497148 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224322388 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22763816 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225217932 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224877274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225457551 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227727151 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225740243 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225386947 seconds)
  done (took 30.568958843 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.228738095 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226279647 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228623094 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228950997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22490423 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.227864748 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228480782 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224897715 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228317949 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228917517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225289004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226184228 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229555088 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227095438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228638836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.225869761 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229187244 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22535258 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229919061 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226413999 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229438436 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22615618 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226698313 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229315244 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226496931 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227035111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229383751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227880354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230234708 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.227635285 seconds)
  done (took 37.973950554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234903564 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237227949 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229806908 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231917778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229752472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229061329 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230553562 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230340791 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230161485 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.229418705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23026794 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230692782 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231182853 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.23056085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231392943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230795073 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230450565 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230096475 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231494061 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230356951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231131212 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231395824 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231008825 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231257459 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231360098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230988891 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231797302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231467764 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.230739831 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232207893 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.231487367 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230592946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232339431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230841683 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23202927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.23086087 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236616816 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24012446 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232843275 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231767481 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232184737 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232201619 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232732668 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231638286 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23373145 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232314984 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23255218 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2330568 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231707038 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232325537 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233712094 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232788319 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233492959 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232673033 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232706243 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233163253 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231843596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233368283 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232998254 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235219121 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.23322675 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234149483 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234011677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.234441149 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234183686 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233908102 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234363261 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.2332296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233673298 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23399714 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235404783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235148967 seconds)
  done (took 89.878130812 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235295627 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232283267 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231288211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231838957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231309578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230807099 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234842186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231482672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234996348 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234219733 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233831906 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231505348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23573038 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234347347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232475698 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236096955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23289972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234189837 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234225318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234596973 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232443538 seconds)
  done (took 28.284908114 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235919016 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237378302 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232982626 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235707048 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232414781 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236137178 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236134776 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237084305 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235848315 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232542611 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233081934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235921248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23963363 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233316148 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234004439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234385338 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237304377 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235281063 seconds)
  done (took 23.386739079 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235399078 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233735538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236282016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233712628 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233667505 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236905878 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233075918 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236785999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236592948 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234381523 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236777493 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237285668 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237554294 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234071843 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237827573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234135155 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.238125718 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235139671 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236026309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234226574 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235200804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238724073 seconds)
  done (took 28.338030572 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237436948 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238185792 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235266703 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235303461 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235436546 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237417474 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238549284 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236282358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239078655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238772485 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236262296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239112196 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238279738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235732322 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237359316 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236984069 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23947179 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237176883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239703672 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23619767 seconds)
  done (took 25.901319535 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240730061 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240038397 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241543447 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241194316 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240269144 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241894085 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24123295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240632522 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241529605 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241116015 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240408162 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241032401 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240767674 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241738658 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240823313 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242073538 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241334663 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240325219 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240187207 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241280245 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24213208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240965901 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242594583 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241524245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242765066 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241436861 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241823367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241094048 seconds)
  done (took 35.909242281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241880505 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24144114 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239077515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238179595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240036659 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23851298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23985014 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239474937 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242580201 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23834565 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.242496645 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241915309 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241071408 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241700082 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242346311 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24195634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241583962 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239698465 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239224782 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239396181 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.242288177 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242249892 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242403818 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239615078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240102043 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242965599 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241043169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240347511 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243865359 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239866225 seconds)
  done (took 38.382785618 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261787153 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262511415 seconds)
  done (took 3.681304174 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242045897 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244602721 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242609973 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241165998 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240674834 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24399875 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243969899 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241449945 seconds)
  done (took 11.097994855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.243125013 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244208994 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243547624 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243567733 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244380919 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244057027 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249616277 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263036457 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242823313 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246159562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25001124 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251268689 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.246692751 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24306787 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244486838 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246180182 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244855356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245122211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243875738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244455597 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244970124 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245816365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24640838 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241684283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245560904 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254988378 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268255792 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245049932 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24417663 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248072573 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243765087 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241908463 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244221474 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246091633 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245125946 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246412602 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254182692 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267065711 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251780682 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26506995 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246121445 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243138833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245127279 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247037809 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246922727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24681794 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247428245 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244326403 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245249492 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249814262 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251857646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245958621 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244077198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250399628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24673762 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252221528 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.267329994 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249498883 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256202794 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256857669 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278979604 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27203303 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247873233 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247228252 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257800369 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270254151 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253109782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264372959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245842624 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247352353 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253867194 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280145283 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274577197 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.248932798 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249021851 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.248131691 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248450228 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249650072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255491735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270572386 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248580257 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248161421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258954528 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271249706 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248588673 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249676985 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250257128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249132732 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.250207166 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258616681 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26896626 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250789158 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247977265 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250253343 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250243859 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250279042 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24927143 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25063377 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246848086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250391795 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249880717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254304739 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259784319 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251354436 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250442823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255799928 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271335609 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249292634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255769762 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250333198 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251314183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25161933 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256271899 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246955013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252851131 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25887099 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25136586 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.251941074 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251883617 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251408787 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260846057 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276197509 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252721146 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251557573 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255654238 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263622503 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252372132 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253794832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252574156 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24886314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24867315 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254006124 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.252640659 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252874634 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252745075 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252144453 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249753032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252359385 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.253813236 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253457033 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253654741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25164748 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251927063 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254039431 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252811161 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253288765 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25803589 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.27172451 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253763015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252948273 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250018249 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253904986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.252734017 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253905287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254238597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252890716 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254186055 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.253817373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254778703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.254601246 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254534172 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25480955 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257890465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255091379 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257552449 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253496222 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251674706 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.254416649 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254521765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253335874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255419654 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253393574 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258359014 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263739746 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25631111 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256039453 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257617397 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255800748 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256263638 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254984199 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257867044 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.264956938 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25654979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260833209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276755114 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254820217 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255447877 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255423405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255166612 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255790436 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258097941 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263724531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267668637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280769837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257224306 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260148192 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256806496 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260946456 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259957251 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256472265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256647205 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257116307 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255980848 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25748447 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257561717 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.258318511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25681858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256674329 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.255766412 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256843026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257911103 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25694908 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257155339 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256430806 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258077241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256932444 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256754426 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.254317514 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257187225 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257089325 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258864082 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257925804 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262722939 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254665195 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25900549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257864756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258276586 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256415511 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258901096 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260651313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258253973 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264257162 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277560669 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258810654 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263986077 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.277845494 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258189911 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261146238 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258298805 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257227505 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261600724 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268220653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260552623 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259553141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26019965 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259158093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259791993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.265486444 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277344785 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259875454 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260184327 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260135941 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258744031 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25990632 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260976224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259579595 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261818101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260098799 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260239651 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260838237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259842324 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261418356 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261063591 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2635853 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269231101 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264896146 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260143236 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262187527 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26244719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265789728 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261368079 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.262810195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261125986 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27265842 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286640508 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266709286 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28286826 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262774274 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266120028 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28220391 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265813436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262311352 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262977097 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26121864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261840373 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260003827 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262547064 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263514456 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26353609 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263556364 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267317267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263390533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263365242 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263242357 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262500754 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263751765 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262113891 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263971004 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264754419 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26428838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262787791 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264189709 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269272782 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283332005 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264097701 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263067462 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264066645 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263157107 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264945386 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264876592 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267155685 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272574499 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26769647 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27302869 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.2664094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274467189 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.264332665 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267623537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272725408 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262563254 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262469873 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264170036 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265120882 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26978852 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284885649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264988633 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.269421825 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265274133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264555339 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264565492 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.265663864 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265690069 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.265989549 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272527475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288477542 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268920824 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26786695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263992214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265954817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.266465483 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264765317 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268742014 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266471386 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266395156 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265839841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265577062 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266464941 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267156219 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267094796 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26395932 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267517917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273387566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287670412 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271796915 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267705392 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272815566 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287347044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272176268 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.287221059 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265573239 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267098515 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266109442 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268469497 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266941587 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26915638 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267205054 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26910017 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27129208 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.269869039 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268956217 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.268334718 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268513816 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268577992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277944856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291937232 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26994947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273147389 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.266513262 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268823588 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.273469065 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26959681 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267037601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271620949 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278711517 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276624404 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269612965 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269260872 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268654031 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270602621 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269429604 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270617578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270651322 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270229059 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270253943 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270423879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271701833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269339709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270562869 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271561557 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271196684 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279057257 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.290706609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271428112 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27111243 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.27094233 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271518054 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27140814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.27088088 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271224139 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271260797 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272128023 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277600659 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277309745 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273127961 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269673478 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271743164 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270248216 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271732757 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271191003 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271464036 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271233846 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272212222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271425205 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272395684 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270549562 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272868614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270487431 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27239128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27376943 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278677325 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272682205 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268817722 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272655177 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27242318 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270390126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272417434 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279291059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296514709 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283219507 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280217553 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.277407479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271656368 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275721779 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280510105 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271656693 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273680583 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273346965 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273389115 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272962894 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276634351 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273952733 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279961778 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.293034821 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.272457703 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281513382 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295782716 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274825151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274838133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277475814 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27326851 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27164435 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275365079 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273071628 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280060294 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295535126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275350833 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275337493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272840217 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.276595759 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279286093 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274206582 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275008846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27259596 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275506146 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276986001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275817765 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27305848 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27344748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.276079502 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279294662 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280021409 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274162267 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277377622 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.274933061 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276256213 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277287222 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276113903 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272820348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273818239 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274497107 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277542349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275940315 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278393545 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275072614 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277832309 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278150346 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277638611 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280425125 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287501883 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284974653 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274140409 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275897774 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27662891 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.279550914 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277921412 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27698904 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278072609 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276946284 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.277838492 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277538829 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277105811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.28053512 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29332411 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.300243786 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277692254 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277940531 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279657594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277691201 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274818962 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278098312 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279383858 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281281754 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286273036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278269895 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282864659 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298691337 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279001448 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.283818319 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280906298 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287278858 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280640034 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279495084 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279512348 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283402813 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294766864 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278583713 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288802366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309343848 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299742419 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280218467 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.280346189 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279191013 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281467026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.280942652 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280149662 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280401321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280324655 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281223955 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281101359 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285438517 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281415902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28291057 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279655969 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279087491 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280949773 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278992531 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280681087 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280138145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.281875349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280809818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281573631 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280728903 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293770801 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.308266528 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.282614491 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281909598 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278813902 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282774445 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283094712 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292011281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290604308 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282340892 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28137745 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281314944 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282976597 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281049185 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281702173 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281744394 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28251032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280313624 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293851236 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309974492 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286059516 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281478697 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284344734 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284015948 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28290492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282756666 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282964485 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282680326 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284631928 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286742061 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282624121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283741006 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287364344 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291205117 seconds)
  done (took 755.812968528 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281828777 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28127751 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280916765 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280924329 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280881042 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282168689 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281263385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281082879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280786502 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283025811 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280731745 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282448137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281397732 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280708976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281053998 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281627914 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281506903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28134139 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281290281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281577079 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281748238 seconds)
  done (took 28.104286705 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283928314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.282942108 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282758386 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285434368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282586636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285279818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283591186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285128687 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285932142 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284358773 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286661169 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285572007 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282405983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282713886 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283179767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286387473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286321781 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283312116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286556081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283371456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288378404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283934885 seconds)
  done (took 29.45724619 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286474683 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.286180181 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286567082 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.284400742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286601983 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283799254 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.285775481 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286622669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.287870863 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286155067 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.286481317 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.287360837 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.29327486 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292346977 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288098267 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28694511 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.431472476 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287198825 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28906495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286529126 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285504142 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290975601 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306696739 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285267058 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.285707195 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288614758 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287960023 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.288079113 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287822984 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289104279 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291360921 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.288964686 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28609037 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290279981 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.285869917 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289523643 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291959789 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.289285696 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.284509664 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287698282 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.2983128 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309138056 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290006105 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293747258 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309782471 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.290053272 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291386916 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296779849 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287705859 seconds)
  done (took 64.536254927 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290167368 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289928381 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287009973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288542417 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289382818 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289461075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29025834 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290426594 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286789312 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287145258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290237098 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28871015 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28802252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290876325 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.290058636 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288178644 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289393454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287353755 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288719943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28894235 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.28866206 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.291343994 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290153671 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289425764 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289825682 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288708345 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287875516 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291912486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288741548 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288071901 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291721075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291435945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.29039436 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.288807767 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287684534 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290887016 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291287007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289373806 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291637784 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289914547 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292234021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292472392 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290898212 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292133738 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290258432 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290193779 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288761179 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289156504 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289194876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291838906 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292024756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290796637 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292720112 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289550152 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293741034 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292268738 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290011086 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290214051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293074061 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290313077 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.291057601 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292797251 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291707897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292788696 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294424901 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291384405 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291026017 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293666233 seconds)
  done (took 88.940974693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292422336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293309798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293325294 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293819626 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294025346 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294016673 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293609733 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293664092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293903127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293706318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292856025 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293395791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294363067 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293923732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293450272 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29309934 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293725063 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296141533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294129425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294128695 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.295421674 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294775636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294893784 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294779865 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293751832 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294871973 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295414864 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294987569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293487875 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295577352 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294952237 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29469184 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294213168 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294810074 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296764911 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296411899 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294180656 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294931046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296861014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295473405 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294927326 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296428573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294846206 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.2956237 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295102951 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296217804 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295042527 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296212689 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296400396 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29661395 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296915003 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295742323 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295503874 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293460929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294142354 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294559772 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294823428 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294613098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296242547 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295061861 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294814081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295339194 seconds)
  done (took 81.480522044 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294959396 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295647517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292900786 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293787555 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295754943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292823144 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295808561 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29422552 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294345319 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294884035 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294220416 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291923574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293458329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294169546 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291541933 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290969182 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291612141 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291393338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29543955 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292054424 seconds)
  done (took 27.078000189 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292167777 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294984768 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293157252 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292456238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294175583 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292452199 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.294587303 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293903818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292304482 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295132959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296051415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293355637 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291568678 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291617815 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294625742 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291392041 seconds)
  done (took 21.899652249 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291937414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29455782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292803618 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293182161 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291443833 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293265383 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293852461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29180912 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291463023 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294356296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294100985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293031184 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29355172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294021134 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290537639 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293796393 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.290876926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291822748 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294037179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294039501 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292206886 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29135151 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29355103 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294825119 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291769659 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292002905 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291178309 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291981365 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291677636 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29351438 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291692292 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292316189 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292724586 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291647759 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294355783 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291657685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294547642 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294663933 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293817554 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295882974 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294602081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292846888 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295399476 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296109562 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292808543 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294925151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293261105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294059657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293003183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293078651 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295690058 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295008452 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296395922 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295114922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296522709 seconds)
  done (took 72.34049767 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296531934 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295806714 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294422278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296872446 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296618703 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293515408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297461656 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296566809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294785117 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29753925 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295582181 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298529012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293428072 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297173663 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294735637 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297886757 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295424527 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293763598 seconds)
  done (took 24.532808902 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295475072 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295503883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298090522 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295465757 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294612522 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299102028 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294924433 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297051279 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297504196 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296003637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295280868 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298370617 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297113261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297802411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295180786 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296546281 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297526596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298710015 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294979864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29529133 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299158445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298742196 seconds)
  done (took 29.735456039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296579352 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297381154 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.297435247 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314307915 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.3155874 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320563563 seconds)
  done (took 9.050250703 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306196889 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299458748 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295663488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300949973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298742321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295816051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297090025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296141123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299946464 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29807271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296791213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300253957 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299927932 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296624894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300157846 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299144225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297945589 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29636577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298264691 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299764557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298239139 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300913644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297536907 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297892613 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297204252 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298806729 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302496872 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298393578 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29762225 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300764985 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302286751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297859602 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299871635 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299796351 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301778769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301568507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299756044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301233936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300880571 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298594672 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302248153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301906669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300567743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298070771 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301143682 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298406619 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299647213 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299542645 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298784933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302415565 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30182422 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299702545 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301073701 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302509152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302714839 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30399592 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299947008 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300326692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302695899 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300278335 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300585531 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301874839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299305908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302809651 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303992539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300969848 seconds)
  done (took 87.02789485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301071413 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300071891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301182235 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302978767 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303515078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301568921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301022482 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301193137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299510812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301609945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303747544 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301655262 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301284759 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301342976 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302040707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301736683 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300597943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301653094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302383343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305149857 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301270148 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301423913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301763464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301601531 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302788091 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303104659 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301208433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300887902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30184377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302113832 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303180599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302936929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302869761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304141391 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304881612 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301242837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301041089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302140158 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301833292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305181922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302281715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305042374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306163582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302497869 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301771859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302593172 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30156641 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302178325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302486443 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303064024 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305733526 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301304614 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301674551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302910325 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30320902 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302916889 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302420398 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301592887 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303181116 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305262743 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301264552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302339827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306286509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302788312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303921189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30342969 seconds)
  done (took 87.176461144 seconds)
done (took 1761.719444142 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466214032 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420612015 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303717434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.304054244 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304076041 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320428078 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299985396 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.305138263 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303760966 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304568969 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304088068 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.491270294 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.300456876 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304490194 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303545405 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398151236 seconds)
  done (took 42.650816193 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334573591 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310399684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426627045 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327186659 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.332468984 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.50149462 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361727278 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308864218 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484491739 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354158643 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.91477642 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332894868 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311078729 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.454382343 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327346869 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.49942 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.563191642 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.920391766 seconds)
  done (took 30.280395079 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775481357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.31509487 seconds)
  done (took 9.307740509 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329470712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310639823 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310204989 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309718248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301042372 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.301541118 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308761164 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323040107 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.123939001 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.438131652 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311022476 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321043118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329705325 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309657862 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.306715912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348389026 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477816306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309305549 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.307547889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316965577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.308253604 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.393837827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351529943 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307730412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438281791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.113560364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312160221 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3177221 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477113156 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309692089 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308658521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309189398 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312942711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221794929 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848161791 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304178445 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334657553 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319030083 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307162197 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463997497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312013055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31579366 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.302318299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.848385356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438497986 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42850906 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.58094059 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329689006 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310521763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372633405 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311196336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312293576 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.355525947 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.107671276 seconds)
  done (took 111.007451033 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.360913586 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.692056197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471387293 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326801254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942363513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992699722 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321914613 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.602311783 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345243046 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305208964 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.604429684 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818285638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32200461 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.364312384 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.968109573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374092892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306394542 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.067340932 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322264267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304833513 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815392261 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311941444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31424878 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.56999153 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344212008 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77015534 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.758335019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.774944623 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322329561 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.304506882 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779585826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323744705 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.317794118 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.305793822 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570863016 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.6717496 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668024847 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.331439886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351791387 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309208534 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317183618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765245276 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67420166 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.334380767 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308899214 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769622291 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323868649 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309751049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.310633802 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507353782 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.980474598 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307609647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.735419592 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.307798117 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.594568817 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326855293 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.384529524 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799016763 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324910824 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.405526517 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356692643 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307749928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311327093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3113165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309966245 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.662993843 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625678384 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310493364 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663414249 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794011369 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325207937 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.846155449 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.169476772 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338969727 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.362113195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308694863 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.858400665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809223391 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.349899577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309496451 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651883365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329005699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596675648 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335112194 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310114581 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825215941 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.316713605 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.375988945 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.308035328 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.308951411 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.956192442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312401815 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.60125425 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.354515971 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309747209 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.308726974 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325480396 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309961082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309893194 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.311975068 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848828948 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335287211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.430040291 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327085085 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310474107 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311544193 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.310715527 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309462969 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528831994 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.857905926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.331072946 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312193208 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.310328493 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.314444663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.562347209 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.318115594 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.626688142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331103925 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311958819 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334534458 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.005261015 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380217127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311774688 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.330110808 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.204155447 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.51691156 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.344225026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.311290873 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313833738 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328747653 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.585840944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329943434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.387878898 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314707705 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027187889 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34364424 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311369301 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.64012081 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314062269 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.2186404 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333463692 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313985889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615879372 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583705891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.519696524 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315605162 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.329735819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.016436203 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.373844621 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450264773 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330966667 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353932859 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510707068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.551748842 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314116995 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.929667504 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31303295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527943002 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316916052 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609553039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810240213 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332418349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315759362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025498561 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04913144 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.931974116 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316035791 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596440713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.263986105 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.790521585 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314360654 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315387581 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.7925868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315682722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315965494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.315395047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314342586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449540138 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487937449 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.971938095 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319779134 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774680053 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36165026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315002919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335085873 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316142074 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663121428 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409526591 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.320849296 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.363393758 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316043368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317919089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79710361 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.239871015 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.316126101 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.467865134 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958345913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.333435557 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.315694163 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.018372373 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.597015155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.837709703 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.365997835 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.633984573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.339263675 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355584201 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.895233647 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382141173 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798555089 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336211858 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318087077 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92340575 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.33594459 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.397410726 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.317643172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317330573 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860811416 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.335323623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316692824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.58033063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33687715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566217775 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.318573076 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.365917316 seconds)
  done (took 1107.105100774 seconds)
done (took 1301.566821092 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.318507009 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324231419 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.304808857 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32584305 seconds)
  done (took 26.506266056 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336821467 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324050759 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327594549 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324318009 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328475445 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324601368 seconds)
  done (took 9.201350533 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.371290604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326340122 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32392796 seconds)
  done (took 19.255293338 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536278607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.633570886 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.667232905 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.591380561 seconds)
  done (took 10.664115034 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.327530986 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.32605072 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.326888237 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328955332 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337505357 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338992187 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32898876 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329433927 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339372662 seconds)
  done (took 13.21868071 seconds)
done (took 80.078995802 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Int8, true)...
    done (took 6.320611929 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.347357582 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.733623698 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.795325258 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.710787876 seconds)
    (6/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.376636024 seconds)
    (7/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.804388454 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.348775997 seconds)
    (9/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.20564575 seconds)
    (10/286) benchmarking ("sort", BigInt, true)...
    done (took 6.320274933 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.580488974 seconds)
    (12/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.181080847 seconds)
    (13/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.200888733 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.378659384 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348054881 seconds)
    (16/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.563313995 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.042435065 seconds)
    (18/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423263072 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.441569357 seconds)
    (20/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.424249718 seconds)
    (21/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.106741684 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.92173392 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110754047 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.338876218 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315300316 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.322864611 seconds)
    (27/286) benchmarking ("sort", Int8, false)...
    done (took 4.358522055 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.640970903 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.269516786 seconds)
    (30/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.766861324 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.451216372 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.729330331 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366665587 seconds)
    (34/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.315885593 seconds)
    (35/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350636789 seconds)
    (36/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.144240989 seconds)
    (37/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.220896351 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346061694 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40647543 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.682684343 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.293918078 seconds)
    (42/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.673432409 seconds)
    (43/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.33156238 seconds)
    (44/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430741818 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.325092081 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326067044 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.509647799 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.533578336 seconds)
    (49/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.593928836 seconds)
    (50/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.170751796 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578572682 seconds)
    (52/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.138166544 seconds)
    (53/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.41021013 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.790873829 seconds)
    (55/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.561404728 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.405099775 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403136103 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.691538576 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388918803 seconds)
    (60/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.304875252 seconds)
    (61/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.321983781 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.343390976 seconds)
    (63/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314339401 seconds)
    (64/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.510372875 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.305356575 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.304090265 seconds)
    (67/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.147045819 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352226148 seconds)
    (69/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.422494208 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320770205 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.331639617 seconds)
    (72/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.305876884 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308146183 seconds)
    (74/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.608911623 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.861210064 seconds)
    (76/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.047595377 seconds)
    (77/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.457639547 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.566951839 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.334821055 seconds)
    (80/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.333738236 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.331654999 seconds)
    (82/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.140542113 seconds)
    (83/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.528241139 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.000527332 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.927198476 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.42737319 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.344420531 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.371092448 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.278131547 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.736905674 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.307268444 seconds)
    (92/286) benchmarking ("sort", Float32, true)...
    done (took 6.346673843 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.335810396 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.306402681 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357762731 seconds)
    (96/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.730823083 seconds)
    (97/286) benchmarking ("sort", Float64, true)...
    done (took 6.345286575 seconds)
    (98/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.300368012 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.915697621 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.568611807 seconds)
    (101/286) benchmarking ("sort", Float32, false)...
    done (took 5.357636475 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451383987 seconds)
    (103/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336239278 seconds)
    (104/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.510867277 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.557688729 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.540533622 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.202874408 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.334886258 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.783585356 seconds)
    (110/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446635333 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687392131 seconds)
    (112/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430871316 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.18279198 seconds)
    (114/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352890031 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.165469142 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.064783523 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.317509254 seconds)
    (118/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356754486 seconds)
    (119/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.812766362 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472045935 seconds)
    (121/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.388222183 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.844307578 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.369929793 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344461121 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328764806 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.661904429 seconds)
    (127/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.414067839 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.392241372 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335742359 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.104205291 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.135377529 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.117120807 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589694218 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393081232 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.380688148 seconds)
    (136/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.797825108 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.641427178 seconds)
    (138/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.944016898 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.067940284 seconds)
    (140/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358223106 seconds)
    (141/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.310095487 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.450888068 seconds)
    (143/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.32511006 seconds)
    (144/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.094674472 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.30978761 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.311046788 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.309797784 seconds)
    (148/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.329737132 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.148878721 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357081647 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35667399 seconds)
    (152/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.310164677 seconds)
    (153/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.372959894 seconds)
    (154/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374733318 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.310990009 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354388277 seconds)
    (157/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.312232955 seconds)
    (158/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.429199464 seconds)
    (159/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.855254451 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.997212818 seconds)
    (161/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.50091846 seconds)
    (162/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.195731587 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324027643 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.316228082 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.689841596 seconds)
    (166/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.029785557 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.748427605 seconds)
    (168/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.375758262 seconds)
    (169/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358158907 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.390988949 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.314495667 seconds)
    (172/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.949326699 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352402448 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.312110027 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.366123192 seconds)
    (176/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.382315204 seconds)
    (177/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.325246751 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339479465 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828710984 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.79961338 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419281825 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.726735475 seconds)
    (183/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.905945175 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.313005466 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312885238 seconds)
    (186/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360401465 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.182208848 seconds)
    (188/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.843984526 seconds)
    (189/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.112828551 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.951359759 seconds)
    (191/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314437234 seconds)
    (192/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.333453508 seconds)
    (193/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37830983 seconds)
    (194/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.561052149 seconds)
    (195/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375222502 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.396984184 seconds)
    (197/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.872423348 seconds)
    (198/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176985795 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.434667105 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.333856952 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 5.487766569 seconds)
    (202/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.392877609 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413723151 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.990336288 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.29556284 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.804879981 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963293605 seconds)
    (208/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.314349199 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.570317845 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195318452 seconds)
    (211/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.3147017 seconds)
    (212/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.348547433 seconds)
    (213/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.433329933 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.350645813 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315449027 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364064313 seconds)
    (217/286) benchmarking ("sort", Float64, false)...
    done (took 5.682441961 seconds)
    (218/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.833968737 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376551553 seconds)
    (220/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315101103 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.35547753 seconds)
    (222/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.408555402 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.492924455 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.610056902 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.994013152 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 6.335203651 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461510585 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.99289879 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.316110163 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.239374549 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460982222 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.682410119 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.148560735 seconds)
    (234/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.497245131 seconds)
    (235/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.552980228 seconds)
    (236/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.576283437 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.845502731 seconds)
    (238/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.723578176 seconds)
    (239/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.316590565 seconds)
    (240/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.853779255 seconds)
    (241/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.354671009 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.352781663 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.623947002 seconds)
    (244/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.43941381 seconds)
    (245/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.460386802 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.336515904 seconds)
    (247/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.349484457 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.729783643 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364118784 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363904935 seconds)
    (251/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.946394982 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721959614 seconds)
    (253/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317750505 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.577552321 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.31216155 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355383212 seconds)
    (257/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.358046116 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.440072638 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.318572699 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.773427525 seconds)
    (261/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.364704336 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938965202 seconds)
    (263/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.422277492 seconds)
    (264/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.318366715 seconds)
    (265/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.831934602 seconds)
    (266/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.423538445 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.993077621 seconds)
    (268/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317624837 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422610302 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.420879562 seconds)
    (271/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.904193586 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.467848179 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.172646346 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.353468764 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.331999576 seconds)
    (276/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.709828946 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38066612 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.33891472 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.380289499 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.706652834 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.580391013 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.380420274 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318841563 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.384107718 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.7207069 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.238660321 seconds)
  done (took 942.685049021 seconds)
done (took 943.921091958 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373000734 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374646184 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35118382 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372840515 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468609242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.373919949 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361412232 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353671203 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.397675883 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.402077661 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357074301 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.372642943 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35705727 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357396457 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351290963 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3732396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.450874728 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359899596 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375450714 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361685732 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.374590443 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35746297 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40131305 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.372600541 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35501517 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35522308 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.361663441 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.377919142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.470867378 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.361515399 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356352988 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370242128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.451636564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351316237 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.348163889 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378955246 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370753157 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.362342616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357005223 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391619752 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.87449953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.376453564 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361322635 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353785606 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35361295 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357222205 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361435098 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360049836 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37482949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375402464 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.860438881 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.392593666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363627539 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.354465556 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365339515 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360432558 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.358393449 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379550652 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379157783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378339138 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.434890681 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360343592 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.356580023 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377682889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369090875 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.897684802 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.368446678 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358801635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.874313644 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376958268 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.897799147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.386992893 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.355914432 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376305312 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394685725 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.452176858 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350593487 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355764296 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369602217 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359938847 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365024119 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376115966 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361316794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35700516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37837559 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.378283731 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.366632609 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.362822739 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365535697 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38341956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.370457525 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373676425 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.359632217 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352953876 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.366250112 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360132811 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.365988472 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366172414 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.362523987 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366711478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.872768475 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398987127 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35474307 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354297307 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.357696464 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.37845157 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.874514694 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.38283572 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380441217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405186831 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.358646894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.437360181 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368187478 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383038229 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.368352444 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.362144422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.353386783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.439591644 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.867511271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397476357 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360303255 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.363296893 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38428326 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360702994 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356577573 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.462700905 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360469692 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380664013 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.487491323 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.370726894 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.39734257 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.364837234 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.363502088 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38455563 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38325572 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.397835794 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.362569157 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384744205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.381879773 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356372536 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379467375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.370489259 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362671307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366380151 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354294836 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386179674 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379965286 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380431042 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380755714 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.487558364 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357536235 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.443290799 seconds)
done (took 230.496860113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419068403 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356251328 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440078988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35770058 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.458007052 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457630863 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.354614191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354935384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.354744255 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734465155 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355093674 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355981818 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.355923056 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357578699 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440697746 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357660988 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.355132987 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697259556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358423042 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431095737 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.355034748 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356979307 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357733204 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738253827 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.355239916 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.351558292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437125971 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359092981 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.703635838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.350513263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.355854063 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.703473818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.455453141 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376402799 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369322476 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365836266 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461031706 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.377900142 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438254881 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438780583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442585051 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397861364 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35122361 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.351304236 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.36140283 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361066091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.357395774 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386692963 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353119758 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357363115 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.701113684 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369885488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367312285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358587815 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358469092 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380835503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357709656 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361974355 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44901264 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.362830632 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43061637 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.739794377 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.737293403 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36076077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359159591 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.359846866 seconds)
  done (took 150.099480772 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425812714 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433739365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475811616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378766255 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412471183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480860502 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.379047087 seconds)
  done (took 11.252493249 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367318491 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363501078 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410242284 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410791142 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36315508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539055101 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364129382 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374319947 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360948308 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414758698 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364626464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362993021 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369120053 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.360627028 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409242837 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.373416048 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477492835 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363646968 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364513892 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52287227 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3610621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370283017 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.415262082 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.373934975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365592922 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.368709841 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.192134474 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364795087 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360859771 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364057797 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361828437 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441460632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365767888 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.359345257 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361791818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479104845 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36423973 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36078072 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.364742795 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.35994514 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364084913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364513323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365235968 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361616385 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364663862 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387220424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364289194 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365176882 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364789858 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.364973652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414378811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367197216 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.361913039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.36212014 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419165632 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371993889 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36654798 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362845026 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366585362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363888529 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52634052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413605836 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368134711 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421013831 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367787251 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367364381 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.365880555 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366239243 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.419637742 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367709771 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413983891 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.364898999 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.552158775 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389314388 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36962409 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368705024 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368789334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367006946 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.36321245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37276074 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364693251 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366494382 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372107683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366137643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365318061 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536749268 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474951442 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364326902 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378651458 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.374020867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365549404 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419659208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.368233473 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36456575 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418469248 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48204329 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420807486 seconds)
  done (took 156.702464664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372294667 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.375445524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370290713 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.389793393 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388457002 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368231425 seconds)
  done (took 9.536448578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37117502 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.371009286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368754113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.368247214 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368731487 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370243559 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36836251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369657285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373130763 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.368601602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.369610162 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.372898235 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.370536017 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367865411 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368823899 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.369074345 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369761802 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366934684 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369322264 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37084188 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473719322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370368447 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368846987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371496772 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.376230487 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370860015 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377300127 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.371089083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.370897144 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374729172 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391612273 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371435975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.371281986 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.376242682 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375245649 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371629381 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37553246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.374136342 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367723428 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.371923807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.374307635 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371278887 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.371965315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375646818 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.372340487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37764281 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379608944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378342971 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.372722919 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37567248 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.37522002 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371825957 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372896058 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.375430078 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373125834 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394784221 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.380824984 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373217352 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.372292499 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.373984129 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37500891 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374027668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373477608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.377387659 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369804226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376903936 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.373719435 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378351762 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374103855 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373479058 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.377644899 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370729 seconds)
  done (took 101.248713939 seconds)
done (took 430.102678425 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.863620076 seconds)
  done (took 8.141597366 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.492934915 seconds)
  done (took 7.771669334 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.0433319 seconds)
  done (took 23.325483734 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.450054801 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.435635533 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.383741146 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.365115816 seconds)
  done (took 26.911966968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.838982879 seconds)
  done (took 8.116644941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.365124818 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369705238 seconds)
  done (took 14.01332218 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.469846047 seconds)
  done (took 7.746840637 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.390035341 seconds)
  done (took 7.673197577 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.366914254 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.405220558 seconds)
  done (took 14.063125186 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.345949917 seconds)
  done (took 7.623751752 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.775159521 seconds)
  done (took 12.054393779 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.378869465 seconds)
  done (took 7.660202724 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.376380758 seconds)
  done (took 7.655796208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.85414941 seconds)
  done (took 10.134407179 seconds)
done (took 164.171703193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.367350137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367163275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367428256 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.367940325 seconds)
  done (took 26.749495336 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410543635 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.4093613 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410527616 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42065233 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.41133722 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416329547 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.40946874 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400762071 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420474899 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.412978445 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.412012754 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.411307493 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409579781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401409113 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411487696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411258241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421036832 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411073432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402337486 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412897564 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.377065092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421911097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.413169125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.378534932 seconds)
  done (took 35.096658749 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906137773 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453098067 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532006088 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428747892 seconds)
  done (took 7.601300135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427995538 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430946019 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.446055279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482484601 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.511168758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440453107 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405583254 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398473516 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38451248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430706671 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506812651 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44741737 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525813964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379599411 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.568884851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378098378 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379612209 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.430035151 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48179487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.495774291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378593514 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.430354499 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435337567 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.449748131 seconds)
  done (took 35.928381003 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.378071483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39718249 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378220524 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377897419 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.385561507 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377758397 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378707071 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.379514034 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.377763319 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38442104 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377764414 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390162897 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377116625 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377830113 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.384168082 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.379593103 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385830177 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.37799004 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379108755 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386253839 seconds)
  done (took 28.913582671 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.372235642 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.225089639 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724711732 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629735859 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.373552533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.373417606 seconds)
  done (took 27.982209235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.454740555 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.611749762 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37939155 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.762299513 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.855765921 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398425391 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380141563 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.633979436 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.978829798 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978764838 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442023867 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451535705 seconds)
  done (took 20.612239772 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.385831935 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.374254018 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385272375 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389238043 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.439465936 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401276996 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.387478988 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.373891758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.445791825 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.460614075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401578719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.441457763 seconds)
  done (took 38.171396623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463613234 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422594779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.454213872 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451368811 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100106167 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587231574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427083007 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138413455 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.40820693 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650142343 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376777634 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472433466 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637408376 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382273452 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382773896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.430480848 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623622609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875256959 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378495186 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.679073075 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410568748 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378119044 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.875991189 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635664298 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616845685 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355361951 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639019369 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154037497 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683859821 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391481719 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389311273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378571646 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652543032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071738137 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503366255 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609969264 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421816505 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927640877 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.362863569 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.659004816 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388144938 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405547406 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390237857 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379321641 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313188552 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382071161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170568321 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412298115 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.089853182 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379357125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658566899 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476537594 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.383251201 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.94939723 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473365759 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386186747 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.383568542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473997559 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973148476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.966004776 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402557984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.321515138 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39076508 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.687764701 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028241302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403736759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383870526 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383093546 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316449489 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.684079825 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404451456 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521888242 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405946391 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039257584 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109317341 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400935304 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320445539 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94475246 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396770173 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322050807 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610182246 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156608415 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321325227 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328506341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316463229 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102313813 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390753445 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.83683195 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402952725 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133086647 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634791948 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426783471 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405566314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605520065 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.260074102 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383166186 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.399671292 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508236361 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40443249 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147241607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344592192 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3876348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640873863 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594932391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389735944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.425895367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929977276 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410363459 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406118507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384095271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622218584 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.021574314 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418456534 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996129746 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408207426 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16340334 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148634135 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402231907 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395326222 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392533475 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670473924 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170141918 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282259869 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45263231 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387613116 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38401939 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.746607684 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235871648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.266197959 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.603596597 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411906454 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421435754 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.385790932 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344210676 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.382936096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401586848 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.172089015 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60982316 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396434316 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668150463 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321272028 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53652533 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404756007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611032813 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642060211 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.411940012 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647565174 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392310665 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395038435 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404557953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404723583 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486513018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408435306 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391904027 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651182057 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391067681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390615763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.707887861 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175229934 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391508928 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391694808 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391894896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999705235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379429812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396458227 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278212446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402198559 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455793362 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394176152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622795144 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.779591543 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418282491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392685916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.395275881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61118375 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398398842 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.68854634 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473708515 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.907911072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027778067 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418954298 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323382103 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100152296 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082038622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389739141 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.583776775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389437959 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624052342 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430635915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392212293 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027302671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409911526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.614972624 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396897286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403715899 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395193256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390084844 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.757152017 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010320725 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40947055 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400707804 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534046695 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404574913 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325857159 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906189512 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395880638 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389608143 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166616443 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425342319 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.726278513 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242537926 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672399184 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39424586 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692116797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.70942797 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.42475176 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393608804 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391167519 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430913487 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.423240547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418226782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402584373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.709854073 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844133427 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961866902 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163076899 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965967179 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.757757114 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.417076762 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.282564754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174994726 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35282861 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.049967528 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643527226 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186421953 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377862339 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920589926 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.681245386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230524669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675722579 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623917977 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73442042 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425097109 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684702522 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606819419 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428561915 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399380256 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330259053 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.910938048 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010122399 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436487127 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479952514 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178927437 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422679754 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179506268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.461447846 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.223957757 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850404196 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968756004 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789533711 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40582633 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407648387 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31445843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431069197 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923272057 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043400628 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414070583 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.95000435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36252942 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633593797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.434592966 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392989456 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.076771073 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.412596085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653842027 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679092698 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331007406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396181146 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958037878 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272315534 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401322536 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395921833 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158227307 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398146192 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712484268 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403697084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.774577429 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417400559 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331098833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33173808 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.089370438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400559714 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382288488 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902337292 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396479069 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404504898 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405830078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249595965 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655917458 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411100912 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010864005 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642156566 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408113363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420626352 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401180725 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39927419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.386274958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.297009202 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633277855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484744381 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620729022 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.484790745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.310856979 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.443794478 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609635524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279756205 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408674108 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671523702 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.134753469 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.403072381 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146805063 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440743108 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398676549 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414018668 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404163197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418590825 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490490426 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635512866 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.436622295 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409603674 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847767562 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436369584 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408258047 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412018043 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492888141 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.055073668 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.781857196 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.190838199 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019727749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187700928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052556288 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702721498 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402117226 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409735523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334319371 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549152316 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928788843 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674152532 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523449487 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.402267394 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423959003 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404022015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410676447 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620169727 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674983747 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.277701676 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413815172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067333141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.284086018 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411997304 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61197993 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913667273 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973258285 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51970308 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415280114 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197588687 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704034678 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493067457 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402406602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994588564 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.417890393 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.232575292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.416658845 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401665632 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576049762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68587599 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113626945 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441605126 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.558343852 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175670115 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.759877774 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667890964 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.916567406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640892484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049930355 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161918174 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669160102 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473776451 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642239277 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.550875557 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551463572 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.416993819 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.285371986 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403700095 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246482994 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.113695389 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413641564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032393672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687476657 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.407355303 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414501607 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427000759 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413321698 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62661977 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143432725 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627677447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4149286 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407475972 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.394256651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039424466 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707871105 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340975503 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408756562 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670590221 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668482109 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430056078 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.857382083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.116590958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977790147 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.37788877 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427495958 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880729574 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167891057 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031880737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.809336216 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935678852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063955608 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41199535 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686824186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410053511 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416637163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687551805 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409007449 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411285116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652543541 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.044665218 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244947326 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.418506017 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.775729154 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.3490414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629800413 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453231328 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34200333 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414851233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862903266 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433486852 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529490259 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418764016 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418795323 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409068269 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.147677745 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684509292 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411848423 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.389102538 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.407239324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435423661 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507672249 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99897244 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435258274 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082454422 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759399357 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667754294 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411663079 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.394514183 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410864236 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406226431 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130991611 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384703971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409129306 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97961801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.417853686 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425955111 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410898447 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624909467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619892038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412653943 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655911717 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450029007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431022638 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.308446906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.177743811 seconds)
  done (took 1697.356238456 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443552906 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.434356492 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.422196562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.430679629 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424726932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443527463 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.484723479 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.498882 seconds)
  done (took 52.900064604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417675052 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.567281571 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.440446977 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.414696014 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417275153 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40861828 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.901648794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.426403486 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.435373251 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.417463761 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.408752911 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.424498223 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103105866 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.435924887 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.413307906 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.396509763 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416451201 seconds)
  done (took 66.766998446 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.003184657 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.744826776 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.688818549 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.434138616 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.414240675 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.443975054 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.740106924 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.437332947 seconds)
  done (took 55.225725836 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421316243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419499257 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422019081 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.4226181 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42144951 seconds)
  done (took 8.425910468 seconds)
done (took 2103.01299469 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414294473 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41759297 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414570242 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417487708 seconds)
  done (took 6.981771908 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.390753735 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.118588383 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.392278091 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405907748 seconds)
  done (took 18.625807357 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.431295904 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.418736223 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.169144305 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094015983 seconds)
  done (took 5.583597745 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159291891 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.172124897 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156419127 seconds)
  done (took 7.806547324 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.411070909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.415182008 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.419591939 seconds)
  done (took 20.563519028 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.702558276 seconds)
  done (took 3.020969961 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.557489717 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.611096568 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.783930516 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.758119489 seconds)
  done (took 8.028482753 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.802884497 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.78399039 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602199156 seconds)
  done (took 6.507653286 seconds)
done (took 91.287492534 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.473242608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.810037797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.616379219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.443232638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.641367935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.616542368 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.737145749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.412053805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.953983965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.940751283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.488458987 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.642721646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898733401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.809211933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905586948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430709152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642658311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.522031259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.133034316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.370560705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.737089397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.081073717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.314879987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.097854423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.6509324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570866537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.660042727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431167809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.307275364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.680009813 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565982485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42327914 seconds)
  done (took 197.327857332 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413534183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420249118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417889535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.411751072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411144637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412601997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41171145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412220461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437297706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424725028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41066565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.412908431 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411448373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.429988857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413879454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428762404 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412296784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411364139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.429949935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427463155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.42988482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411929861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412835487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.41500056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416312198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413970657 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429191456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.4130672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.430215042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.413040983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412906481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430695044 seconds)
  done (took 206.711482604 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413754812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.413639695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426412141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.423246362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41928353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420424904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420021647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.41266396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413172663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412805733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431069123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.42164635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413899462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414282408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416960804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413232926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42333892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423629711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422913036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.415111951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415325668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431318636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414751959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414485473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423236532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415781287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414663738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41492423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.430756202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423705257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414696881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414804527 seconds)
  done (took 206.721693118 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61055369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42188612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.423531977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357856616 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.422973142 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423013396 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419906735 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622564805 seconds)
  done (took 15.025485931 seconds)
done (took 627.104705048 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.808963691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.527476981 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629481498 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442976925 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.310917266 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.463427297 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.442317313 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622266036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37772341 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631402447 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.713282397 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.458835075 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.858093814 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441987893 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.709142848 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545555681 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.38890202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.512070772 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771659356 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.041594543 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714395912 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.969101345 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.644209981 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.368521393 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.87333009 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973986601 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.206846437 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.373592728 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461608537 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.78099734 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.197521759 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.484174736 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490155602 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.508763038 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.566651685 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.549293287 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.445609366 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.505766718 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.651022341 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.737777009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.074767748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.193237836 seconds)
  done (took 96.794945896 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.408472446 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.406728012 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.407298712 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.4092697 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408847577 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.407498656 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.406976653 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.40762933 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408581603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.408049396 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.40806675 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.408726274 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.408037976 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.410549945 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.40865215 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.408156846 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409338909 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.411255179 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.407923561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.408778852 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.40932971 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.408348333 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.409578318 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.411435445 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.409907743 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410895096 seconds)
  done (took 37.957589034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427228235 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.682224974 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.857173768 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433692567 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426913985 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431756102 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511828784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42857525 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430383606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431303024 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587201431 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431272103 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464997466 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.888452292 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43144003 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.430241355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428707666 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.428030526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.690096551 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440169942 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.536102212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430184771 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513844476 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438694448 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.454001842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430606393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433936538 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005981322 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.450365941 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.588495441 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.292406339 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.518308238 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.981755978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.891741878 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.29971684 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.438731467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.432085078 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.592884017 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432776975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.428939951 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.514296439 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431095315 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.868377146 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.115293819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449107782 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432041418 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.027102945 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611790119 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.694925023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438167179 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899391174 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434889456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433445543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43262605 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.69615034 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438590932 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43212782 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.055835679 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454038522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.516112005 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432904084 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432288015 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.699704521 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.432633777 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.68856576 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433357156 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.440616192 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45215724 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.871188491 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434667001 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.141194654 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452017547 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432513606 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589973917 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.690258714 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.060741198 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.456615759 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.705980184 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997192385 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.534285347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437445466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.003285196 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539364807 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43716344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.436682565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43607619 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.434571137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484679835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.515261076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.075859333 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150679708 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.082029789 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.53853315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446096749 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434093266 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.059160169 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453056807 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433177144 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.86605246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.14134302 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45254675 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441603011 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.14294547 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45504022 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.519471005 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439238848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878489214 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435897613 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48592214 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434916945 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441903879 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457536397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.519796222 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438775744 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.435664342 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113140838 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.616966173 seconds)
  done (took 189.074415423 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.429870075 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.429571942 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.430219776 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428083368 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428776383 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436423595 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.428429771 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.430035657 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434394309 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.429879619 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.428982882 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.429566946 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430645069 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.445508087 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442054578 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.436830285 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.085860915 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.430071462 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.430098387 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.430288226 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.244162987 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.440650354 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.429203137 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.42956516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.428488909 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.428731617 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.438822793 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.4329928 seconds)
  done (took 154.905123239 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438602747 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.039671278 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.458401943 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579619901 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.461617785 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437220928 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575975053 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49946089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.457460453 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.43789714 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436767097 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.760254146 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.439658059 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.991794951 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.646536288 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.597407661 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.987502827 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.458639656 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436596148 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.437582534 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.581537223 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.444240283 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.762530629 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042292144 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459713764 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.041336094 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423054918 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440594141 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.437997532 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.046905566 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456981276 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.765107063 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521391801 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.502122406 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.066201515 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010440775 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010235242 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.597857225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.439561584 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437938767 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437576734 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422942186 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046699604 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461486094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.439895134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039453006 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459855387 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.441441137 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.447092617 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438496329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503375051 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.523774345 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788239014 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.055252844 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.541301412 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.452224034 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.580906125 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.81839999 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.44303211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.993086559 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42375446 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.066798769 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462769652 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423944898 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442460131 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446760016 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.602851158 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.582847616 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994874319 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.459528346 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.994272324 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.621859352 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.439123626 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442050736 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.444613376 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051740598 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.012921526 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.61918712 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.586377894 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.651957769 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426321698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441032198 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426515267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525490991 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.442390344 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.076554847 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.022536986 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.461654272 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442570029 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443392428 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.444115247 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633887358 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.102123189 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554080664 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.98750643 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.805229739 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791888224 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453815582 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.506672571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460726847 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.788868154 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454089484 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50429702 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.885654853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.7901549 seconds)
  done (took 172.385774904 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.694945302 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.679548459 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536556866 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.603981469 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.088673213 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.021435556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.804955798 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585532965 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.558902037 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.711445116 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.708226686 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.538522637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.67218203 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.523909123 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.193697171 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535539575 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559754131 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.595259177 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607054383 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.490337345 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.146713064 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751192676 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.639294714 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.463951547 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550093374 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.264963264 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.02532669 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022771095 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.629315875 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.855018554 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.038453706 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.601753236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.483215581 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.196113642 seconds)
  done (took 69.724478313 seconds)
done (took 722.166994463 seconds)
SAVING RESULT...
DONE!
