cset: moving following pidspec: 30147
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346620337 seconds)
loading group "string"... done (took 0.546473685 seconds)
loading group "linalg"... done (took 7.033717528 seconds)
loading group "parallel"... done (took 0.150142199 seconds)
loading group "find"... done (took 1.097179101 seconds)
loading group "tuple"... done (took 1.743609903 seconds)
loading group "dates"... done (took 1.249909053 seconds)
loading group "micro"... done (took 0.213172653 seconds)
loading group "io"... done (took 0.921915024 seconds)
loading group "scalar"... done (took 36.241905637 seconds)
loading group "sparse"... done (took 11.166283176 seconds)
loading group "broadcast"... done (took 0.901480462 seconds)
loading group "union"... done (took 11.79784527 seconds)
loading group "simd"... done (took 4.118113913 seconds)
loading group "random"... done (took 8.495245094 seconds)
loading group "problem"... done (took 1.852685562 seconds)
loading group "array"... done (took 19.78832466 seconds)
loading group "misc"... done (took 1.629204461 seconds)
loading group "sort"... done (took 3.072740185 seconds)
loading group "collection"... done (took 16.408210203 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487489418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123777725 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114685703 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119562788 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145791345 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115865298 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123506679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083847866 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.771281332 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148793095 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120050048 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416991927 seconds)
done (took 5.062109489 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174000716 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083000198 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080994196 seconds)
  done (took 1.286293164 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065776394 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121534184 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066378113 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067393444 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067477809 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066488384 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065801944 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066043007 seconds)
  done (took 1.644771107 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073548111 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069159857 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069404952 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068373165 seconds)
  done (took 1.404470771 seconds)
done (took 5.706037853 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767177411 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202514751 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183415493 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399801048 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130066577 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15476585 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638522058 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330387838 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183840475 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082313438 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104933997 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318566854 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107973772 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632873082 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076391158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09050979 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138693394 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428394771 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067377187 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081793384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08902521 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128639969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087336923 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078614651 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143471802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068043252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134636942 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080563582 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067112848 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208772806 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172188983 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659029681 seconds)
  done (took 10.199397664 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096084114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098041678 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068634531 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136783532 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099097182 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069859104 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071516122 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067830541 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087532075 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128633248 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089360688 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101714201 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065931284 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069202501 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085147347 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203813106 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080012033 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081811705 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070817368 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075521816 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119500485 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078624438 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078476231 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078599231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128627922 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179965544 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095796701 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097421305 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067097226 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081199404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115069478 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126449907 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067604646 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066722665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124624073 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095291728 seconds)
  done (took 4.607536256 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.295895307 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14097798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09142453 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13336129 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065171353 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107283497 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065881075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080947479 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201124695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365549559 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575081213 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111428334 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104360631 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067778526 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069222726 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083857427 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066584697 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348209216 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109057673 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104304144 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080809885 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069814993 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068472229 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063919053 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067899652 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064049145 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068055722 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.101492195 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.296565649 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124474387 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067555725 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.930958081 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126533541 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067134206 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101577111 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161714695 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219000261 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14496807 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068485999 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064638349 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151234103 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070097009 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066680431 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084093881 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104354202 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113675973 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065845637 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067603052 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161515248 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065406653 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079667597 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.97709793 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15327414 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078151259 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064771191 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246135765 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086295863 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069313082 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064612347 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090795417 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183119898 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136067945 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067304426 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066879425 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068144222 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069825772 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350219042 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06692841 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.711583869 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070328569 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077242885 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069993473 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069618406 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075714639 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072782886 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085688034 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06693258 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075915525 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066283107 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066242803 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067376367 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084804127 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353677781 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066556665 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068260879 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064614474 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086309061 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097065503 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067178553 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065506717 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100152433 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171132076 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066636203 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10686408 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067247165 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085326553 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069816031 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11386903 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066906842 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064557828 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085356097 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072837575 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096758148 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070538988 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098802288 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080638196 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068686052 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395992127 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065973543 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065116488 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069005341 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065800333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068344786 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066845277 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079717869 seconds)
  done (took 20.906773028 seconds)
done (took 38.132016343 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234571122 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075914609 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076021282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075609265 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075807093 seconds)
  done (took 1.756250863 seconds)
done (took 2.956498323 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119934956 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099308711 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064623687 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095911177 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064331479 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100458685 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099305898 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081528638 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099421747 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064528124 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096191304 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064579397 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064481607 seconds)
  done (took 2.33309076 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082840531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083322108 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070025963 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083142013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064611553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082775506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08092144 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088449807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080737133 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072227724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063724257 seconds)
  done (took 2.045320543 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082079799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08419375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070470693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082199821 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066563844 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081424004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081033378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085519626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08137913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073377771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063764397 seconds)
  done (took 2.0408945 seconds)
done (took 7.606552406 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07721042 seconds)
  done (took 1.257473105 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591409709 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.113688339 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081720245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113237939 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184484121 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121013219 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282825509 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08795531 seconds)
  done (took 8.939404883 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102935071 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069342099 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07207804 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072059764 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072454292 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072195907 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072128373 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070198983 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070362222 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071128405 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069262274 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068899108 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069210155 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069519127 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070906891 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069035597 seconds)
  done (took 2.411576851 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092987213 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091375506 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073758414 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07505193 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072790857 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072661172 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075187137 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073958067 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071014951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072759132 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075045452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074004941 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072124733 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065566055 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074702901 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076054563 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071402585 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074134273 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075221144 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075679444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075114049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064986945 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071644464 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074295394 seconds)
  done (took 3.079418413 seconds)
done (took 16.877347853 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114754052 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071753358 seconds)
  done (took 1.374708283 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081675932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085048021 seconds)
  done (took 1.360627452 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0849523 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065757845 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093535344 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079960195 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066522538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066050306 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090515886 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0665085 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0661463 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066799803 seconds)
  done (took 1.941745032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069031925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079493077 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071522494 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081992763 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074794538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064959738 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073486152 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068609058 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079472955 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063523048 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0724157 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083234852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072227545 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08519227 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073072411 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070186975 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071878513 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068554434 seconds)
  done (took 2.520989071 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065867517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067842399 seconds)
  done (took 1.332661486 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067455268 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064651104 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068264646 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068144929 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064021924 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063230721 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063950725 seconds)
  done (took 1.653848052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384893782 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110169265 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29857982 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070666109 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081696593 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251066968 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065892538 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070112371 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071110153 seconds)
  done (took 2.641734748 seconds)
done (took 14.028765362 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079337569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086727369 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095896886 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363644735 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091830692 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066230465 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114207072 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191059944 seconds)
done (took 2.301202885 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21570011 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616234241 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388502102 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197123223 seconds)
  done (took 2.405120755 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328436014 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086333019 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058722892 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067330955 seconds)
  done (took 1.751466209 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066845399 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069018315 seconds)
  done (took 1.340825706 seconds)
done (took 6.920190561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067431721 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084078976 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066360816 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064450091 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065814323 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064013998 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063637977 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066335512 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065995175 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066416258 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068807121 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066213161 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066554575 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063726999 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063982413 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065886027 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063671799 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063439288 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066294444 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063661278 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063801376 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066093148 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063695438 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063958957 seconds)
  done (took 2.823171327 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084330251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067227086 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072083161 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07208573 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070738044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071560469 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075111038 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066687762 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071894764 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068682883 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070055827 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070288001 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068144853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070820075 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068571794 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07010327 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071260373 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066961521 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068738416 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070643779 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071667348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066323651 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070220721 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071061886 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07005624 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071890891 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068457151 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066446301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071552941 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069964232 seconds)
  done (took 3.333595272 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070930333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063654716 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064083949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070984309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064072565 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065244191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063964717 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064202962 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064680595 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063549934 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065188449 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063825317 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064088068 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064861106 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064656266 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067393243 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079379444 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063800386 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063878612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065381913 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067182203 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063954572 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06395373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063531614 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064165213 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063729369 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06414033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063941621 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065027759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175637377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066804636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06695995 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063353111 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069994006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066947895 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063352061 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067442298 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063002798 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064385689 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063550847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063781967 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063553921 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063474598 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070164376 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063961241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064996965 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06348915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064973523 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064150153 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066346031 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063158737 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063231728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065693204 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064972122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067477662 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06357402 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064817672 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063307421 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064290575 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063436141 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063266929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062982064 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065725997 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064518254 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077774815 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070313953 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063168205 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065501981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064538898 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065688926 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065083738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076184379 seconds)
  done (took 6.045761223 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091805352 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087895998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065723656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06538406 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062108871 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064194791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068232596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064863439 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065556158 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069800875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064308249 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065047184 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065704921 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077396888 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065232719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065659601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070075882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062328512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064631126 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06772033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064639162 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067693959 seconds)
  done (took 2.734035982 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15586509 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070585 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106750194 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073581139 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068517932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073710264 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070242752 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070587563 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070621891 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068806193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068457392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070110321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06791137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068554533 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068493255 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068549955 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070306437 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068401251 seconds)
  done (took 2.605069924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077648244 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06638103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0869435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066194613 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066234659 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068911001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071144852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07474457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06834096 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06651996 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074490081 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068459132 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068282821 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066696034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068541723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065959444 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068772302 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066266619 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074783312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070879755 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070661917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074367618 seconds)
  done (took 2.775309498 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080510583 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068804851 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083275672 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069456026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062457605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064295767 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070302495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06662904 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070274836 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068123344 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066126128 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064813953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06952756 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066126282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06958023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06649294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067646672 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066258626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067959566 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062115854 seconds)
  done (took 2.597557918 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087190367 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068502222 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068362942 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076458151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067221661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067696718 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076311175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0676804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06716915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087452565 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067242553 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067279071 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075230608 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072292035 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067013358 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075761304 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075328171 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075375755 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067388833 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067432411 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087940328 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067528589 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075288432 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067725183 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067281134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066836992 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067220506 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072873613 seconds)
  done (took 3.244593906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066444316 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066479445 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064070409 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063982239 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063497573 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063469064 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063379266 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063750037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066069827 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063759558 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066473608 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065736474 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06594634 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065829679 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066356271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066328694 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066010731 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06341318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063561004 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063758172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065759234 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06581926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065977963 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063757171 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06327465 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065749787 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06368679 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063312249 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06585535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063444788 seconds)
  done (took 3.175235271 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076488043 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073084748 seconds)
  done (took 1.383599941 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063630152 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081041306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063721034 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070475392 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070659976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06688134 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074297258 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070064395 seconds)
  done (took 1.786620732 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081779198 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077764376 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067768112 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080600145 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076579134 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08255507 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132564659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067298835 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072723435 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064221888 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079592321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065794632 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072608698 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066228886 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071997484 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07227703 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064119732 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072827815 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068659635 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065006356 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067460831 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075048169 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068526392 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062183419 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067271216 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087727698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077182901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066219382 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069589038 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073801213 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071813274 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060779048 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06650552 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066858086 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064303549 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075800707 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081397526 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06898483 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074423263 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067179411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077134529 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061748652 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070810707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072512348 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076054844 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066346726 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06682097 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061230653 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064554855 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068293222 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061854417 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066413496 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061156883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075449058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069592367 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076626809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064955229 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067635835 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068882578 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069291462 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072994868 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067920879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068672321 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065996015 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075985377 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070904704 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075324835 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061921271 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060781582 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064309362 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076109522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089145569 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07242245 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067297567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067645693 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064147765 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06972414 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067876855 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072398461 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072792619 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066949214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072590756 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073526499 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066678596 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068965271 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074955179 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064304295 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069722803 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064411675 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082451851 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064952328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064922722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064263907 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076347474 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069523441 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066427265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064176362 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073071854 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060145571 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066250748 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066032397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066000709 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075276675 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069909974 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070334944 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074274948 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072913869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065424356 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068581897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062308723 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066346601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064540801 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072083129 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059955057 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068066027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066753715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066039409 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199221677 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065040407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067406575 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074544731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073278375 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065815848 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063915201 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070441627 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067266893 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06956853 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074823222 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065626731 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061925722 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062173063 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070602438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066552695 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070667596 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071795176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070260428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061556817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06506693 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072564616 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07491541 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067283884 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067673625 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072761922 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067952457 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065835206 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073648621 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069648222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06614766 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072432535 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067487431 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062427073 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071048638 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069615105 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066020631 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071033833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06952855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068934633 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067037688 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066039231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074359816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067934389 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065943995 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066928633 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066281992 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077215007 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068538054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062060486 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064180244 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07717577 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064988697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066590923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065981645 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068983488 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067613743 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064865069 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066924204 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06869084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077701445 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070970416 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068212497 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07229177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078069118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066239839 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068741103 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066195006 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067912494 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067395681 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074935433 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071847534 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071169398 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068524152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063127321 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071697713 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073527813 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065654974 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064199087 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065814314 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071047665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072262811 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07128016 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067733164 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064686181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067016594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069864901 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069628812 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067052389 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06570182 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073501562 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065079176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073744666 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067511919 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076151348 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069843979 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061645542 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069620233 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064530547 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072335741 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061474702 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064276051 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06535277 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066889621 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064470538 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067490821 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059683314 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071668862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072785258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066021404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064821531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065089655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071858914 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066750809 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068941995 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068461847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075740382 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06446718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068422626 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202783399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067481823 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061356834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072277799 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065648586 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066382451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065713249 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065150537 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069851014 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076975051 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073826688 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06104476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069746408 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06634257 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065994441 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062661167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071884316 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069873123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067764578 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074754568 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068208535 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067704692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071566371 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06663007 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067953202 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068772637 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070066995 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068503014 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068993963 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066715252 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069900349 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06646421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064856112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068981606 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067638068 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067432438 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072492031 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066444374 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067112554 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069170743 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068012312 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06752877 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067400563 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066308311 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070471311 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068402077 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067368098 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069064399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061831895 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074677259 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067010649 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074842006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06755338 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063381747 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074530073 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069055794 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073117677 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068075641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067307459 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068545616 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067329314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069880594 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073247278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064411194 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077108683 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075022694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067693179 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069063759 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067071685 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068239596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066362345 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068368065 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067567678 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066989741 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066510235 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071098029 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068668198 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066486929 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067747378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067080081 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06675636 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067383237 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060972649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065752879 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065781697 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066243145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075904509 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067240856 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066342476 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065214356 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067558694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065953332 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063023839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074816441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076709276 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067283287 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073724984 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066163541 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068313833 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077355254 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061033463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064910952 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064464656 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065021598 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074100926 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067576344 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075714905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066703583 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065973163 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06354271 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067080276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064462293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060397025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064213671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069135233 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064912323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064920547 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065714599 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068113463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066733946 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074723352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06517611 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066727212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065854789 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194139615 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067871907 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067576747 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070181672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068942033 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065452923 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064845501 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066962713 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067605914 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068795432 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067186626 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068839913 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077462627 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06747095 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070193051 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070775598 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061964904 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06996838 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066827057 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066729914 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066442698 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070522319 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070664953 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069161732 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075603986 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067340349 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06845187 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067321353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06482779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066605226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066850976 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067044457 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066284037 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068857402 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075198585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065208473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070344759 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067770403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067918081 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074043803 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068094962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070163196 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073384678 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067157117 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068673121 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075043364 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071779193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070232938 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068135796 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069197768 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073229332 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066355659 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072932782 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067663341 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067966195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068464626 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065321545 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066214989 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066726373 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065849531 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073250456 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068314968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066514854 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065967026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064879987 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06788754 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070413397 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073884801 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069993141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070132052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062084828 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06455004 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068298656 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064908146 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068610418 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069071145 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072330763 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068944814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066860752 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065588664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075249488 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072822478 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070595646 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064847257 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070148524 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067801775 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06963223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067996329 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067259295 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068522974 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070532151 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068393908 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066263076 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073777978 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07022371 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068054624 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06825623 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067884297 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067147424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062499562 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067615932 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069291091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07226509 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068783582 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0674423 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077348811 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064893206 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066814795 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069914539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065668946 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070688272 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061912153 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067655428 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066650196 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066497358 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060915082 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064578797 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063589973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067613072 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065017489 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061221402 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075383091 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074026472 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068253864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064653359 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195382654 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063040399 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062988148 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066544391 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068564951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069836003 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07745659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06577929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066135709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062827234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066889909 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07066922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070439 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064794298 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062741017 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066657226 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070463204 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072831639 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065679976 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067448222 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070407585 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069476878 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065864523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071351316 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064434091 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071447017 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080087446 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068203907 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068254306 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073503714 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075079784 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06887811 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062409847 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068546863 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07016801 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068408124 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068699632 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068387551 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082037252 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070716802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066352332 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066409123 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069824781 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066557863 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075435689 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068492013 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067716755 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071898736 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06862595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077202543 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07049735 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075433802 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070355569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070197073 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066575353 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068766285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065826347 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06622179 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06867901 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06784286 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072820806 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075279826 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066553436 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077931122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076616324 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069113501 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063843534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066551003 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066382975 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062530432 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067704358 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065381442 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064770656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064940938 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065750977 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067785476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072056079 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067498781 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067384033 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066563685 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061115233 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068742844 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068804321 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067290667 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063668253 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066772266 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067311083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07047304 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06998784 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064515414 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068625838 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068176452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067239364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061997453 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072974983 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06617066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068519793 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065802227 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066617317 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067359115 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070158238 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071962132 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067811401 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068665621 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070183905 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068732612 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063536937 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063867203 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071225246 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064371725 seconds)
  done (took 42.743087935 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102066892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063797403 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062807556 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062832648 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074682121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063794055 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061966587 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063279404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063383114 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065820378 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062809395 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062296399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071706301 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078395838 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074635022 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06726529 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06265069 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063519492 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062442135 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063192388 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071629498 seconds)
  done (took 2.762145132 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07517519 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071722559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073595622 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076715962 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067738279 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071067159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073771348 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071460136 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076842208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067972308 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076829779 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07144155 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067669497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067896711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067775413 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071282755 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076773769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067653915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07108703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073005599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071268817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072965264 seconds)
  done (took 2.893596298 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068714986 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066064926 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068360678 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061683297 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066675033 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070117596 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070130828 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064341943 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069880631 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065242172 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06544535 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065266293 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067776497 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061934402 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065671091 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064023257 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109169679 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069387863 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066009607 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067585311 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06153649 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067717337 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061815325 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062327368 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065256043 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06989798 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067162445 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064460858 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065906119 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065114707 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066094857 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064065281 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067534248 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066746936 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065184114 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065115959 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065732003 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066589028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061784428 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064262675 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066916 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06220538 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066355603 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067518357 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064147432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06404724 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067201765 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065987805 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061259283 seconds)
  done (took 4.578815962 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081252366 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109228971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068150985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088700627 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081387013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076171265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069561777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089990303 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064283483 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064868559 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082064632 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08029256 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066324849 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070814384 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072877143 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066353311 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067183477 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065054112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070077356 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065978936 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070257244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072691435 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080779796 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079725876 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06984629 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064955759 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065551959 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070438159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079150804 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070774624 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070574641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071794803 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080723643 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067919718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065292484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068059958 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082403732 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066396847 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068556653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064009102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068271824 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070329041 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072176601 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082223565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066047792 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071007891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066096258 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062920755 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078640259 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068005762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073534691 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0804203 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069660732 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066210117 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070182765 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080923306 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066055191 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06387119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068858128 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078133297 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063436862 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069517724 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07977862 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067418543 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072798392 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080472043 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071198281 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069637297 seconds)
  done (took 6.37822851 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076593871 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073171502 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081562084 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081630803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073084205 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073051534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07260082 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072945266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072364191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077431821 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072891999 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093811759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067979654 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075567599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073127351 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072888135 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072833428 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073658599 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072987545 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072853157 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072807963 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080516986 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072867168 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08071861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099043572 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068155211 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072781885 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072872442 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080874962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072655899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079466467 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072902435 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072872165 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081088774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079920497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072373196 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065606841 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072364844 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073116411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072413034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067634647 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080742789 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072601841 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067849187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073023582 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072517119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081033632 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080049927 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075629857 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078257685 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072624046 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081087072 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072188829 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072616484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080961606 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105458946 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08032296 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080630146 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073142792 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080458482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080869523 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087092134 seconds)
  done (took 6.070604394 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084451589 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075300892 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077717588 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061491062 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064109436 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07046309 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064122782 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064352585 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07538611 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074994155 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07776066 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070051311 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07367679 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077262741 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070001556 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073499355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070242457 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070174823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074598338 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070095574 seconds)
  done (took 2.771829716 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075526178 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083589651 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067429634 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072662328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069040475 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072232741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068906947 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069723442 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067359909 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069426936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0769334 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076296961 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067168949 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072263215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076383374 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072344612 seconds)
  done (took 2.484770874 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076445271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073159461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079672249 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065978708 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064369235 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062877727 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066322636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061880401 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062700271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077851564 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066047153 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068761423 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066059878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064775552 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06330468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069158274 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0628318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063548808 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065898286 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078482472 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076844825 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064881453 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066923137 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065877167 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066280506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071458465 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06574363 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064211877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063570729 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067024324 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066717341 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070182234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063251324 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064031658 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064786522 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063811882 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065993431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066720569 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069056275 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065899247 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064153686 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066076794 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065699915 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066886238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062263655 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066748564 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06238661 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068290066 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063955052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066641478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06576963 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068406877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066419332 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073079235 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068903206 seconds)
  done (took 5.018194728 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080360253 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069739942 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062579273 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064410577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06952139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067961206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069875804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067665089 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06769597 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064219413 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068202956 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068873377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068116897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069619253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0681424 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069929269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062392766 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067945076 seconds)
  done (took 2.569383751 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072210759 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066712671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07340816 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065914464 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066726958 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068253873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062357456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064717601 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065067431 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065924499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066463339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069056805 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064676567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068625389 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066078582 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066385094 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068345203 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064847393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066092228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06223139 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068298005 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065049194 seconds)
  done (took 2.801410022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093736413 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081435084 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138047411 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079052651 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083523574 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071693214 seconds)
  done (took 1.883719851 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092771763 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079551551 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06715149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087596828 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073921938 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068124255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067857029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068300504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076886972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076457238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068234752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076733829 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076883543 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076359088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073872637 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074079945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067757247 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068172867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067042928 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085310419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067992976 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076687475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068336766 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067500978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068041954 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076072644 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076447241 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076587354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06798805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076182089 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073568698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067659033 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076816571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076562125 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069728243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076457437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067924858 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085028838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073468253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075781808 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069065948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073647738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076911079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072764191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076335498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067890938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072695432 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06786649 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06767754 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086567572 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074281366 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075806709 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073688587 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077072081 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076836042 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086981729 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076601372 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076363956 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07406131 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079526291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076201128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073696506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075858029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076673224 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074818119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075912241 seconds)
  done (took 6.254373782 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083230446 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086938663 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068573628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076730999 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076090232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068227498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068488753 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068134948 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068307047 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067807123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108614323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068828561 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076637461 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076504986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068725199 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067960854 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068331594 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076159168 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067703713 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086874379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067939078 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076578704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076019109 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075840232 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076758176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073908217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068514155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068056046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067778916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068098261 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072912194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068239441 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076692334 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067340646 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076131747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068026159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067792917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073159046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068081888 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073908936 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076096128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084497332 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068192676 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067533568 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077151064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067973184 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068165291 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067582873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067936999 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067582667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076454686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076843836 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077001094 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076004841 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068261179 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068230195 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06839465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068295053 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068257473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073739482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076193017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067959986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086444755 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068056503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068022494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076033247 seconds)
  done (took 6.167395681 seconds)
done (took 129.084526236 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186175514 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165047187 seconds)
  done (took 1.683017667 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070755212 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097783443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077298133 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128883716 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066911193 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100588759 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099500959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078219469 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066532813 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066485858 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066036871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068808006 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131562461 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06642901 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06650513 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069022902 seconds)
  done (took 2.666946179 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098014865 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158017625 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099596365 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065061132 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098149272 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073224276 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065154204 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075245629 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070946092 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065416858 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073465153 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070589821 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06550544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07061242 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071126322 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073206654 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06525226 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073303288 seconds)
  done (took 2.783700693 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104526086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093083717 seconds)
  done (took 1.551086124 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157499149 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10577801 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151058356 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348125059 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168827197 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229026209 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127488072 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127868017 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117984997 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124407374 seconds)
  done (took 3.004385367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099719132 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151704329 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257190859 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114934945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072530216 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095894353 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116240712 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077999394 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081502599 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081299484 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080962036 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076755444 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09951736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073690485 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073930358 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076555929 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103122477 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072610377 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074217639 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076828129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100019054 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066113216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07374728 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073038687 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077995 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078130999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066155606 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065933475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077119758 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07463906 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077454832 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09417405 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077713309 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107744067 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071241672 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108725801 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076983089 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073983309 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074435766 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074010231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079395095 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079896811 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072367602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076179156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065577036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076723143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065584648 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065433306 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078424149 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066999874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078449343 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07709878 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107897869 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066884563 seconds)
  done (took 5.982301514 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103708982 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104849175 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071886207 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111145351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100406392 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072508771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101073061 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093542929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103221646 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070281688 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068674432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076171931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083052921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083709023 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113583707 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104885403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074233967 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071402271 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10472946 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103330506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068906504 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095056736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089628743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10262272 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067645157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07039381 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068097212 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070869758 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077393205 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079670287 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069812573 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081562752 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085570018 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079351649 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067502824 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068262495 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068275168 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080606825 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08026725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079155645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078309675 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067887245 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069746805 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069703905 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070745415 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067783358 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07967791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081084766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079261114 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069554116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070137088 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068087518 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069799172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081316437 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078717522 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08179405 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080828458 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068488912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068571393 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072444526 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081470608 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079790697 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080374262 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069530661 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080005498 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068333645 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080412037 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084702802 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068900908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070115201 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068860307 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069860366 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070100124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078613657 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079054494 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069811695 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069684651 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068698442 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081207539 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079119553 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068868587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077500793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067290967 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06875207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06962273 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070012445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07817947 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080410861 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070586509 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068268468 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069246111 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06841222 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066509727 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076507161 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079787859 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078139485 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078039196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06898873 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07825579 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078727161 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06915815 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078899459 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068013909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197043934 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071028133 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079832403 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078091087 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080477673 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069774927 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06893285 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078875115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082359821 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069758337 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079450109 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08111525 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081038834 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068960687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082367842 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069506301 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080808604 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070388637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081634318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06917632 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080868953 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069772735 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068237336 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069676131 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080132876 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070852684 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069146664 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070622639 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070130353 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080628527 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083632774 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07042128 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082166941 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079539404 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070680035 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079979558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069488454 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080242516 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06977598 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070462582 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067711229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082051866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069198395 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068692 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070193393 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081620524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068799182 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081646085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079984973 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068847645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082251406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081557326 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07884702 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081427102 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071099957 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068828254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06896294 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070827466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07899395 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081117421 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071812505 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069252345 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078944298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080426859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067927152 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078996674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078257052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079074098 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068745182 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07007565 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081063308 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081327697 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078889643 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078945043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079260818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069247285 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078354218 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078725549 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068536132 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085216801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068648705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083292217 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080576256 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077484825 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079096619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081203243 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081084129 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080809566 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083812447 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068392487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068430828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080626543 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06854952 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068906396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077973615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069078692 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068808166 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082230133 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068100399 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078637572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066876806 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07777085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066737075 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069364865 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082755501 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.197401034 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070659411 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081238093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070143205 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079225677 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082097457 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079862478 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069178843 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070837744 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081617984 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080520798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069108862 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069497313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071654887 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080131246 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079191639 seconds)
  done (took 18.759175255 seconds)
done (took 37.787002715 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211591864 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151573146 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199116307 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118408384 seconds)
  done (took 2.131766538 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122920881 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101291747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09595857 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064991826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102643718 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06535602 seconds)
  done (took 1.945581427 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314253135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211756144 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183128359 seconds)
  done (took 2.097489459 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200685253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188101239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391520051 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253478153 seconds)
  done (took 2.531632728 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144894519 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090488717 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067172681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083008306 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135795986 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162163687 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102150271 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126910293 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07900668 seconds)
  done (took 2.433488658 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148177112 seconds)
done (took 12.677597876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.256532497 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112657071 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096647251 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077028171 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.168885224 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08211401 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.187919094 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198642889 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072970745 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072327915 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082290105 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08970103 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.196517921 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19443193 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078239633 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073936261 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073111626 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117726042 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.204336009 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05107008 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090759503 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137549796 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065268413 seconds)
    (24/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.073368553 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052002514 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099871402 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150118013 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089930864 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.155218057 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052638999 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170584946 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108745772 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214622059 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138083191 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132574255 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075337454 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099681628 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.160743 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201348165 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.158437513 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071473361 seconds)
    (42/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096672606 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051532582 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102136364 seconds)
    (45/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087250475 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074121883 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101445015 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066635448 seconds)
    (49/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108903613 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.169948875 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071800662 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16463938 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.180227678 seconds)
    (54/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066752613 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.157886205 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073618681 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054640923 seconds)
    (58/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077333395 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072724323 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086089275 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075531284 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139196134 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186637311 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075291763 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102114605 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061608262 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136532594 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11593084 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136502183 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113690975 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067259435 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054189311 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158023824 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090310261 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171074923 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075437244 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.159285606 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089994943 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158243734 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 0.140291778 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094100332 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071639067 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107229726 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.206964658 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06428947 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077713061 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071944384 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071580276 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088445875 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.406769549 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074683731 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109793537 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168365839 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051390239 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 0.125823153 seconds)
    (96/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185799524 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.06745056 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078266864 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064055519 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080155228 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082305143 seconds)
    (102/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06184873 seconds)
    (103/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051852709 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.153933195 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053104357 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090868397 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089523125 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075157856 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090626322 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072975577 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091640936 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069414354 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068380821 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065973018 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073112162 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094392296 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088863405 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158562579 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076490279 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052475638 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09196131 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080198025 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094530891 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072489349 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065497165 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158791269 seconds)
    (127/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10971041 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08838788 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080613321 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081383713 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135684015 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075556936 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120405815 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051693544 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069964234 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176069052 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051624436 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.134213725 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073999516 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173931579 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09910676 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075065866 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071882356 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06621191 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080228338 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05097339 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07082519 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071780119 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053930454 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088943861 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149263705 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073229531 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05110338 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07471473 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150765028 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146186149 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071929771 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089888558 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076502889 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091557332 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173728702 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06534342 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07285325 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12008637 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186608279 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066051656 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150548175 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073083689 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052833952 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066406015 seconds)
    (171/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097448563 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090920578 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070488601 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076122422 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071719395 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065710078 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067639804 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05238546 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071868775 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173161213 seconds)
    (181/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052074714 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077765431 seconds)
    (183/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052286155 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088246501 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076874265 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066225924 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072866905 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051613552 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06534067 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065481609 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088106512 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051445785 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070926464 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.22780347 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052734935 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073966642 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072363654 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089905573 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074303755 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052135296 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068403806 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064242605 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075385275 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139781765 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093767849 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08915374 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0665248 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052073114 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.186921821 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092019452 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066495397 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13641174 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069838717 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073156597 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100658234 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070283723 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072791002 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09311657 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06523916 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065991379 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05157006 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06671108 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051947093 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081674817 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065872424 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074666206 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07319786 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066621276 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068453275 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106337329 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072829557 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079162096 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066695746 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066390367 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065674944 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071608958 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.161660135 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075026159 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086824098 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065870497 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065351498 seconds)
    (242/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061808416 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066637583 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176125426 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052646093 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095785104 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13256071 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050992025 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173944677 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064820728 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176389241 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052405977 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069015898 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066500225 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05224603 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0519868 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069498691 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150333436 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051544088 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052855447 seconds)
    (261/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052261103 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06589869 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074826617 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051271853 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071113874 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065864929 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071702901 seconds)
    (268/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051258533 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067144952 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072984913 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067284934 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164156238 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053218388 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05145109 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051924046 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 0.127333718 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086828906 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05239301 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073414289 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141828972 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064440127 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066447319 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052760977 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064610872 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065879492 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051809306 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053720576 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051977 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067480274 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052217421 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05213337 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072690299 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068774903 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108530384 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05300274 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071414449 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06599092 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067306467 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074021501 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05297115 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150844532 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065382537 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068252721 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070769689 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051099402 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060607397 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089545713 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107026584 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050815768 seconds)
  done (took 30.537158048 seconds)
done (took 31.93599206 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088646341 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093420979 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075761342 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093593026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081562188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07692877 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072993373 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078817714 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080839905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082601334 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079168925 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055505415 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074890839 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07461469 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075177844 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092279523 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078539206 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073193374 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073498739 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065280903 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073977742 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066428052 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067733171 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05559962 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07877488 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072761818 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07354408 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074793869 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066693567 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066503555 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06978001 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073715869 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066118078 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078392941 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07280083 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073798038 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075298313 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077445188 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068623369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067117546 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074709531 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066986117 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073249127 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074148296 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072981021 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071980557 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073845266 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07879989 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091892697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06917794 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075192349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076283325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077058429 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073160153 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070158164 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073424485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070968632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091736746 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073881886 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068648958 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074482793 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074333475 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071404458 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07324982 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073951076 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07551622 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075878706 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071845755 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075437977 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071754471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065942929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073113567 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069756313 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066260628 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075849172 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077216232 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064797873 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071234593 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072832574 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071892378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065432301 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067717367 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067644508 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071918509 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06774586 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055007424 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069590778 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071741983 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065209027 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073336325 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072188718 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072317485 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067610543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075668154 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065446152 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070709855 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066031793 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06607465 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067483416 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069719648 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065618073 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067956951 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074908109 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067572585 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07194031 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0792767 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065738685 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072074716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06498404 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065297678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079810978 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07472588 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065728565 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068328779 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064712428 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072813846 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064815822 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065141809 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065568416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064956213 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070165201 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064669113 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067561193 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071689407 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076613429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064149992 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067595149 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066611223 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064815675 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070087004 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064403547 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198886327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068836 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06253844 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069193394 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066082512 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07385734 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068528332 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07364595 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068337428 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0740389 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070838002 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071931784 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072041467 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065392421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059496264 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0691818 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068975942 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068773239 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066751895 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068806065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065980491 seconds)
done (took 12.536436687 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069340748 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145296985 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100365252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096245167 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08702259 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067448083 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077372719 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103286619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068699055 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103852261 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088549939 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085741995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113452354 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065532798 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066935773 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070488529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068130477 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082256887 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102184397 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086994444 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11723135 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066252559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095440865 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09081433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088163349 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093101821 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067699261 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070265613 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070535758 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101340577 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086957719 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070481315 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067420958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101779134 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093732754 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084111202 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067003255 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083474666 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067465924 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066692517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067772911 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099116953 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080795442 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080890711 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070512457 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069972283 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067837292 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084536177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089963759 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079874705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087445829 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104292605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069526205 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066218925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06560021 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086634821 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066119797 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069343392 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066710773 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06898339 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066714819 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069591138 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081824999 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083309932 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070272378 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081373038 seconds)
  done (took 6.852928206 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086045841 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091130129 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084568493 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08491035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066974259 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066929836 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066953565 seconds)
  done (took 2.045490342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070033801 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08861882 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090060037 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089624141 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084855842 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088075949 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076445606 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067214185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081487034 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068655976 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08851149 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103739386 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068037221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073355455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091364851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067258605 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091182461 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067298295 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071154262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090853559 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069794799 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083463115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070633646 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067467219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081689897 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067196431 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114599494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07173952 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069157993 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069891815 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065532598 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107757021 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081118143 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076011513 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067065528 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081081234 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081156794 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065250337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082987641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071781868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08092478 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067516763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067650181 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064759212 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071577561 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077142817 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067605055 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067560028 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06930052 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087017815 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067390776 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080457522 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069977523 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069654436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068194434 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070433235 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076622633 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067620684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086514533 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068580377 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083887005 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083512015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080492492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083267403 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069440888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080420856 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080980721 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069383764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068496966 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070386287 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083069758 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065275312 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068338357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077543659 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068550906 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089626589 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089838332 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068509888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075927017 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067273658 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066899406 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06674371 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089990379 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069304668 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066804925 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070663005 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069863441 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065318245 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065918342 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070124574 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065109829 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06839403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069906005 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070174852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069778378 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084502582 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068794708 seconds)
  done (took 8.817225697 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071996505 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069049883 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070059458 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069285023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069151715 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06840889 seconds)
  done (took 1.937307945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097446194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07110596 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081801845 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073277962 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105696819 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087946165 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088352036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079497585 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084642026 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080197041 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087564843 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089116812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093645799 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073780889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087241767 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072570893 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087950885 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076643504 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078919975 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073783967 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0873028 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072975988 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073356557 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082890741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075964564 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072386704 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067898119 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079633926 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07891626 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078964237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073314823 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076409396 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0711381 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079103619 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087619532 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071398346 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072567021 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077614395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073333323 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076213839 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088736628 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073445869 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075267699 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078119109 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079154556 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071510375 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077814237 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076741337 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086750665 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077828327 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078054114 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071989223 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075785298 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077733543 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070993608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078805526 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077419887 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087049407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072657941 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070808183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069855089 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075841222 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078703131 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075615005 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079542714 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077394627 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071140164 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072921853 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073583959 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072360476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077894916 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069531738 seconds)
  done (took 7.136049878 seconds)
done (took 28.271860988 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548473545 seconds)
  done (took 2.029762312 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609660751 seconds)
  done (took 2.116002829 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.579079373 seconds)
  done (took 8.087353365 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400483928 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476387462 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693310991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131328677 seconds)
  done (took 3.250543443 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.676405581 seconds)
  done (took 2.194119346 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21440575 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197142922 seconds)
  done (took 1.939394845 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380427975 seconds)
  done (took 1.891963855 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.116242834 seconds)
  done (took 2.62834948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267030504 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164846751 seconds)
  done (took 1.949287295 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46410277 seconds)
  done (took 1.97758843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.835466145 seconds)
  done (took 6.350372359 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21550084 seconds)
  done (took 1.774047509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24309431 seconds)
  done (took 1.758998629 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.835164525 seconds)
  done (took 3.349391556 seconds)
done (took 42.811745291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08436467 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082414519 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082326005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078794584 seconds)
  done (took 1.829120396 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081029324 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072905661 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076809944 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073027431 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077340207 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072927268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074877418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077582753 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072938119 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073526482 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07310468 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073257376 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075341759 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074726338 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071639763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075620807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077219541 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073335456 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075973393 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073206169 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071744913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075348031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075562776 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07262785 seconds)
  done (took 3.30899117 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080474277 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073812242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075302201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073020024 seconds)
  done (took 1.828649968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081223246 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093005621 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089568719 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077885866 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092855855 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08697466 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06982037 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070068485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07399925 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077457164 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068577463 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09705513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088240779 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077356739 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079917493 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066766955 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068875378 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08800883 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078073546 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077985457 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070440034 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077570488 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068599587 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088798397 seconds)
  done (took 3.428579399 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080990304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104365852 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078406648 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089250566 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090596978 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065691518 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075404514 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089864815 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123764614 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066021798 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071156062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065912863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073147687 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066011332 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076600338 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105775942 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10922882 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069578751 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097083305 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065923095 seconds)
  done (took 3.19530685 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076478936 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071022608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066859408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069765794 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077978005 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073412943 seconds)
  done (took 1.968874152 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071122653 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069640578 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068367056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067752583 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072326028 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067609756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066316608 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067932935 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068057845 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06757745 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067244183 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066092982 seconds)
  done (took 2.348555818 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.176892043 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0691915 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069846221 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067001993 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071590801 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066948233 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080321441 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068272284 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090952458 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066814391 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067124577 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068601762 seconds)
  done (took 2.495104286 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211306309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076898859 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239953309 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13898042 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113245101 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116871331 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105123756 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114606639 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145229783 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103205521 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169844154 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167860101 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108405019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138929035 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089958386 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098824454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157683016 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164550945 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104540621 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168060784 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145806759 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125862534 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148641408 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102290054 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107215058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123965227 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071568044 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081059275 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173313629 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13387946 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148729805 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112698135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09472577 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178972649 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173726979 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143936148 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135702944 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084277082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103600891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134930435 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204095202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08908776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164455397 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248189183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082536643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136241471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121758522 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122563779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108644503 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091099098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149158018 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185288494 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140836219 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088195886 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113494877 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11692186 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117491759 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106256788 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186451857 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163370453 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130286033 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071825679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100206285 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156356914 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132953679 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110404151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128425207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095629519 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135796783 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156918678 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121119305 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145082704 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129964343 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089735383 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120480105 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141278192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130407226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172586052 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127124797 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073690786 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127282952 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104916347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082096176 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141973277 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07617012 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177114069 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100406833 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107122682 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114376618 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109672379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109799057 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163619045 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143177597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246461054 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067487113 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106396188 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12204086 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149974971 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08977281 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11050952 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118801449 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079498756 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142549193 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075769069 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125811069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076258154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127384558 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135837305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076990094 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123538599 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101864355 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101728552 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136103859 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162369681 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090909993 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082920363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168890619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123426667 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10562883 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146637804 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15834041 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100327593 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10476345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151821975 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182213473 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090440835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165788053 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109013894 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08520282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088350983 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126137282 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114446721 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123981995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083524636 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120965313 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171774538 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076109609 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09647411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134606865 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079930777 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081565606 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104360072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10143896 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096122619 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101088976 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105444822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138674784 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124296982 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104630105 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270109592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100260159 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172959833 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090781788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101789179 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105314275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071282332 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13988414 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16009654 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080753925 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167419983 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126269946 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106167735 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121304129 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08487609 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141613334 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0790808 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070945236 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146046311 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112268214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111904194 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153653441 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106468775 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129436955 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120938101 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137214642 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13468019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131585922 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106882069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088694952 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113051299 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126995365 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073691467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09303582 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081210039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105537527 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096973364 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084256486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145203381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126931534 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101191196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112761148 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098590473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149491244 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077543404 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130708363 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120160529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094922741 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153178894 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153917728 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132630273 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099933593 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145740682 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070139773 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073784276 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.235669534 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127522362 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08453964 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085479889 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119833911 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149578842 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131736957 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141695257 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113521552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122973225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156764021 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070885584 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117787864 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150578099 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122620056 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105516082 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091142591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100495795 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143559099 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109424015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185630662 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11639583 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128229723 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155545311 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.1007318 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081110854 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104639913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138000826 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106418875 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147001294 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100787983 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089496266 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111896201 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075097954 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102245634 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129365065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121946939 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137578619 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121809082 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13519338 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077895447 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118645851 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122129663 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124028703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064328888 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120922466 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163676503 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094362929 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120209569 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154380707 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079794782 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125153236 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.325236894 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149044597 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086674322 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112547077 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121179982 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129905662 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122395756 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14267323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110303209 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137195584 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110455376 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086971204 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089092937 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098885061 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106918114 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095360305 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110101 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117239223 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096115616 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13408012 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104470638 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111441776 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119811467 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098337037 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090053682 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098498454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177543678 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121806156 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174655213 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099805258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147576622 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167194808 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07581008 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079943448 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079247064 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141336734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084865042 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13299267 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098713381 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107076467 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126027006 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144435939 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096682428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069661551 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110034775 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136828445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113118219 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099148537 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10506982 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16470861 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101122686 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079903535 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114505614 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105794475 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102825958 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31828451 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062810722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099388465 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0772442 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082312087 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130557035 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156526515 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081829114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104113276 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121708882 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112166903 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129299079 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103398665 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101116992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115970965 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152700533 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131390249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091079158 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113902779 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131338965 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159417634 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107312921 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097183967 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174167016 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156910223 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16345515 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090096129 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115542411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116314469 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109720697 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141354746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084675813 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166331737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082858092 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138559555 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105571944 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091781058 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132183154 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117353309 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089460875 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150531392 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119333181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083660994 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079009139 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119753768 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121252094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107764373 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07611779 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140582767 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073589018 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133509975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170498687 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0819653 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251740222 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099523408 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08227045 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110457772 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104915365 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091362815 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100044138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176594742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090086681 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153171263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145161517 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115706956 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139383397 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101843032 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637665515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079210193 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154308196 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118600124 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177282351 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098735492 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11933482 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110344725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126447665 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146695211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106898201 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175664482 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134582356 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118362682 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080756314 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103867035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104794919 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090308288 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106737964 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114930456 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118261515 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095103861 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117959432 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126030607 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082844026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096820811 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158085698 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118866222 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146634409 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141840438 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08500514 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118477581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13981569 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080329234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123468913 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153859443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105935355 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243841354 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083061225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104993156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174843781 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074067452 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165452436 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122070955 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111207933 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115553703 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116908717 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133641969 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110032368 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124337596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09569754 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113040532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114176993 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08317125 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077923073 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106214186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114726439 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098942097 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101016135 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099699675 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153357856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071724041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096756918 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104619543 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147818612 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177905823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089035034 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083726083 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120723671 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114603956 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114980689 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12251025 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080495762 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083772394 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083016833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077965688 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109482138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113808594 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105646378 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112820149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167016165 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083513177 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221226688 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096226115 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106110229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070104182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079920673 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09735859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0990197 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108655003 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100549048 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170544824 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094582723 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090277652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092837494 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073023522 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22834247 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130865125 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113425986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121662591 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100114074 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063481253 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111377074 seconds)
  done (took 59.693392215 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11200986 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083270789 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098026103 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150716483 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123878662 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213906107 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158332284 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200771958 seconds)
  done (took 2.781651161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071677973 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09499716 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101139317 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083585059 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067464418 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069415143 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228172344 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082437196 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0671357 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089383007 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080920075 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06957621 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424333794 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066885318 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068708436 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063184158 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068324776 seconds)
  done (took 3.428856515 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373642882 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603033431 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37578556 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074095059 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.882843782 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090447417 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.05662772 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128729842 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074326645 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528164029 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.71025919 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126313704 seconds)
  done (took 18.666561192 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079732763 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071247107 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085143448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085319119 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074111417 seconds)
  done (took 2.035293232 seconds)
done (took 108.580484335 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084163953 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398695251 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054215095 seconds)
  done (took 2.124907503 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087007896 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086351586 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085405178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08350698 seconds)
  done (took 1.994332303 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078177838 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077478627 seconds)
  done (took 1.798656304 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227959778 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160027147 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087628068 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08565055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079288853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079851704 seconds)
  done (took 1.889948685 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07619161 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075906101 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073592128 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076835689 seconds)
  done (took 1.941549158 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080274808 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053276161 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05600707 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056541801 seconds)
  done (took 1.88617134 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090705973 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080423712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079665485 seconds)
  done (took 1.891015971 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105472271 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085905214 seconds)
  done (took 1.832386641 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086318161 seconds)
  done (took 1.728423957 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10311846 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115976165 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133122935 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111631895 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139788084 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110011694 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086657236 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088095066 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078046402 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088638103 seconds)
  done (took 2.695607278 seconds)
done (took 21.983684742 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082658445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368343376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361258647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0905249 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.681973378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35753438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983324474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093573788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114929691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068697574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084759538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657830295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010078988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324543983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995780115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319655307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651028089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06952911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068849897 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069061556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968278937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068311531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068832927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069629291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650365033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372849909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06893425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320156266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068717411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070731637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355854114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069064247 seconds)
  done (took 16.231631816 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074339125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119628135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074810844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085578886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070663672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070702578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072104531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06967304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121263454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068384102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085843257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068295393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072373384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069311469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087990413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069314165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06946754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069454621 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068701717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069070739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08721721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068942082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068745105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069104834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068715239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080214508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069054651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069258747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069168146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070797349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072024872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06985173 seconds)
  done (took 4.076125906 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119405183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127464038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075451562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10441448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114864909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070523348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144679011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093721273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128670174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068674281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085562034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068864925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102140361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069808734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088474917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069588712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070296539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069444401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069692566 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069087151 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08824161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06879201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069307023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069761824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069337185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082584334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069331854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069586716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069337459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071445044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07281993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069893925 seconds)
  done (took 4.340204913 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075804908 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075753448 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084483671 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084732263 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070449569 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072910622 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073389321 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070475462 seconds)
  done (took 2.272221513 seconds)
done (took 28.568756743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082674199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0693136 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073984011 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082054952 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074461096 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079473866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068004278 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075194347 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072736259 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074084969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075987609 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06816721 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071849348 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068279976 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074393424 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068293154 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080086323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073054378 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079981342 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080434203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070989483 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074066174 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074695266 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080037713 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080075776 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080008029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078720048 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073741367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070049955 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071146968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07755129 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084610261 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069447667 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080016343 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069054151 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069091454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072343815 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068626209 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.0799703 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077264796 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070618992 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077081599 seconds)
  done (took 4.775085894 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091170242 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092233454 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085727584 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062330662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068047807 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066424282 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089638005 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060072997 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060382705 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088472612 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056627354 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060101497 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063202368 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055105271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059942842 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057629904 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06195296 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05652981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059882639 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059791673 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089506235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054865026 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077835211 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063497863 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059389121 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062343168 seconds)
  done (took 3.436721844 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090529833 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085751594 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089221629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127707183 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104078073 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077754334 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080613385 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093746148 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086190526 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067394866 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071992473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095195218 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089504051 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074831584 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068454949 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085620241 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083234561 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070244781 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074700751 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093665861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086937696 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085574353 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093566306 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081619078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067867798 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070262779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071897109 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082037456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073614024 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077735562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07256814 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071565718 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069987131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079561143 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072099966 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069771632 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091171097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077997619 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078973768 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069436674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072269781 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069571374 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091972271 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12739864 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067704069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075273883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07576872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077962235 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068357083 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087108612 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079162342 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067682977 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071567134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067624112 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068409963 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081287225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070353352 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070456069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077817803 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071279499 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090679518 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072375964 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083339784 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068041282 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07590752 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06773344 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069187923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06739152 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093248518 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069845523 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10941593 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069996447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069188594 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077302049 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076037603 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074349847 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0689339 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083528215 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078747016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071718474 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07709763 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071800315 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071797672 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088464459 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070622693 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069955723 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069204033 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07472036 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071163534 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069485174 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081315604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068611454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07117499 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085213014 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06851026 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069471098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074766879 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073155397 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067803783 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079548487 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073006034 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069057115 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077227552 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068458583 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071081921 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080376417 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074690101 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067655666 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073033383 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074237025 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06881716 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069377321 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07063454 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06976084 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07645201 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074775138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07229881 seconds)
  done (took 10.713206545 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166163159 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156389617 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07111568 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147375852 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077586862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080292192 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149196166 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095819636 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06863191 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06936333 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069831069 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11129638 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107361735 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117003571 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07969762 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068759493 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08486789 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115567995 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151075723 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144835867 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084779502 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077701081 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070560068 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069963462 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071442476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079648336 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086222489 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077744155 seconds)
  done (took 4.453979369 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08520367 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098367513 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075375404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090427058 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092563022 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068868159 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071041018 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070827569 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081495897 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080200187 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068611726 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074805603 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075808239 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072284067 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069402185 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075554313 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076015747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07016971 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072223611 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07399927 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078703326 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082059578 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072411265 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068575743 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073693774 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067877354 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065538338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086033072 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06891623 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09136307 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066549736 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075590196 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082361198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069255593 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068303187 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068421562 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068106521 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068235671 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070329773 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067210383 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067264953 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058467548 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067717672 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081193554 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075089031 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057318446 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073565915 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073548454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073530215 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06629459 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071131431 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071022169 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071514212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075502291 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073156411 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07385449 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069852476 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07472578 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076367071 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068330642 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064923302 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066782003 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072591414 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066847206 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076555044 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072719926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066824032 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068003748 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0702669 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074214866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06802909 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071839909 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06602321 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070133142 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072769266 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070112452 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068958977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066798125 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067955834 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068712098 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056200208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068245208 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054288091 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071170631 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066558999 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067130336 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067958432 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07328422 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081106821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069407414 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073984088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069032015 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06725595 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071376314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060991022 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071266978 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083371658 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084301498 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068471788 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066689791 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082514624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072669071 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067530189 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057087798 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075890617 seconds)
  done (took 9.254897915 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093679813 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070750122 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084960172 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092035784 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087299727 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076141823 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077538967 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070560037 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083142197 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074791245 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077463 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069183218 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078312949 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077807301 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070956805 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078138092 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073002531 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084044372 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08319882 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06904081 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076517406 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081386517 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090294406 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081542767 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079129706 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081024253 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090390553 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073047432 seconds)
  done (took 3.93306693 seconds)
done (took 38.218592173 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74638897 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.913030277 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.742246801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.08184388 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.958418322 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.764185126 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.86792164 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.73446108 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.896188127 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778227657 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021409602 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.768862035 seconds)
done (took 64.947665749 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.791281115 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.881867573 seconds)
    (2/2) benchmarking "String"...
    done (took 2.009700176 seconds)
  done (took 5.565883599 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.038167583 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.324359318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.969421828 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.734963136 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.737872691 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.970392922 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544034407 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270963418 seconds)
  done (took 30.228071944 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.900302365 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.960270391 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.442057158 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.493345563 seconds)
  done (took 15.522315745 seconds)
done (took 62.908019827 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.743767625 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.764473051 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.745491421 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.717918211 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.793294361 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755298941 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.82533088 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.913030916 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.734232003 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.718745317 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.736827313 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.166873136 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.740090626 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.80876491 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.734755365 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.744294919 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.77855772 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.197048907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.891457733 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.747305239 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.753090375 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.751853119 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.737841776 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.745038087 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.787623734 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.737315054 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.172904577 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742352306 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.363602577 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.73708879 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.765209369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.050318083 seconds)
  done (took 203.275301153 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.737583646 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.699010087 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.722419117 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.748926816 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.192947321 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917582599 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.855873374 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.242331157 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.738327647 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.75830757 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.885304949 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.737892128 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.903501057 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.683662884 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.768166902 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.846247528 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.888613184 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.90802889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.771779788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.870774538 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.762306818 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.726770824 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.684461722 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.870112001 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.763745854 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.839527874 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.879910099 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756376744 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.932809203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.870820769 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.754361795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766424155 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.959509738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.608409242 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.748681994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.759693937 seconds)
  done (took 168.240607554 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.906215105 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740861964 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740295858 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738315006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750455093 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738368408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.870384411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865794204 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.199746004 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.29425622 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.790634589 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571502895 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.73686721 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806923391 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.750167748 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737455706 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.741142173 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755782392 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767529799 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740357814 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739872097 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864933963 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.750584194 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.737792271 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745899274 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.739650615 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746009996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109149225 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.805571442 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738017975 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745896399 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.002514698 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739084514 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740684427 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.637765014 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.46406529 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831649414 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741048107 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747642277 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.740550552 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.964168212 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739498531 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.741435624 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.745127492 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922795492 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.739812188 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867971021 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738502711 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.240739679 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.740386402 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740820253 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.449846361 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.416719582 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.741567127 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.741964578 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745104814 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.741477998 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741083011 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.74677996 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743678392 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.437833666 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.815642013 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.740337958 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.746372308 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748316936 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.743726799 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.749999509 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740921385 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.325885075 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.796217892 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.967664938 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863477633 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741545415 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810809163 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83427355 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.740488347 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743015342 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742259619 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.74148277 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.823087315 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.740812923 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867478223 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74969506 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.743339739 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792914524 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.811459735 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.740936324 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638675598 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743193472 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740289227 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060383231 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809190687 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.742218541 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.743879451 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74324702 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867482259 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864362668 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523997316 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.742829735 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742323181 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.438127773 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.740810769 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.897008125 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743418677 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926323515 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74571004 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825966705 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747458136 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.745928625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.743797775 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774637697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743561343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.803608403 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.74320009 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116590007 seconds)
  done (took 398.644236494 seconds)
done (took 773.800834239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40894078 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.368172446 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.483790997 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.390589688 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.362012605 seconds)
  done (took 13.69351547 seconds)
done (took 15.374301887 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831546997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.837936316 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.771359115 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835201508 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766162182 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.832919937 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.815293607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772271995 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.801950468 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.772421204 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.805405973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771754426 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75682556 seconds)
  done (took 25.053418353 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.980508547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.975161047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814287158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971827974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793392116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977839786 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906543971 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895411379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.894765129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762365235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759672411 seconds)
  done (took 22.416482679 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984837619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978207176 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822846011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99125608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797185429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.980430017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907558097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897976927 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89555875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762257994 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760110545 seconds)
  done (took 22.46034548 seconds)
done (took 71.614447049 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754075472 seconds)
  done (took 3.437729329 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.777046809 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.915804394 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.761875481 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.758029961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.754341522 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.753995638 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.759224047 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.755642603 seconds)
  done (took 15.920194589 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754204998 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751632186 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753399238 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.7541374 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754901539 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.754301966 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.754256255 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752906322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.752839437 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.755714532 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.752417475 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752881807 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751608344 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.75321571 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.754624016 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753461228 seconds)
  done (took 29.741610492 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.753516977 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.753636425 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.752688816 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.753324596 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753926166 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753290769 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.754264353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75239727 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.754271678 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752523707 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.753654429 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754894603 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754437073 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.753036321 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.75361762 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.755035763 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.754503615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752874256 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.758151045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.752310674 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.7550652 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.75407645 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.754143732 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.757098441 seconds)
  done (took 43.784530941 seconds)
done (took 94.567374336 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.625800909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.127089165 seconds)
  done (took 8.436930877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758775709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756607552 seconds)
  done (took 5.239466912 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.756745227 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756938833 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756073711 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757001552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.757525519 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757439435 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.757196088 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758771415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.758007698 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.759263454 seconds)
  done (took 19.262858798 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.758330555 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.757890157 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.755564004 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.758085439 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.7573932 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.754916661 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.75646818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.757473234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756915782 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.755504877 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.759315832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.755506563 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.758283781 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759010314 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758083297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.756586926 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.757224236 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.759459944 seconds)
  done (took 33.319299583 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.758974079 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.75632795 seconds)
  done (took 5.202673825 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.758014624 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755646776 seconds)
    (3/7) benchmarking "month"...
    done (took 1.757616207 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7572523 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.757352866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754791924 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.757211005 seconds)
  done (took 13.984478422 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761657124 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.919994512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.002949672 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.412763837 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762600765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.762545461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.722935185 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760952177 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.766164363 seconds)
  done (took 19.56160536 seconds)
done (took 106.693865986 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.579622459 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752763539 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152445971 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.871269466 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.769031966 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096826397 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.761218842 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.978574669 seconds)
done (took 42.651038735 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.848549915 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.305004568 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.338181979 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.139669183 seconds)
  done (took 12.471554872 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741416969 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.295633311 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.792891685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.422346769 seconds)
  done (took 20.130892166 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.125066966 seconds)
    (2/2) benchmarking "read"...
    done (took 2.115522008 seconds)
  done (took 5.934976145 seconds)
done (took 47.077715956 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763665506 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.758455282 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.760753433 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.759719357 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763066114 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.759684821 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.75861147 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760023364 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75995292 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.760588888 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.761970288 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761754407 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.76146373 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757223072 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759740163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759355217 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.758863569 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756564313 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.760301177 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758309476 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759808599 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760522641 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.759686935 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.759421012 seconds)
  done (took 43.92870162 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.758695653 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759854292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.760721678 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762787381 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.757956043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760981089 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760370924 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.757455608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764286384 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.760577641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757883155 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.758836875 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76049126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.757748035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760649564 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.758249603 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.760937938 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757670102 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760423443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.758864556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.760992876 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759965687 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759843971 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761299386 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.757551146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761892098 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.760254133 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759389807 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76236187 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.75869186 seconds)
  done (took 54.489012084 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769919532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.76619981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.758984708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.758271696 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.759260259 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.7585516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.759282529 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.759134269 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.759440513 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.757187625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.758743478 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.760477896 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.757812566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.759807888 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.760102672 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.760944909 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.758828233 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.758073973 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.760447674 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.759199099 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.761007765 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.760439783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.758161473 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.762584629 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.759606863 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.759215604 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.759073351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.760178604 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.761929415 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754243021 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.755389401 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.755298475 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.754869545 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.753248954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.755067497 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.755859426 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.758996958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.763560286 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.755274138 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.752585584 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.756794733 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.752940167 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.751609425 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.751306578 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.752501707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.753297578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.752833259 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.752235497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.751307209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.751348689 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751449924 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.756601362 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.752014403 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.752249842 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.750791061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.750847532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.750993048 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751547389 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.750659263 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.751600841 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.750921352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.750466689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.751248387 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.752042947 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.75129921 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752449654 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.751887837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.751764272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.752315867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.752040186 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.750787946 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.750445336 seconds)
  done (took 128.113047342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.751125463 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75133578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.749629559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749340694 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749685906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752891181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749289356 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751283787 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749150801 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751851658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752306643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.750008606 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748866902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752215578 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751674722 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749304639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752725883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749639325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.752756563 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752216911 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754537454 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.750614302 seconds)
  done (took 40.205886408 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754889154 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.753106644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.750986404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752814561 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750394907 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753445005 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.754748277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754773991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753108056 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751430879 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750795544 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752806911 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.750452941 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750790711 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749920064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750797889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753904988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75134737 seconds)
  done (took 33.224085305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.752471198 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.752235817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.752537895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749725952 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.752357584 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754790009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751693907 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754126596 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.753845622 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.75066022 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.753936602 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754561159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.754075051 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752488889 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753967544 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752307168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.756294941 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751411788 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754444838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750892831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.750485001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754535486 seconds)
  done (took 40.249370578 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75301033 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.754105227 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.750827491 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.750854956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.750081396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.754582213 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.753578221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.750755789 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752021273 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754217676 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753220853 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752286438 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.750211137 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749640325 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.750460227 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749111415 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.755503656 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.749847209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75161765 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.7485506 seconds)
  done (took 36.721220731 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.752839003 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752678293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.751675286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749711854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748894335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.753052855 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751940222 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.752608114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750785157 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.752066442 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.751167836 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.751691044 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754176027 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751620624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752420927 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750821927 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750703862 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750466976 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753292053 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748956224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749911529 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749734636 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750251799 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74980379 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75088053 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748569866 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749536914 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749602375 seconds)
  done (took 50.712170885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750575805 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747024161 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.745871918 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745830861 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.747076783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.746592876 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.7463549 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.747420719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.749449766 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.746939604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748318216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.747629381 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749543162 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.749048413 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750319184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.749548126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74971521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.746668758 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748729107 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747209234 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.749906486 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74900397 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.749260189 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.74685803 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747943305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748600177 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748185096 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748456563 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749897616 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.748596052 seconds)
  done (took 54.127585692 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.769516355 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768913236 seconds)
  done (took 5.217789661 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749370645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750001524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.750736656 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748300376 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748225636 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748985219 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751051451 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749059454 seconds)
  done (took 15.675741674 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.749522429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.750847198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.750442611 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.752371014 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.750795687 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.750266298 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756673068 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.748972427 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.751329191 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.750839123 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.755790094 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.759127634 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.75081246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747652722 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.748629934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75175307 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.74884895 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.750752074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.750234985 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.748324204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750034846 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.747949668 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749775676 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.74537338 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.751140047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.758832258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.753657618 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.747273849 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.747784696 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751872939 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.748061778 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.745844405 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.749348091 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.747746676 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.747131255 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.747719491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753167024 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748281546 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.753395225 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747554883 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747535349 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.744855314 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.748219425 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.748741202 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748490473 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.746415361 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.747723781 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743457941 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744676372 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.751383819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.752079645 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745021025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.743049907 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750116682 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.746114997 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754086496 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.744213399 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.746415155 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.753261042 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753781095 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.755849693 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.753735701 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745197477 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.743916952 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755179289 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.771807136 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747906707 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.740086306 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742333248 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.744349318 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.753238631 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756168226 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.753948667 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.745201484 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74417364 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.743758094 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744176534 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743718998 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751393446 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.745397961 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.744668665 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745585093 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753806643 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769356869 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.745204832 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743889268 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.744847054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.74496335 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.744280991 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.755688136 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.744423049 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.743892164 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.745347666 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.743463844 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.744763082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.744583384 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743450074 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743817568 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.740877888 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7433491 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742915518 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74815134 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.753820457 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742254967 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744212227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.750386736 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.744383044 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743653244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.751015507 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742979909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744223595 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.743790203 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.751195596 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741364922 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747264149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.75437369 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.745034917 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.744252204 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.745738974 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.743605189 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.753130793 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.771977235 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.743844338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.745024565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.746918148 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.757992161 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743836964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.746229967 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.742925295 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.741363766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.740335702 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.745451555 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745669157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.746218114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743311221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.744249281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.740265398 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.742667385 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745059644 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.745198862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.745011262 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.744233075 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.741901018 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.744171358 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.742304989 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.745442748 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.749557144 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.742831708 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.74558296 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.742829278 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.740125875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743647156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.746469588 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.744097114 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.743288931 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744182631 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.743471377 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.743190343 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743918073 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.745230555 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743657248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.742564733 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747620529 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.744069865 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.746830507 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.742914509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.741198534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.743868037 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.741924224 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.744327083 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.743015671 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.741179126 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.745046433 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.752785563 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.742243295 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746685198 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.745530749 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741496153 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742222406 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743624193 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.745797937 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.753719495 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.744283272 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.748277645 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.742410145 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743184447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.742341211 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.744758267 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.74046315 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741022758 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.746343378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.749981375 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755489714 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750504829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.74336929 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.746957323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.743634272 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.746231543 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.748725669 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.740835108 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741059362 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74217451 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742663794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744676156 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.74366784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.74283259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.742310689 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.741451609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.742305727 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.744379953 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742156061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.743227514 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743694974 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.738905646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741134903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743046635 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.740403134 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.738697769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.741088758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.7407075 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.742095457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.744461892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.749297051 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.738285818 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7416473 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74323335 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.7419259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.742533682 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.74009477 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744959879 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.741165838 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747867628 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.740737521 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.742893941 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748009571 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.742083141 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.740258563 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.743771316 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.742140952 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.740559071 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.745596737 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.748868279 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.74201386 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.742774313 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.743130702 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740591257 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741722925 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.749040299 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738665143 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.742561543 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.743299459 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.743961087 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739486752 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.745501672 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.740934941 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.742884723 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743084665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.74123815 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.743969726 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743201467 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.742979664 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.743467879 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742493277 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742862102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.749875577 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.744622007 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.741824863 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.744382905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.743076437 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.746506817 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.741714959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.741728399 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.74033757 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754545778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.749960778 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747812432 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746365863 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741786113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747931113 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.740957092 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.748013626 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742100693 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742740937 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.742669781 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742849411 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.739784947 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743626071 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.741761591 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744850894 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.74419391 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74883146 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.741881053 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741879395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.743145786 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.74214676 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.744716286 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.743081785 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743330836 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.745544093 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745735297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.742754446 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.744922418 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749443536 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744070309 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.747224891 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.744042741 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744168015 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.744204145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.745334465 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743032807 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.74575314 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.753249256 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.745983038 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.755643457 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.74603513 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754923231 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.743884774 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.746208095 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.753077428 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.742131021 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.742934626 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.74357757 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.746553417 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751902572 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.744891078 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.74519103 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.747292812 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745316113 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.747582341 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.74427746 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.745740374 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745718552 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.746000802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751028906 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.744757888 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.749135485 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748400183 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.741076936 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.74564984 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.74453675 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.743435506 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751447239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.744948904 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.744587433 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.744031716 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.746321639 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.745819094 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.747112158 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.744190345 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.744360686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.744601578 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752297948 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745168351 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752639744 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.747949393 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.754077709 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744755934 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751597637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.747361589 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.747063932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.74785762 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.74625104 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.748680156 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.745480908 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.749955799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.749460452 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.748600807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.751797908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.748922376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.749220218 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.746500916 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.748785104 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.74780757 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75540121 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768882696 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.74955581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752484366 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.744171664 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.748688637 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.753531424 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.747844462 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.748290586 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.748566891 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758255306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754295417 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748107728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.747723058 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749466827 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746926584 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.748787492 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.746596265 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.748845402 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.746143541 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.750092766 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.748789729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751785002 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.747101787 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.748428406 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749551631 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.74768812 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.75876404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.749370674 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.748613473 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748546324 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.749041058 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.748774902 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.747094969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.749113443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74991315 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.749212393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.74914114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.75484421 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.753712059 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.751624947 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.748035514 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.748533355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.751136019 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.747459527 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750289251 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.749533469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750422687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751486756 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.751472147 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.751279371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.748624948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.748753425 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.751576637 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750492184 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.753125129 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.755787882 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749105016 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.748829515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.750436898 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751045647 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.750472126 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.752151039 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.756803051 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752496942 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.759959253 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.756992825 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.754579469 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.750176925 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753477362 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.757388638 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.749744122 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.750927587 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.752605484 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.754348536 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.751486595 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.752174986 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754088664 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.756090942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.751678403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.750935192 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757338065 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.752393221 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754203797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.751706722 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.754864224 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.750937905 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.749820591 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.752079208 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.752134613 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757452318 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.753670216 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752237281 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753375407 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.751278152 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.754194232 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756134825 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75259517 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.752806527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.747863306 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.755565979 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753583173 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753011508 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.747989801 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.752845373 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.753958142 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.755049849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758532866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.751977551 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753117829 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.753435943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.755399888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753411236 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752199465 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.751555653 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.750425761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.753135055 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754414078 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.754809101 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.755505151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754764058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.753753861 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.753928095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.753974224 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754214116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.763774603 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.761218836 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.750157994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.753818685 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.755428694 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.755706511 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756183387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.753182744 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754160364 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.756951686 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.753536818 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7545422 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.753644659 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.757951358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.766897306 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.755467676 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755574721 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.754997883 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.758128973 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.754154931 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.752348526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.755647523 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.755165361 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.755091096 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.762522364 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.755125893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762453063 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753878015 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.756241594 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.758803239 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.757586586 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.762169933 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.759196094 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753286778 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.756515922 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.759679266 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.771977982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755718538 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761924614 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782053656 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.757948054 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.75767765 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756991073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755970654 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.757593865 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.757806378 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.757425232 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.756866323 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756214096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.757612585 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.755527385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762804364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.756559688 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.755706416 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.756445768 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.757623413 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.756839847 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.756401029 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.757150105 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.75501626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.758158901 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.757406092 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.757289352 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.758053633 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767438112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.765771592 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.757911773 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.758825895 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.753767932 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761406339 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.759812782 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.765555141 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.763314309 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.757744939 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.757063802 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.757421032 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757819679 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.755514684 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.758814749 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.757871862 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756658217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.756063517 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.768866454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768069865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.760549281 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.758709606 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757955858 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.757816807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75872418 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76061218 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759627135 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.761252461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.75760985 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761955324 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.758809473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.759495223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761563961 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765193502 seconds)
  done (took 1044.309920574 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756568961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757586098 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755827726 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756470126 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756984265 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756284396 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757374159 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757310968 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757600928 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757004008 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756540165 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757695671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757507988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758766306 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757025382 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757421869 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757190228 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757911496 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75528923 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758074645 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758563469 seconds)
  done (took 38.591463843 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.760261502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.758253787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.759095329 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75982066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758344183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759645574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757209269 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760643521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760760598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757785273 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.760179062 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761602128 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.758451897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.759820062 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757760423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761012535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.761466368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758989925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.762132512 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761604754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759348579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758457504 seconds)
  done (took 40.404684544 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.762407493 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.763155981 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.760516729 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.7593736 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.763137022 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.757777822 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.761567142 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.76265817 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.762096569 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.76368252 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.761199991 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.763843247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.769421739 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.768365423 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.764067235 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.762729611 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.906175999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.764008555 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.764795491 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.762245113 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.759879009 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.768958811 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.759620545 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.760568971 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.763740393 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.764174261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.764070044 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.763062213 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.764070642 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.765088908 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.768268435 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.763564493 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.763822241 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.76422795 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.762832667 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.764007726 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.766998413 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.765036548 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.76153 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.763735969 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.77304997 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.781758379 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.763480179 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.7692163 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.762612793 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.764199916 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.766015155 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.772916826 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.76061553 seconds)
  done (took 88.28685054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.765309158 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.765132178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.762968211 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762593364 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.763955064 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.764155777 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.76331313 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.764722536 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.762081488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.76083487 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.765332977 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.761626851 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.762893878 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.763949737 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.763731583 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.761360644 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.762462595 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.762715873 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.762679615 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.76240477 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.761350837 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.764176131 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.766395641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.762615151 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.764784737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.762181745 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.762501469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.765941331 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.764510108 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.764044804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.76372271 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.765951883 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.765478814 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.763365012 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.762901129 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.766737629 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.765668964 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.762460117 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.766371687 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.762753205 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.767580374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766655929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.767262144 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.76666538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.762979576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.765007667 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.763847761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.764660454 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.764336908 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.766329474 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766108315 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.764580969 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767102122 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.764005276 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767118618 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766552312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.7641653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.76457199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.769053481 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764473803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.764963597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76527426 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.764662297 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.769789119 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.767409093 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763639997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.766069721 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.767841982 seconds)
  done (took 121.689657148 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769656579 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.769088086 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767765037 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767920403 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767339526 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.76628185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768443063 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.770064844 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.770052917 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769000343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768973175 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768471547 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.769091598 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.769318155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768386554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769208206 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.770318132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766895404 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768891889 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769113726 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.769269485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.768807809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76850564 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.769481855 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768268287 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768567991 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768853898 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769154144 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768849252 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.770354807 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770144959 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.768642399 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.769311635 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.769283675 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.770215015 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.7698788 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769036802 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768992999 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.769670368 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770459352 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.769282764 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770880327 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.769554173 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.770327575 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769582978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.770332564 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.769441499 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.771263514 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.76882068 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.770435673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.769892962 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769239885 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771152916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771989991 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.769543358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.768661105 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771252412 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77047198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772298319 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.769140235 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771638153 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.772365365 seconds)
  done (took 111.409221982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771149778 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772839873 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.768319884 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.768423353 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769470052 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767744615 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772250442 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.770911285 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771135616 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.771449136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772709319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769303474 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770861166 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771877358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768130068 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768316083 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768591103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.768814535 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772844572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768740125 seconds)
  done (took 37.104987617 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.769744885 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.77127458 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.769000878 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770320739 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.771757041 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769981376 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.771946826 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770076397 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769457202 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77132969 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.772817771 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.772496613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769301678 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768728754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.772655429 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771437124 seconds)
  done (took 30.03422623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.770398276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.772537612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.773113368 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.773353299 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.769827068 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.769726849 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.772864085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.770271731 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.770705291 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.773676738 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.774668491 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.773527378 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.772752162 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.772315678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.771508338 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.772177651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.770616852 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.771310801 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.772567027 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.7751993 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.770604969 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.770981953 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.773020844 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.773751593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.770297363 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.771116659 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.77206281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.769912208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.771137465 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.772843088 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.771630436 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.771018597 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.773211088 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.772334496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.775263187 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.770562379 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.774904918 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.773987908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.772890943 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.775497814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.773879924 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.769856989 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.775400492 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.774408362 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.772233563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.773965103 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.771276227 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.77211433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.772261471 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.772144033 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.775522573 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.775448982 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.772719196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.774481056 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.775413331 seconds)
  done (took 99.196467795 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776541384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775700948 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771252246 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.775707134 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.776652233 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.773600262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.775917542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.772065601 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772557621 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.776420388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773988949 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.776067056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773466719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774882498 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776404529 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775569605 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.774837432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.772665384 seconds)
  done (took 33.651383886 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.773373592 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774964916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.776875978 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.774365533 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.773856215 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775485313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775253342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.776300904 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776597667 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.774875872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773984461 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.777145847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775212579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.776910107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.77428235 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774191126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.776359424 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776313782 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773185582 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775344354 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776886793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775464961 seconds)
  done (took 40.764157969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.777715488 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.776750859 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.79094685 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.795250375 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.796161491 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.80646136 seconds)
  done (took 12.450497247 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775471194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777242082 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774213814 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778627153 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77801201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775460108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774444602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774988888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777786131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776304414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774748055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777787976 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777249388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775652386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776655856 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77891083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7755288 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774160028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775532044 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777967743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774920734 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77959656 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776024172 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776458702 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777319769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776770141 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777821104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778197249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776680112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779343516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778536759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776031844 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779868375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778830129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78021774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780070445 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776790472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779426619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779931805 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776363261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.780490109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778945769 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778719756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777296826 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779562327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778221348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777337552 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776296359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776334528 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780809352 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779867647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777409938 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780131408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78025061 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781741714 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780902794 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778448955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777344338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780578589 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777225596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778187936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781914873 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777748183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778153273 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781758646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777346084 seconds)
  done (took 119.050849147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777276589 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777629946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777746086 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780403718 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777928552 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778393857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778885201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77833359 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779106914 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7795198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783670746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780531067 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778700576 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779549849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777678572 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77978186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780960646 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778339265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779311025 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781721923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778898036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78019332 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780134967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778460071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782903905 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778775318 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780750314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778807001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778174412 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779184765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780568709 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780620211 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.778906412 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781746148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779539875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779509857 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779527241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779845031 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781575384 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778183176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783410992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779696102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781775518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781388826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781113928 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780189082 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78044926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779585908 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780517778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783412364 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78185094 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782091448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780888863 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779690818 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781422546 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781095234 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78173898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780798438 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783909813 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780738928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780454202 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784004294 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781253877 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78153459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781528757 seconds)
  done (took 119.210159712 seconds)
done (took 2440.508759436 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.842490461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.780766674 seconds)
  done (took 15.336851852 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.947920733 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.900123935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.78431282 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.790296607 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.783182852 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.802425011 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.796620411 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.78360976 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.784787449 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.784846703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.781904431 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.970425662 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.785201593 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.783799846 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.78288049 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.876304927 seconds)
  done (took 50.859356342 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.788626056 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.788948844 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.797177814 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.789826774 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.787417651 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.799381235 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818693884 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.791492273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.819597141 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.799811698 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.853637768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.79548933 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.78870142 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.83592736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.799592004 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.803332403 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.874637444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.859864006 seconds)
  done (took 34.307169908 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861453263 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.790065391 seconds)
  done (took 10.374304354 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.815675815 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819413058 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.781555883 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.801493426 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.808456043 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.799466323 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.797136913 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.800412771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.789129498 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.795963904 seconds)
  done (took 69.729951592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.794722794 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.787265579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.788087855 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.786856927 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.781755876 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.78371472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.788395102 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.785418749 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.464753432 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.822457995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.796107157 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.796290149 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.788649203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.789600522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.785655123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.809175133 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.911551538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.788815881 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.785407781 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.792966695 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.788274679 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.873962753 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.802284956 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.789866288 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.81886116 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.461962698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.796648487 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.795292821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.905154042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.788153088 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.78870071 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.787595069 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.789597847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.168963077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.111621773 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.786263868 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.798733022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.796351131 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.788677075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.934216786 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.792875698 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.793376999 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.721066026 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.108693162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.885216565 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.830181535 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.146868262 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.793058492 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.790862048 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.823664491 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.792341267 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.793216405 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.805206129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.299189973 seconds)
  done (took 128.298536862 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787352455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.088289156 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943350975 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787469017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058325682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988614794 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.726013903 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.83287981 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.788672159 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987930333 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.012495143 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89824597 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786165407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.788948444 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783520595 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.782761624 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.945999471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852903709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.788082438 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.784368081 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816992139 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993730082 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.913643839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787225952 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807695762 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997323733 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.906301269 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89361636 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.398276732 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.785176299 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852839288 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787052247 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.789270581 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784900359 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943530084 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882962163 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877095912 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.787481926 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787138784 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.786192181 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.450280184 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98235068 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.88468238 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.92766223 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032149681 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991242261 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.433289274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.787176392 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.433278809 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950756496 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000909084 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99343599 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.909903083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.790077485 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.026528201 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.787713983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.787482925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02461997 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016278718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.894119204 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790036101 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787886927 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78583664 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.033207212 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789740752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890308957 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790633454 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.7890603 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.888810403 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897115075 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.017241135 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00012418 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822834889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.116295949 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.26820287 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003987328 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856094524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027578798 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791289728 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78763302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875448828 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.543431739 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992420962 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037160651 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008211002 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823169376 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.387771778 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.787639738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98174169 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974049616 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.982891481 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028042642 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.9446793 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.130223716 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.789022526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.787969849 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.011595599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927002487 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79219993 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149405737 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021296691 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.353939001 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820916412 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084335577 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922853792 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.113248469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.421161194 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790690288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956759285 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.831828182 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.792229839 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792989009 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981227008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.599280306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793447071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.539721351 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85349133 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793612829 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993219185 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.79294184 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997822043 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791908136 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026230264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.239406764 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826803988 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.963370002 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032178572 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.58865075 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.039879896 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033344946 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90893141 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084215651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.524826344 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.795219938 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066012079 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793660066 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.792410564 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.959738307 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793386445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.939165009 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796341445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017237618 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817130091 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954358889 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795427624 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02427222 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.827899341 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846597927 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795330678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915915225 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794332278 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.783087143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950728163 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794832389 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.790348402 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.228563726 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.791573527 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942735897 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.023912945 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817237348 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860180858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317843893 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792637418 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882458316 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819174505 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.429408921 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.795231899 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.012316622 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.739486786 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.236505961 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.792685491 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.030913744 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044315742 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793879891 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.7926538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.535989587 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.486431162 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794155505 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.952505579 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.183036596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.446452883 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9955993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797519469 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920065642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798207822 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.879888151 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142250861 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795532773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.79423192 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.79810119 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.796178966 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.797055953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006260724 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.826636047 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.309583391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.929354262 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013862637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.110111191 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013188437 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843008638 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799601734 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074572661 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79608484 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861258347 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.796524762 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820462959 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029332147 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798871731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005839265 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.047797865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.720117678 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84682219 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.798154137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796556617 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.797842686 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947631767 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891483414 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797196618 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.800403805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.906679751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926872826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991428296 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.394115301 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.88685825 seconds)
  done (took 882.909068324 seconds)
done (took 1193.529928138 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.797023684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798226756 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.781395028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.797230585 seconds)
  done (took 28.907697329 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807114712 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8017545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.806210391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801106233 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.805765862 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.801375544 seconds)
  done (took 12.556275704 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.859808797 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797598662 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799219784 seconds)
  done (took 21.190245429 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.86975408 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206926274 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.912731665 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241360156 seconds)
  done (took 9.963261352 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.805043047 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804799029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.80478079 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806310769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804546903 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.807587043 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.805703731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803107852 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.804110569 seconds)
  done (took 17.979890677 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.159863955 seconds)
done (took 96.492725015 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.789521144 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.879162591 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.998440141 seconds)
    (4/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.905385853 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796988974 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.940475194 seconds)
    (7/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.995849148 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.693671733 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.824056733 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133231973 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.928419496 seconds)
    (12/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.894415865 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.372226539 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.171161843 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.842697366 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.823669229 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.250764816 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.799982089 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.692892656 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.758575004 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.359208429 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.797962496 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.046721998 seconds)
    (24/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.955419256 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.786779642 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.802219239 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.498264592 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.09176994 seconds)
    (29/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.975752746 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.379023189 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.819851372 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763798747 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.789594352 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.310292494 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.798746709 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.831223625 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.12496024 seconds)
    (38/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.143133157 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.099534228 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.283931968 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.9087387 seconds)
    (42/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927911782 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.999273088 seconds)
    (44/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788133263 seconds)
    (45/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.609568746 seconds)
    (46/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.913551116 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.940522821 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.880056941 seconds)
    (49/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.083581419 seconds)
    (50/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.07912491 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.20324635 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.802013632 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.170774154 seconds)
    (54/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.886672697 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.383162972 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.829157056 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.787193673 seconds)
    (58/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.180801233 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.91104248 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.062537795 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.62328712 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.978927472 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.786078986 seconds)
    (64/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.817314954 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.727813084 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.127920959 seconds)
    (67/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.787981579 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.99890217 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.017743423 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.788926867 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.914005468 seconds)
    (72/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.994126839 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.063597928 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194021129 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.872856362 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.913594965 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.027917338 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.146013495 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990095794 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 4.770283159 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.855455733 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016989417 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.718834334 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041098483 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.336759799 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.812851311 seconds)
    (87/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.939884349 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.88937648 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.69084323 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165936911 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.698980818 seconds)
    (92/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.092245159 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809202494 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.038411789 seconds)
    (95/309) benchmarking ("sort", Float64, false)...
    done (took 5.623887769 seconds)
    (96/309) benchmarking ("sort", BigInt, false)...
    done (took 6.80691267 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.52828933 seconds)
    (98/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.808535856 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.243199954 seconds)
    (100/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.937599399 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.367291207 seconds)
    (102/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.315489554 seconds)
    (103/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.938189436 seconds)
    (104/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.458366836 seconds)
    (105/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.178466884 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.182533719 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.823509942 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890118587 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.697852001 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.844519235 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.044218374 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.874599117 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.959931413 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124938838 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093771911 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.805561014 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.030071571 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.890689119 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106583265 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.795544557 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.46615699 seconds)
    (122/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51333213 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.832860588 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.01070772 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.131276147 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.086161263 seconds)
    (127/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114760068 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.042460096 seconds)
    (129/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.320765631 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.479597329 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.809526772 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.692835843 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.603447738 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.885493057 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.898367039 seconds)
    (136/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.984592642 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.106145416 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.259712265 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.834192835 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.104982884 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.88770252 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.164050454 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.186208639 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.803140512 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.718188216 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.413126357 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.022779423 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086367321 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.960622457 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.050747524 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.114812264 seconds)
    (152/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.888818338 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.007084664 seconds)
    (154/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.805611224 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056599327 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.886843351 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.936397522 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.598721469 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.840957188 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.865711686 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80674772 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04419589 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.834170512 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.828044199 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.397005791 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.807119244 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130047405 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.817674186 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.900412808 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.299582977 seconds)
    (171/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.036596383 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.453814998 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.829926379 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.829520182 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.080381067 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.305154679 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.892691981 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.377044433 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.836572949 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.804479572 seconds)
    (181/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.943115749 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.922155365 seconds)
    (183/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.408827281 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.778070904 seconds)
    (185/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.813029211 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.860854663 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841347479 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.803920737 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.208012628 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.078087288 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.900228641 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.184760763 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.896186969 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.831802044 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.155153487 seconds)
    (196/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.898383559 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.832004933 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.733016227 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.843491569 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.175730932 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914882576 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.997790878 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.948493836 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.806115121 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408119148 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.835044504 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.467189289 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.007097371 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.121580616 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.967412925 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187794006 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.809377363 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.873649828 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.835335748 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.882128904 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.288711243 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.838475752 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.200922928 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.866216597 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.901574691 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.113434309 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.002910342 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.984782356 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.643369979 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.472993644 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.599124581 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.016548533 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198790478 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.899466234 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.796465807 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851588769 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.317052343 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.175309475 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.104960104 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.137734951 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.839841976 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.31510724 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.017132257 seconds)
    (239/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.826190048 seconds)
    (240/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.907722929 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.851315473 seconds)
    (242/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.983535337 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.819962488 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.857366639 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.980513814 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.211607643 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.892618984 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.909928055 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.820022542 seconds)
    (250/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.920659481 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.103958207 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.969138684 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.882212328 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.81649614 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.175451028 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.980676088 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.842236121 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.919407533 seconds)
    (259/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116656633 seconds)
    (260/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.189790407 seconds)
    (261/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.963594386 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.91487671 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.868528978 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.911824821 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.906711399 seconds)
    (266/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.374188037 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.948317848 seconds)
    (268/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.914244496 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93030381 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.208336853 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.924265448 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.822839692 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.807656865 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.574556372 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.014277846 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 5.6037401 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736561636 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.750263149 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.993735871 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.928192371 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.89976095 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.816560438 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 4.058656323 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.96457627 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055264383 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.212659889 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.802980006 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.091917304 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.819837472 seconds)
    (290/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.094451931 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.043494108 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.611627467 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.593193672 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.020445998 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.323854177 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.868637053 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.061215605 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.948401525 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.842080601 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.022669491 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.074713302 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.116986686 seconds)
    (303/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.886151907 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.840622146 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920425026 seconds)
    (306/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999358732 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512707299 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.814667412 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.941676158 seconds)
  done (took 998.149284351 seconds)
done (took 999.954812103 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.853164762 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846321738 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83167711 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.849322624 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.942913851 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.870847586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.843486137 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.830897506 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87859334 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878334051 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.831680998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.868345332 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.835247538 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.833967545 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.828210705 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846717125 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.133324048 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.855985554 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.849412415 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.84149194 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.847483995 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.83320798 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.88035265 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.869048965 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.834033204 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.836627295 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.834933764 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.851390393 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.94336694 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.834084961 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.835736421 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.845888537 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.134686743 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.848397371 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.827385171 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.852375882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.84191457 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.840965433 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.834270532 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.866315797 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.259310886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.839751521 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.837213983 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.833073843 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.834306037 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.836864043 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.832747108 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.840042501 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848126157 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848033577 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.261638275 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.853853738 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.834817833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.834416599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.844086992 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.834313983 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.833530452 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851394283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.8558657 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851031267 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.125057088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.860367752 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.837141847 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.851028922 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.844634241 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.294843783 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.833397971 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.839439371 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263821487 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.843633501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.301472761 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.847542003 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83649205 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.847900801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.867208747 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137072266 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.851610471 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.830958513 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.84493987 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.836105167 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.843694282 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850002682 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.840699834 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.835944663 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851658025 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.870420101 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.844821481 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.836618647 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.842262909 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.855041472 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.845392857 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.843831771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.835091339 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.827316333 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.842819666 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.834817125 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.841627827 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.835040935 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.839056578 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.846294885 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.262165398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858574444 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.829550341 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.828696428 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.83353823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848650128 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.26294709 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.838426778 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.853878849 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.8823231 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.834915109 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.128819401 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.857563801 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851817165 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.84628212 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.837863756 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.829797903 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.12767016 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.278961725 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.853352462 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.834953237 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.833390387 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852455157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.836152233 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.834647366 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.138552477 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.857322199 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847099159 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.95886566 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.846618866 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.869042387 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.838017465 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.837835247 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874936818 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853743072 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.866266151 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.838188557 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855373962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.855681868 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.828389185 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.848133415 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.845033294 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.834626279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.8421811 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.831790205 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.872489472 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848006077 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850404811 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.856200183 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.96000236 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.832378019 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124214895 seconds)
done (took 288.374548932 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.901475869 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.827493331 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.932935306 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.83170992 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.924813672 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.919173863 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.829581663 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.826682068 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.827606343 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.246413847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.827851442 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.829936637 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.833508317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.829581675 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.925210227 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.830709426 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.829383846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.174439478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.831321982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.90380058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.824859773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.8306844 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829756094 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.213052068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.832100973 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.82689514 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.902188789 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.833165772 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.228925513 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.83238334 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.831103395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.177009724 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.921925905 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.851658287 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.841747261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.839889182 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.914537603 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.83471752 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.915029136 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.924868022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.929237569 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.871696548 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.831169053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.830937991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.836483749 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.833730915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.830402042 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.859952379 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.82576722 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828762695 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.207965065 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.841488195 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.830222889 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.829653811 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.830713213 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865422524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.830088829 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.834094455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.923018349 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.835790959 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.895740307 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.271415887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209934086 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.832315308 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.827493859 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.831453376 seconds)
  done (took 182.023126694 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898686506 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.908667577 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.899792289 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833899543 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.882411291 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.908153922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.83486046 seconds)
  done (took 14.925472657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.839389359 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.832731924 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882582865 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885501475 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.834055594 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.98618954 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.242663473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.846286436 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.830689384 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.887820166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.836028661 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832056291 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.840419882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.828306822 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883587163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.846971004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.950122771 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.836822157 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.837538678 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.988332741 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832964446 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.841774973 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.888236122 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845441858 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.836104052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.8401137 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.431304284 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.837130034 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831252547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.837676495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834888145 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.878278921 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.836618706 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.830431795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83270227 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.952589547 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.835059297 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832685718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839323462 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.83499202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.836437344 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83553738 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.836568522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.833340636 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835925215 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.859097741 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.835933254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.83588285 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.835341399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.836767132 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.889329191 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836504076 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.8359769 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.835105275 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.892731378 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844378529 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.838561335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.832817951 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.839009444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832823386 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.991532425 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885238604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.836654481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886056034 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836789115 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.837848188 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.840145245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.837087618 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.930812694 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.835980422 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884547921 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.833725307 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.997237766 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.860080064 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837085749 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.839552878 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.838880495 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.837713601 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.837457397 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.844434191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.835934643 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.838121776 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.846626566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.836709517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834569169 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950270854 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.947540053 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.8350645 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.849963885 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.844888315 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.834869464 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.890899857 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.836958574 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.834865091 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892745863 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.952813193 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.894500522 seconds)
  done (took 202.986809612 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.842865532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.847132886 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.840265945 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.856643672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.837544485 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837515311 seconds)
  done (took 12.827316598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.838006227 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.839037832 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.838452422 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.838224563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.839909946 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.840906695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.8395402 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842171746 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.841657916 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.838828543 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.839277408 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.839416722 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.841122917 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.839629551 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839791119 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.839311995 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839871287 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837257226 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.838744115 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.840088798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993050099 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.839624353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839579893 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.840783425 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.844300007 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.838815246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847877483 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.839561951 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.840375322 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.847546927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.846122455 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.841196264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.838725808 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.845166806 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.845747356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.840796595 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842266404 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.843378386 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841400414 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.842183379 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.84084462 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840309273 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.841304042 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.841116305 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.841276649 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.846012904 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.844580419 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849440716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.841863159 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.843122487 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.842129928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.840370608 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.8430388 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.842003905 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.842265569 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848305384 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.845791777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840869977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.843580366 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.84170244 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.841481918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.842119872 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842714439 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.84663858 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.839894843 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.844467451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.842095615 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.847840641 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843512852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842962264 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.84250811 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.838386021 seconds)
  done (took 135.532646461 seconds)
done (took 550.064764935 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.100778437 seconds)
  done (took 8.869715352 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.897472853 seconds)
  done (took 8.769142508 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.236600002 seconds)
  done (took 10.008185171 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.847119034 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.904035455 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.838567359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.84576025 seconds)
  done (took 29.212815418 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.92364705 seconds)
  done (took 8.695796764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.848387276 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.834780037 seconds)
  done (took 15.489061554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.843486608 seconds)
  done (took 8.614349309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.892998424 seconds)
  done (took 8.672324032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.85102866 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.858742965 seconds)
  done (took 15.496168443 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.821954569 seconds)
  done (took 8.592900427 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.529894519 seconds)
  done (took 11.308533974 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83958232 seconds)
  done (took 8.622889945 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.867159203 seconds)
  done (took 8.639576621 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.866687331 seconds)
  done (took 9.636660526 seconds)
done (took 162.398100428 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.838163389 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.837564784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.837180035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.834993672 seconds)
  done (took 29.116818655 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.875538002 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.877162236 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.885241251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.888502548 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.880991785 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.877279527 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.870170744 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.867997592 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.887695847 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.88082739 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.879576401 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.879638903 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.877296947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.87104461 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.88138569 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.879845337 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.887948466 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.880133687 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.870932296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.881097081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.845000165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.887740591 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.880780269 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.845819669 seconds)
  done (took 46.811372478 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.041891809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.920173582 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.997443938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.896760632 seconds)
  done (took 9.626728748 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.898872755 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.897429816 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.909993806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.948465563 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.974503204 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.908087206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.872132696 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.866788786 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852882287 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897614551 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.973947293 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91957439 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.98209122 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.844772224 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.02584184 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.844200441 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.845502594 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.900634529 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.954000174 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.962087564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.845097544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.897040474 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901516644 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.91359794 seconds)
  done (took 47.611706609 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.842902472 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.854016279 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.850934488 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.84531592 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.843088293 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.849008349 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.851367263 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.847412034 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.866166113 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846393564 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.843275242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.846661182 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.843675165 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.845855461 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.846477834 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.858467636 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.858611344 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845535833 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.84745013 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851899003 seconds)
  done (took 38.757419825 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.840344474 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.694411781 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.192747537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.096732905 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.838745002 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.8407295 seconds)
  done (took 31.278122479 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.858932689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.854286135 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.847921643 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90141295 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.980871484 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.852906234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.848671765 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.8575212 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889055084 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.910309535 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.869122615 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.871842363 seconds)
  done (took 24.318312173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.841599952 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.843175698 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.843153858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.860556451 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.859205089 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.853634518 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.85638643 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.841405003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.861367312 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.865994573 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.854182015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861512596 seconds)
  done (took 44.020755258 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932896992 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.889925146 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.894807572 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536220559 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22020724 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054758302 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374934747 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17909277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.847138321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117305754 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95887451 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950004617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102689767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201636784 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870300175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334911454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143074101 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063676848 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872543982 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565946478 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909336115 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893073499 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.626953066 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901200168 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055371732 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.973058518 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.105938776 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847807887 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984402234 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884274642 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856101253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845701208 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12179478 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233844188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949624511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855303415 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463820453 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.557295837 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.833429254 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.61919476 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62963892 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.974461436 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858476649 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844854109 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780861299 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86579032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215480742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.849261435 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.55791774 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845989552 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858696504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931035058 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.849099817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.660995785 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763745558 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845034505 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.844093518 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850851313 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416891127 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00735819 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.894493258 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.817153668 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.938407428 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.573708014 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244470138 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.998902831 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.848089731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852548039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783944934 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.570658962 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901443452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178116467 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.866224242 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496986944 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149893299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.009886225 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78836838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126466313 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.250044793 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.816220712 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072806366 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845981761 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783582346 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.882437128 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781121915 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131951933 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88786853 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.633382301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890187523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183759096 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859247897 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866952739 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871376065 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072377779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.732877118 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851359322 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.711291642 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991015853 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871992302 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183603098 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782474094 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.853138614 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10359174 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.063234791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.771349516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367716424 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008166329 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286904106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.897949722 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.862478454 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894326023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.12496179 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911614784 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002048886 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902901904 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852280929 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177424795 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313664833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.980011502 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.985900836 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972108035 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179947845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877928837 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916608453 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852456679 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84989382 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.647749231 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405370979 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.850226085 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.851998109 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.780451948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895110562 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.854400157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798420799 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470502977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981158484 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.864194295 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076634015 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302314979 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157846717 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788088512 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181615525 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907908869 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.073691497 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.51137681 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.938210904 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114391373 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780604118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.812718886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89682874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872460154 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951964218 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873524159 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.859977578 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138698784 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.857755415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856127324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.680609076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887868123 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861231601 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.860453078 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604725348 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132942497 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879572444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861677196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.743504094 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.86676562 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920437022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862571502 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865142024 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390469016 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583399851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.861331425 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.430791553 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077423459 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865517306 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.580778114 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968181359 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934788978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133337565 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91656842 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.785757051 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.564996555 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.546217841 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855264194 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792293843 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855041837 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863233709 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86645078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.049067337 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133270078 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900056438 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.576856155 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.89852447 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867410546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.859779673 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857175061 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363880155 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011768142 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906047978 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896847897 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000923103 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.868192602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790563573 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.857438287 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860910364 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859146408 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.855019904 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888746151 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.582429849 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229405301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120056391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.465665059 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867727055 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.607126943 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913885225 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.913268009 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.583623964 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039974576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.970707989 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868750209 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.867187201 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.576240189 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.564186381 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42183902 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185231276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164918773 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299566782 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.939259706 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879930683 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195760499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790538627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414162451 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91085235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199157477 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803023159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940341349 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508010695 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208193784 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870739733 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084729004 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250685335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.642779481 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004112222 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069427953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891376256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.881933751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814473486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.38345801 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999478759 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.602638626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066963051 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195150795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.581091185 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991652459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.857075179 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557500305 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947380746 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568752474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.02031864 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.913853711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86679608 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33702614 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863714333 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088326436 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215969014 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.881755932 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974158809 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79711598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871979462 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870417827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.862481979 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.855938588 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.719437492 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.11323795 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869152749 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796200469 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.829012771 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150319782 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.76732241 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.865698866 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862172049 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182873132 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274470309 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026624351 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.819612029 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.367713937 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869153985 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796510469 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796924664 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551056243 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867700906 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835993988 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074856424 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.963401951 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777069434 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806098896 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936941055 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115630634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.876035062 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13866782 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137328231 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.55762996 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882997968 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.961450602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590102133 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.978355257 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861999698 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09846865 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618504875 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086584373 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919575689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817784407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864730755 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076771496 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86160699 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842162383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101044077 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.584184309 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.998544346 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192297285 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937192333 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.85036788 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91243417 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.955467863 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87462682 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944812433 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872504121 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.871490795 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872574502 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910049532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871046219 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994263513 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.875857197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954901544 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.020110776 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.37931762 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.871194231 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141870409 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223228096 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19749985 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927483767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862930486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865276991 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794751666 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014365354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091644094 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136272826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994026893 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.980352267 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886923163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.580820309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940309027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101158747 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13986472 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.762697624 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246526559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899893687 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.865201826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875227879 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.076892203 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083384608 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17244005 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010492946 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.806022382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225022281 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136759832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864779617 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865381971 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459118497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.869041391 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.675812863 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913087109 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841229741 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149366439 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878290296 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250178976 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888523904 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.026506979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.382359312 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621145519 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153703028 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.858197659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933694858 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144343212 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266226218 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181493565 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935171007 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877568602 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.969069782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011516735 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.739429932 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868493435 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867737296 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91553831 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.57890357 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87924512 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154829969 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179748115 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.865085945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.743089186 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88823831 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.877187549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089010296 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149352708 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121060588 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878721532 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876254841 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.683535553 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146464968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930290528 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801474359 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868531727 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967976937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115623549 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890304732 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.320527174 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.5794873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148409256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.871910196 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8891047 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.899154664 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238480128 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197753419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402897288 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082985966 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45561153 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320517269 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16517094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.874945152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.891238336 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167829293 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.872478223 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.808795512 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901213973 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.144552702 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182561005 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.877663844 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715794082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.840868506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21225317 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426889561 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806747204 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877515031 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927934337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869881041 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998619066 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881005421 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.742718074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894302515 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.637907395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149624906 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.874620056 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.856406353 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.624768631 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027148774 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900860152 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013345115 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87910828 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.586846568 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.229250488 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126900693 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.808642676 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.872886345 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.873079843 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871718467 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858047195 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064807248 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.066507463 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150397306 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.836490586 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901338281 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875625231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.086614859 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081609058 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.864951885 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013352537 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813280542 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907423345 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.776444437 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379205257 seconds)
  done (took 1665.826060123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891814815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.915992366 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.867424414 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.919136314 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882974486 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933381056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.902351137 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87708473 seconds)
  done (took 56.992671979 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.868580803 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.063350449 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.879184197 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.86893921 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.877646753 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.869418341 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.033948442 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.876903337 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.877960713 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.879670587 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.870435564 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.868807023 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.176236662 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.890367142 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.872218023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.855239044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.87819721 seconds)
  done (took 74.31306483 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884503633 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.928209597 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.905992245 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.888594766 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.823919923 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.876401396 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.666483945 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.871353897 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.870961751 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.098597182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.508144956 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.878308599 seconds)
  done (took 90.007990664 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.880112525 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.877841312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.878610909 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.877739137 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.879741682 seconds)
  done (took 11.203313706 seconds)
done (took 2171.678589916 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.286880321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.09375521 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.110555209 seconds)
  done (took 6.008983043 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.024479993 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07163747 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.191925496 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.198786545 seconds)
  done (took 10.296690932 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.163708041 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.256526361 seconds)
  done (took 6.226812423 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.260328147 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.891299825 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.256375041 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.875400165 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.873753575 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.876124572 seconds)
  done (took 22.439074714 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.879454597 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.881960889 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.880462752 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.881463324 seconds)
  done (took 9.329821599 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859655847 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.57588474 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.859144305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.872439549 seconds)
  done (took 20.974340016 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.627274155 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.638643289 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.623445377 seconds)
  done (took 9.697515882 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.417022671 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.773795924 seconds)
  done (took 8.99761988 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135253698 seconds)
  done (took 3.942327537 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.012797128 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.185518412 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.390795938 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.403185789 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495088265 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.583417591 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.179519306 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.110115719 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.284465857 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308040087 seconds)
  done (took 24.761312246 seconds)
done (took 138.173560846 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.249530038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.112494959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.135354505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.205823057 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.100994399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.077471488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.087747898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.188143695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.715138221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.714909419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.209196845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124741497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.247868461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.110680457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.248690131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.116573813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.094538155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.256576709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.903734784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.136495895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.089863371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.845731627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.053774359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.856696716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.097446814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.031384615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.423636506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.11632773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.058047121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.432337579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.032154801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.292221165 seconds)
  done (took 173.176409819 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.639184574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876863533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878037424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.877621076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.258161969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879650973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879028951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877791091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.092138313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.033896801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878310856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.202371447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.877827933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877945081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.87888711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.895782354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.192667434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.656584245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.877636009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.878254805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879589676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.098736712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877741504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113080558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.162491874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878106946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.850972569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885648138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.88454471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.890792191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896622022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878314718 seconds)
  done (took 207.618030568 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879459805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880700728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.878663453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.87868086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.878709076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884504206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88058843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879318574 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.547397762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.542319624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.891892193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.888988776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881513786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890924695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880530937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892605071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.893197743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.893390477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890486701 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892440049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895355531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.593330361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896461752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.576833427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.886114591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.88763504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.879502536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88739631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888912994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.890543989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888962148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880041181 seconds)
  done (took 220.913767947 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.082906465 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.888417594 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.889650538 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.839391151 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.888562472 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.88836385 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.881894687 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.078660087 seconds)
  done (took 19.266743295 seconds)
done (took 622.794624231 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.333463025 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.163831917 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.055843942 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.910559779 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.145676849 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.939338014 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.909210864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.967785188 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.633666308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.972445625 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.539844417 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.91984767 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.636077531 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.925873722 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.03732953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.961434919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.484081921 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577484104 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.08348419 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.968328417 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.076593287 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.857990173 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.97768937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.64868199 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.646321038 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899377171 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.073933505 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488674861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.915599865 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.074235899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.622787904 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.27196779 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912994804 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.903496447 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95839202 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944140706 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.23556946 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.913508988 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.032460804 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667735739 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.956205262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.522516512 seconds)
  done (took 103.580528353 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.879787409 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.878693598 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.877648058 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.880932939 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.880062716 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.87897649 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.878007777 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.878709286 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.878731244 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.878855356 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.878671891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.879839652 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.878827884 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.881108153 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.878374764 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.878387171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.88012167 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.882414014 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878685348 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.878301661 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880733633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878905744 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.893491397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879690607 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881386531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.879416804 seconds)
  done (took 50.704141266 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.90202578 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.034093643 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.105912744 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.906125661 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.89155827 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.893835491 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.907947234 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.896904414 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.895511281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.895732463 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.983262732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.897031744 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910886451 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.112306144 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.906222313 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.892487895 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.893150625 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894958229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040524017 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905456214 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911345542 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.895459737 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.909706474 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.904807857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.89598021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894003687 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.897475456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.330723343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.898491356 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.983483866 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.934185507 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.910796869 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.290312524 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.118734037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.94155952 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899873939 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.895202928 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988502723 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.899016415 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894679302 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911310082 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.897949789 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.111670169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.369782995 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.902451869 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.895221578 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.34278344 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.992881292 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.932646445 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904735596 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.114859636 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.907168722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.896222662 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.894402542 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.929923761 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.903574237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.895754747 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.205976461 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.904979556 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.912754272 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.898414102 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.89677612 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048301373 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.90053136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035950858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.902301056 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.903805421 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.895196638 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.113923111 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908460765 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.381040394 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90431877 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.896789989 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.987705056 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.039011593 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366159485 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.904585184 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.050604917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.305907267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.917838244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900348945 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.323972587 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.920161594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.89998011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.899606825 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.89829172 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.897165766 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.941480777 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91174496 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.319669233 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.385278662 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.213259334 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920055863 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.910925102 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896283918 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.204598595 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902130374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.897964576 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.109292361 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.389521411 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.907238753 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.905274789 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.368325599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907213761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916213964 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904711026 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.120085145 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.909372968 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940459128 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.899730502 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904236317 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.900276831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.916191784 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.902987354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.897768291 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.360577557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.003135677 seconds)
  done (took 234.37219723 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.894073957 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.891522386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891343855 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.902703121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890438261 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896225328 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.892551733 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.893327587 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900326831 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.893744345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.892414865 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890103664 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.893063886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.894548169 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.410264473 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.906429511 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.51096845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.902975693 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.901193262 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.91561932 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.58230907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.909622294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.901888829 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.921895794 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898570886 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.903806801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907943804 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944037304 seconds)
  done (took 168.85991422 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.907739031 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087655467 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.926850549 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.943522657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.914092003 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.90512252 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.931025851 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.928314897 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.911903244 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.90729927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.907413646 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.969236084 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.918728213 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040809314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.937992895 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.939437972 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011529277 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.914384853 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90567444 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.906267029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.935865286 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.900918754 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968100922 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.032736081 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.927132335 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.02727595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.912852114 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.908740912 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.908969374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026467154 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.920799855 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.969185845 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936254229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.925190561 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.0316016 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.025972476 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014755945 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.936949222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.913416155 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.908131078 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.908152571 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.898747835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025539334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.928484948 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.910763926 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.018446535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.926447869 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.910272055 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.918995375 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.909260759 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.923289908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.927376835 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.97658129 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.040356816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.943572586 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.934343122 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.935329206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.187597523 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.919346002 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.012854845 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.903233238 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027238813 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.928507292 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.899512478 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.910029282 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.915380321 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.939034967 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.940491472 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.017565847 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.916235849 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.012570976 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.943694884 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.917559834 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.909270794 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.912743781 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.030381597 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.032507497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.944066446 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947164632 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941893958 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.905568339 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.91216235 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.900358721 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.928562698 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.917439743 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030493268 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.030648395 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.918894666 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.913607111 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.913048879 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.913657743 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.937260339 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.036523885 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.94705692 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.009826913 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.978611802 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983724314 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.927935351 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.92415217 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.916645074 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.975288025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.927064214 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.923026239 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.235919702 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.982622399 seconds)
  done (took 206.917663291 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.385037848 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.965637475 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.968105627 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.184630722 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.330630233 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.790005363 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.958059307 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.961659803 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.985709445 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.123241508 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.016666285 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973461698 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.947733239 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.935469449 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.959236859 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.981146235 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.965273854 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.243173012 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.081622917 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.069671446 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.941343702 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.245617888 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.281831443 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.350897533 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.996351983 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.296087626 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648849497 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.205275944 seconds)
  done (took 62.634788815 seconds)
done (took 828.882149642 seconds)
SAVING RESULT...
DONE!
