cset: moving following pidspec: 20535
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.484972314 seconds)
loading group "string"... done (took 0.507751265 seconds)
loading group "linalg"... done (took 8.862187433 seconds)
loading group "parallel"... done (took 0.177462186 seconds)
loading group "find"... done (took 1.283587704 seconds)
loading group "tuple"... done (took 1.905051042 seconds)
loading group "dates"... done (took 1.367912308 seconds)
loading group "micro"... done (took 0.196067662 seconds)
loading group "io"... done (took 0.508333987 seconds)
loading group "scalar"... done (took 51.23015747 seconds)
loading group "sparse"... done (took 14.031832714 seconds)
loading group "broadcast"... done (took 1.325572266 seconds)
loading group "union"... done (took 10.194716664 seconds)
loading group "simd"... done (took 3.048773448 seconds)
loading group "random"... done (took 11.536850475 seconds)
loading group "problem"... done (took 2.225025221 seconds)
loading group "array"... done (took 24.321151759 seconds)
loading group "misc"... done (took 1.134894596 seconds)
loading group "sort"... done (took 3.783689413 seconds)
loading group "collection"... done (took 19.281862004 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.614057839 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124372215 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.2642851 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.283469807 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238510784 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162243255 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139962555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.262183745 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.631169573 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214197703 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134657512 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.495358603 seconds)
done (took 6.392649907 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255954752 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178408319 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167792972 seconds)
  done (took 1.119065288 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075175399 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151701524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106094312 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091613354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091836209 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107257171 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090865938 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107630751 seconds)
  done (took 1.524887406 seconds)
done (took 3.752016006 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512230676 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873733497 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512007731 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.160912249 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.29777671 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297072284 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31441284 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206270063 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105355054 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090427681 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175078831 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.443518404 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43420645 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.005665178 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09065027 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096962151 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131556468 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.833766347 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077247356 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124463246 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.483393071 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.195636673 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097352999 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123052229 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183550201 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132236468 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161537178 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101408361 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664913266 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130814871 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186793503 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097038676 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159813969 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.193622623 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208336133 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090487897 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687377272 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201336425 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09036776 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098755539 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662547564 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118940584 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189639244 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101837136 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089515575 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.195614415 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093905766 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075735676 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115593973 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082357301 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169578645 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453701868 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104905679 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171812383 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09140079 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.711484921 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098162272 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278980525 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122095626 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090238847 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089917673 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08597716 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166188624 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091828076 seconds)
  done (took 20.334109834 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146315872 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163552012 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076159873 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155196597 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121758493 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077783979 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099788245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076032606 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123212957 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220155443 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136655774 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152292572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090506812 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088721824 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126708599 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246434033 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104617649 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120374267 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087096452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088580828 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13955046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093580768 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105302391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091626301 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168381014 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202038507 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106094534 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121514358 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088276714 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095226358 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141024538 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145189737 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090346475 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087157437 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184732306 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104959692 seconds)
  done (took 5.260721762 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197119804 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121969333 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.211313826 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160863567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14198408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166219082 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148586285 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.279203843 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288607611 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161532737 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127066173 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103683234 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077418664 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0967099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07789085 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45758526 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.17968123 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128297292 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154934446 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103272776 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081447048 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383366541 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098760411 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078671832 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101355825 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06741796 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196307592 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085522733 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.082500942 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081143245 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109908423 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113665337 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205913466 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.171396347 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131993985 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119336977 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103894387 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079737333 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.217799377 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091437982 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075302433 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125226058 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129611336 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113252782 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098492501 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093108298 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221123232 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080152412 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121590079 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.032271607 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193998103 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.12212787 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078182921 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284817685 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115960063 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08592196 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079923147 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24771738 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111387776 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079872443 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095786516 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084728005 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07688034 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432005088 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10633042 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.878876016 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082636984 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159508062 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083185025 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105236483 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084661954 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082916287 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117008282 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078069034 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076458521 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094900295 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078493326 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082225578 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10975415 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084449569 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077950244 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161869875 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097021933 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080941663 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114758248 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108306609 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099981574 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078449267 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1257477 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080910967 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081529128 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164633194 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084665914 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109833906 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083681429 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14347042 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079529726 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101027661 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.216447678 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09819928 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107742303 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099807607 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082993476 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126263204 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10039056 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078601777 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100481521 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077617004 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078274297 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159297196 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07997866 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08076877 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080566651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109362144 seconds)
  done (took 22.933493846 seconds)
done (took 49.301344073 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.456219408 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086263164 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08454822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105785228 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086217423 seconds)
  done (took 1.674415404 seconds)
done (took 2.503877974 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323898297 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19474193 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097519005 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19153486 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0839106 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197593333 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183354423 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091249323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20933013 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082924329 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191217227 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0821124 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102683248 seconds)
  done (took 2.887722114 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100581071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108015131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098805582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11664118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082471761 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097393052 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117004982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110048341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098638687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109934266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083536649 seconds)
  done (took 1.955635822 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098126244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104475391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095774496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115681781 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08247233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095668817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115373127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106733735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09761897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110547644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082859903 seconds)
  done (took 1.941599576 seconds)
done (took 7.613962661 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.100884422 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.781448842 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.145489642 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21352036 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350016084 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239618299 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.600406559 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154607129 seconds)
  done (took 14.573091939 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.120502687 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.15944729 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093459456 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090275944 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093297107 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115062122 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091728094 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089947736 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112440719 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093905759 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090784517 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110152563 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090831147 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093920524 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089035844 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107047005 seconds)
  done (took 2.534113896 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.150079138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123027435 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116047871 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097713507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091787196 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115917253 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099037987 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113300516 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092726278 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093400617 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098692366 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113060957 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093878673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090419998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.113160356 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123768529 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0903239 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11291014 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11949898 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112888762 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097995701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094296428 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110516635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097816278 seconds)
  done (took 3.472026211 seconds)
done (took 21.414124034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147629419 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100014637 seconds)
  done (took 1.082389864 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.142208487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.160561337 seconds)
  done (took 1.140390131 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111548109 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086976042 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137675629 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100376672 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088387129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106724777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116655884 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105358518 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.088953433 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088515137 seconds)
  done (took 1.871714972 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092332667 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092551077 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12120227 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137980039 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11528224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092785414 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095255135 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091417383 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113975496 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088735815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0935936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125718074 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093580439 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125635268 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094109642 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09355313 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115293904 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092431254 seconds)
  done (took 2.718336978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089448009 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089802966 seconds)
  done (took 1.024595238 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092965768 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087437432 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088815328 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108807987 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088091283 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087113026 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105456728 seconds)
  done (took 1.504208413 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492574204 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266602358 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37094548 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106329139 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144978684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.347898462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145954044 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101882548 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100092864 seconds)
  done (took 2.956700429 seconds)
done (took 13.138509769 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091409764 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220043946 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.630519637 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111875891 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.207597297 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163480828 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290532896 seconds)
done (took 2.568968374 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347154215 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14873865 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085987481 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088768653 seconds)
  done (took 1.517191338 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080478282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095654565 seconds)
  done (took 1.033719526 seconds)
done (took 3.40416666 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087000609 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118582785 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105933955 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087610118 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086363633 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084172031 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106469504 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087112498 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08576916 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085550896 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107292716 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087195774 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085169121 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103339445 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086756194 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087178501 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085580604 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104631113 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086380244 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084639484 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102849035 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086655528 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08552455 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085357496 seconds)
  done (took 3.102508511 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111357141 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088376752 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108536477 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091424864 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090431078 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108562016 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092465377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088849252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108060002 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089324739 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09087006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090309481 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107491298 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092571352 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086129586 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109940728 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090316547 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087375469 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10683869 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092639247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089572764 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106064036 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0921996 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089465955 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110192447 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094170203 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086956212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107223871 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09196366 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091575541 seconds)
  done (took 3.750013781 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096003147 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084336622 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086561509 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114268044 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084945591 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087334503 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102248565 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085872672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087892191 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086036051 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10783289 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087764478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084078562 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106676282 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089823385 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090587027 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113386067 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085722922 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085977759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089149131 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109192469 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085244435 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086730181 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085926125 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106637173 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085321911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086375924 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105534237 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088914927 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086979627 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089885053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109923259 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087209367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096524659 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108765052 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088934328 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092003288 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103298496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089523391 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084048368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082738625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105976978 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085315059 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093390789 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105409256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088431967 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084999024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088994765 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108719468 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091498067 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08370567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102639488 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09097259 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089436691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108304176 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086283132 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088878532 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085209204 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106260177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088832795 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083081611 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083448582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111404612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088766712 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101331069 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112136742 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085401279 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090829342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106852214 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09510672 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090503714 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116761103 seconds)
  done (took 7.628042837 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102198663 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09730475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08855769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107008804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088183492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087008018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111940526 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088387606 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087966672 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113250166 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087709188 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088215678 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08789058 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107267002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088916808 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088543821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111940813 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088328559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087656278 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107797644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089212002 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093060166 seconds)
  done (took 2.957993274 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23152186 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093636392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135998106 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119913753 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106823505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119524926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092426905 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092698808 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109866545 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098699124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097154471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110895619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105882581 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095849137 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117016032 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098044821 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109042871 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101304605 seconds)
  done (took 2.898971239 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101647327 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089723856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12840541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09170217 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088977235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088506707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114816329 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109607484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107234616 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091995947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096924103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090297462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.109294457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090980161 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089495336 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112376698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090899305 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090659274 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114551291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095853174 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094957965 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114826375 seconds)
  done (took 3.0682616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10350149 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090410668 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126193889 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093949892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089164563 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088695668 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.1146668 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090113964 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09477136 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108007473 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090119776 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089246723 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123232926 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089796091 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092583805 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108993782 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089978152 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089209827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108746321 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089908298 seconds)
  done (took 2.835579261 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171672129 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123465565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106331216 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113224881 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125242926 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10665824 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112307455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125212316 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105196859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136375235 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107105299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106106349 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131740799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11062556 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124013295 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117358161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11399534 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132780912 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106353641 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104753319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137497995 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106168037 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133184193 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106814146 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10438727 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12504863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106823218 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129641608 seconds)
  done (took 4.198336304 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08975967 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088861071 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087410084 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106915725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088570352 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088096341 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085958326 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107581861 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089393311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088063795 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.1064268 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090240757 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088010522 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087262445 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106770396 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089504978 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088574318 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106917081 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090087697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088270738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088443506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106972343 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089751452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08741151 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088551935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108276914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08784725 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087670032 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108152904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089274087 seconds)
  done (took 3.671995176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100948862 seconds)
    (2/2) benchmarking "in"...
    done (took 0.097023982 seconds)
  done (took 1.069634981 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097120971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103867472 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086697889 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107890995 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096861828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088600683 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114853236 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095790708 seconds)
  done (took 1.664881358 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143195527 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165346443 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096085071 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101239716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165318497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156216682 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133647076 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09458877 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108153571 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083875359 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158885599 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082215142 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091046763 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106442451 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091416951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095554158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.107214834 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100247876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095844974 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090531095 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114040547 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096511395 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110887235 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101367178 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084665963 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09144097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114552285 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100611954 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085912756 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113020787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088342439 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090006374 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113677989 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095293674 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089432277 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164803047 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098053694 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106634358 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091755698 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093408068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144922302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091103242 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091097008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107231326 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095274136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094049677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113484592 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09168832 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083221064 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08520353 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110210343 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086091587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091402911 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111309659 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091057987 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097804483 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111032125 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087640663 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086414038 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104665638 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090364654 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085885552 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111696889 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095176592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090779759 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110823052 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090644753 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088888111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.109999626 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091835028 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090116897 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123655199 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093224595 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09515774 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114465624 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091299423 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08765865 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094598791 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110055609 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091718081 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093399775 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13897892 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093936159 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08498046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106191202 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09818984 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092232341 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.111785529 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084011518 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099079004 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112388768 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092407132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083406022 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106954812 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088241938 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093903359 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08284091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11090312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090149595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094461696 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115100695 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090312541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091267191 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116033638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095981081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089745288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15778558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08779357 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105235736 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093755548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095306665 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084243886 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11117481 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090222545 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087053354 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105700533 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095805355 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090151452 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111075185 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096678985 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09311925 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111663145 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094658686 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089939061 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086521745 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115507083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099416877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091607982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.114534849 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093226748 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090717765 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110291078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095746543 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088216003 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115734837 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089488854 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089203563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.110152626 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096223756 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091213872 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085471159 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.109583309 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091691212 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.108209726 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094481821 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092040361 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0864041 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10397449 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092246823 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085775074 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112151667 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100076918 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08699881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112368111 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088979862 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098671207 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107154142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097090211 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093690565 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.115994925 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097746503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083678542 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088055992 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114252631 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094222472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087024011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112049472 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09187368 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097814145 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103768003 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096476011 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083493835 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107186877 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098104069 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092964206 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094270697 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107507429 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13124546 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102130573 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116275279 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090849612 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093960825 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115650325 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091697882 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094468206 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116230411 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097559957 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090961006 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110514463 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099036756 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087446178 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112412207 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091582767 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093193797 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102381373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092639611 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084096288 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094503579 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113421708 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096063098 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095837739 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112823971 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090726568 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098270976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108116872 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095803864 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083317312 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114608811 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102316744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098154713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096505846 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113109766 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08986319 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090341847 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119583847 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093493693 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091068698 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112215623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085755393 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084388968 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116335263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095103894 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086945892 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090670926 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113724847 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094732757 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088160368 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104271851 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096362507 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09581357 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10679502 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092614798 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088499472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109695543 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100959501 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084319767 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108682485 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09485022 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096191456 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110936719 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093234633 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095073447 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115986503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09590367 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094926766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088060003 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120109032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090064572 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089878946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107895365 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.094859354 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085433973 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112643833 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09355797 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08887561 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106532385 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097760919 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097767199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09742483 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111529859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09593238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096303562 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118171322 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090563224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096246311 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108207398 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086159978 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087896235 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103207345 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094924007 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087493707 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095028199 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111601513 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091454724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094795656 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113938002 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089467166 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096578028 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124873766 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086346612 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084981261 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111839595 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092631742 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088262287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109164966 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093429864 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093203501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117385882 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096326016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088141101 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111975339 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100429655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088750195 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117784788 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098352252 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098660888 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087096052 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.127379393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089944183 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096143668 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106232929 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091829343 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099314764 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111926359 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090306788 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089814321 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108985837 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08631439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08803142 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118536319 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092783071 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096259915 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110627608 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091455426 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088589771 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106607811 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100315727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090175065 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097466533 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112645071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086332322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085342069 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116912288 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093300741 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098334329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107652232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096317601 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097374741 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094643346 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114047751 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102556322 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100064275 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118198513 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097951275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084603196 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110534877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098578633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091809878 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114833894 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09616183 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086454572 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114905074 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099741983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094184135 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110640663 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087718417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092023736 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098383874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11672755 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096714678 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093007225 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114050796 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08906711 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096247584 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117453003 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09521736 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098566777 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111653122 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098266223 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089234038 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09741454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113300006 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087605683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085339341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110627748 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099007497 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08562415 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115826688 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098635717 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08931897 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089445318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117612608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089836665 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094187025 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118256097 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091004501 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101410996 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115410527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091366879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095915994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116727639 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087251678 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0905733 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111426328 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101435892 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090628632 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09672729 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113744467 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097804734 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093274908 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118534087 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098692556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097736955 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105640569 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100305923 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096286433 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112681505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091384103 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090859852 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086345243 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112367841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098739909 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089479891 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121846544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099946001 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090068965 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110991388 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098565196 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091830512 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120042121 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090755889 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093705957 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105603209 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096728871 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091064947 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11832731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091383838 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087237976 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096864405 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118028226 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097817647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094209774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120628623 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08737134 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086418475 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115531955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090790823 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103360744 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115966487 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092918579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091791104 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114540383 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094883866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099680567 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087046838 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110635944 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094750788 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094483384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112248054 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08932277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096095416 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112009918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095699419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091338261 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108367295 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093574783 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099138563 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111008577 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090718632 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089972445 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099392019 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113430487 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089940985 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086579584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120094853 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095538636 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099020625 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110253587 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094826823 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09055141 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115982941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101375973 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090967826 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113369423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092791858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097951148 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119264041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0878204 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090137753 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122742115 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100079405 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097477371 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.094790781 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113453343 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099878942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099467502 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116247378 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088045513 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087554525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111861849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088791804 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095010084 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118751723 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093989961 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090721628 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096259404 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11916012 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095507992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094271438 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108848186 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101620936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090768594 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117650785 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08831426 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086613529 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094296122 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119620064 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092439582 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093009221 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116068384 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097535473 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08781557 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111330377 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098382439 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096367721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118486703 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09396447 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091305817 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115269508 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104040742 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09457177 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091809904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123284859 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099393847 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093230644 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114295505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09804476 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099372176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115794196 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10093045 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090598228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114103945 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101362406 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099801152 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123805518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093616641 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086718258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.1191042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092678504 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087642519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117437257 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102203377 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100003299 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112972859 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091871174 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103492603 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098135247 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115390709 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091356489 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090309969 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.119379877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091321848 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097504595 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110781491 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101826082 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099765737 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120855916 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104357653 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087912847 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120131904 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098356629 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101778246 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09480828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110470172 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088571964 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09583125 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121095364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100199767 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097045571 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116991688 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100159841 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094597069 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093241823 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112798748 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100643402 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.097653684 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11598681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096406321 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092592867 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116147568 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097281418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099285885 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120494806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096900656 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10414458 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120087411 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094977199 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091731256 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114822441 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098382974 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095647882 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097402197 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112197533 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089189501 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098844117 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122218378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09490503 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101756459 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122062292 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094934003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096151965 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121413248 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099728947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095658699 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094399337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118446159 seconds)
  done (took 60.787162654 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147070714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101996226 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116624057 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097209759 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113777406 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118162184 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096737231 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096499541 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117133465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107260231 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09574299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116044099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113539801 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116750345 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136661834 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105949138 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116979742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098217285 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096058948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096645169 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131615316 seconds)
  done (took 3.259524308 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114090923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109290631 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12832624 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111677972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102303058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12919619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106806038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12810331 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110794825 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104607932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131757992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107947901 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125000653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105181245 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104214075 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126189302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110840958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102751094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131100353 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108238214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124143112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108136525 seconds)
  done (took 3.45625408 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105789844 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099691431 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098678347 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118177139 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101323247 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095835791 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122942713 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097861159 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105131895 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115861943 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091232033 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094711498 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098790133 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116774375 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091596426 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095847616 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126560558 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10083492 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101575952 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116430638 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108792191 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095868203 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.115829928 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091420567 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107401686 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101125027 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119390041 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100580745 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088803807 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12068185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096401073 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094078407 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116548482 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090966498 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089407444 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120552079 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101199933 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096733848 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095459871 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117247999 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097531355 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10048262 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119887348 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098786276 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095838454 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115281564 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100736084 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096305878 seconds)
  done (took 5.916974636 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127121505 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16342348 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100968594 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135749361 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133282603 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105654208 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09846707 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137480441 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098273368 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1219866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112914255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11058014 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123801711 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105595201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101919848 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124102162 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102646656 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098538199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126180206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100625617 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104113175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124674354 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109749486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129856314 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104301135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099355802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121588697 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105408686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108575551 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126798997 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105339578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103910052 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.381542517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103260649 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120124424 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103174233 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111405744 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122274461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103434305 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098473232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121807482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105331812 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102764612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132409204 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102986546 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102029691 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120984861 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099552186 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109371084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122253275 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1073738 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112061426 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124342395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101062073 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102317303 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133717754 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101250243 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120712848 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103869897 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108963823 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119904022 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10462055 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110975698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122346922 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107189494 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110105849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124850786 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103184261 seconds)
  done (took 9.021986242 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13615071 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105045179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134474798 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11387965 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103730494 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127712019 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104910829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103884436 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126362528 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108237562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124520096 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201344454 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123040308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109945761 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102289207 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12616694 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104849835 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103114976 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126315474 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105300949 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.103481422 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133603457 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104519318 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132154393 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116012438 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100465344 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125776981 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105146312 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111788644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126419946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115622555 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124531206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104812065 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111130394 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136679133 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104396112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098486008 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126431856 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10405293 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124156172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10343795 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112675665 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126351125 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103501504 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104042364 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125457476 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114177405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115180563 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132882093 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109699992 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124569416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113993483 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104571526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126415295 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114330066 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14000819 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113945701 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111588422 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126160451 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114620605 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133536263 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121716456 seconds)
  done (took 8.234641107 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098033797 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097792671 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097378153 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11948293 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099092921 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098322294 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096729613 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119890882 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098430473 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098236388 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119736937 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100714721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098116185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096180499 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11895536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098736416 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097373777 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117948723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098581535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098451992 seconds)
  done (took 3.012488408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108508911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115256827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120785813 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107229454 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099383692 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125241766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100528198 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100958614 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099509997 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122699258 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107640901 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128449148 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102678565 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105249069 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127972396 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10747505 seconds)
  done (took 2.725325278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119243582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11533946 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.193152926 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102193401 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123051149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109593102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09921024 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125020299 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10025713 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106413879 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103379618 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126027934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100274713 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100309882 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122269813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103625811 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098693743 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127137916 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101907064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189308062 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105599203 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101537742 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122493748 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104975645 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101986134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.125859854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10835286 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101399954 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1019551 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123617231 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102844947 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106550976 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122430413 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105600367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100667709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124238505 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102445911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100161624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124479394 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10139736 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10251469 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123891886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103722927 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103135484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097723338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124065163 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099759963 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106449628 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124583354 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102714239 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0999754 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129815174 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105962781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108788488 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130209895 seconds)
  done (took 7.16667573 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112560509 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101713609 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134588452 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099968412 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101046438 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101687361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124634164 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103355566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101096427 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121304434 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103765472 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102005127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.122368336 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103304273 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10235239 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122199155 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10085428 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102187084 seconds)
  done (took 2.90930069 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107117552 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10040122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104342914 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123142792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101281289 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099807009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12145739 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100888785 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098886323 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100268756 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122857615 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100881824 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100514457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122458062 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100740733 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100314399 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122004928 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100789039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100863699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098292861 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122251301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100896467 seconds)
  done (took 3.302732644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111665124 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183865648 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107355593 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192853873 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098276199 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096019852 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128995943 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098487204 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113296713 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118362253 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098148912 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095535296 seconds)
  done (took 2.397632219 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131492423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138500453 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123632921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102909861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109475302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127587332 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105843954 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105259413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135828186 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1172608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125645517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11353929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111035734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135967334 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109500419 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130417857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10807673 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105048127 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121946671 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122793896 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104170822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135255101 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106019976 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105278681 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128148624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113868008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133799375 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118460387 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105557717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136104371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109567756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126545766 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115061731 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115640135 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125789997 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114298021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105295976 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142918581 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109435815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1359458 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102678505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109346503 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135921918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111417675 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133623661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107336112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111308688 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128507596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10696436 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147592467 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110946438 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11353813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131447087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113956451 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135519708 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127675298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116640269 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13660349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110144832 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139249757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130368822 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114648682 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116512062 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132576997 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113792999 seconds)
  done (took 8.88136007 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143229383 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101987315 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127943419 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117010067 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134828791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106808227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10668172 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126449115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10671922 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10292489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171818777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106648909 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138302198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114566229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105273763 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127062121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107728712 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11455672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125334589 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127190947 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126375918 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116284745 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113750046 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135741895 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117913941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131194425 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106793485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10501575 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127623822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10821302 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111712551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128275781 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114533307 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101427248 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136891221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106644029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127101327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11281995 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106152225 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132869983 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114767643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141437163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107567475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105874073 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138692093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107447079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106374666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126370639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10832015 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102635268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140068305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118054347 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138764036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116654136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105966767 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128831393 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107113081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105582104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129578238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111332214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135854972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107055781 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125756613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129059809 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107064916 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135944143 seconds)
  done (took 8.848326886 seconds)
done (took 167.623416749 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151051932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191226622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145310461 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179913151 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093315249 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129106629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149220305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147514377 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091754819 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116611322 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093664581 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096723569 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185219875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094078435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092806134 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119288188 seconds)
  done (took 3.03381389 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189937369 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306994211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109417534 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119426867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102885647 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099443579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119653015 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099966371 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097171579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127288383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101135709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095390812 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126574285 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097691528 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098175287 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121881406 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106306563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099542117 seconds)
  done (took 3.182395638 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119404628 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148464766 seconds)
  done (took 1.238396075 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13149445 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198955214 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272179089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170159972 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122509877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137940492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150448846 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133325963 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179482286 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133529072 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111924466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098734537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146551994 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103762025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113929171 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121814279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126906858 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133911933 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112842292 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101153829 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141527954 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101735507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103114023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135033097 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169007716 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132504094 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101925906 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100427618 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12262741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114020532 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104724209 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136763969 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110602987 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17436483 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103044032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170693176 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106491774 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122132431 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112499434 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097715742 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125123887 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103098476 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134379154 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100317848 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101048314 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127330593 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102956729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100953231 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127987252 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108967942 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104788188 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127650609 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167556794 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108583753 seconds)
  done (took 7.871382326 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.844292082 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14125982 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098437569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.995780147 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151841905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113760284 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.815870607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14559358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252519334 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.843317515 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114198066 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133368844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240375497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250169953 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191696966 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351457854 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701243484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113839175 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126819378 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165406318 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105821458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147260752 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117566834 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430937098 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099902903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120729135 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107873562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110809818 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17772394 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098563718 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125001052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196738356 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260808862 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205497797 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122160375 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098970912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097052392 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185794181 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269972213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217844654 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188284105 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094649063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096486282 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130426708 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116666639 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116371957 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157711093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189751247 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19147872 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101617357 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134790908 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10944075 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127707771 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155886919 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117799338 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35513432 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363559881 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101974207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130695457 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11460129 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269436534 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121187547 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23602154 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123826842 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212551202 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119647055 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808818152 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162332746 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120081089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106445901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104606698 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127296463 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105998701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181909616 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380877658 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13514779 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102293778 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11924139 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215781551 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121164021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098154887 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181899377 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099515091 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12878301 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113721667 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109255737 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18941162 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.264490794 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109564026 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131043754 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104423741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130708698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101580106 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231764351 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230980019 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1734099 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211604685 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129590704 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181349733 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162657596 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129456754 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165681486 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12972446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114172246 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12798619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225788366 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131783652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122334533 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103793982 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107467816 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161883895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10233581 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129689804 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164451036 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46609671 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183810625 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094858708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126829773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109194405 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179706615 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106254542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260816737 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129338452 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162271651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128525064 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096726739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105555019 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180829962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130357464 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109924053 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106107129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13341836 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249080999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243558496 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1133691 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243026773 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191658276 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107372501 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195167547 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106478951 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187445722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108747876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130108015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100700895 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799438255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134906356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108436471 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103328326 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20535568 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098669554 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101138478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123128482 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096773575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802585095 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100711321 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119980384 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101808573 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105583479 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131049985 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107178177 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103340426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180674542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264899136 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114236954 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105656139 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121778109 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157867999 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123012308 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099716134 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099632645 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122131781 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109616125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101944426 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124543876 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167792239 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176240417 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229021517 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557880306 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122840454 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100541485 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239105073 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120537873 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321103622 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108084165 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233906476 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187124387 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096770564 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357469689 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187051299 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.211788537 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102902626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190450261 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095834586 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129655105 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157846873 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121541543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106609551 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178215223 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113991704 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134578173 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203967937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099493757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248908581 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095864674 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188471142 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100535289 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129816142 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323951299 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099360511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139061799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157712258 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127319409 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10061824 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.711009858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09909151 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132949987 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108127821 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23185874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184469047 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108190096 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133035341 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112976908 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180243723 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234687193 seconds)
  done (took 45.899293844 seconds)
done (took 62.186366148 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297817908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25852771 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303759082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209627185 seconds)
  done (took 2.132915905 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263926819 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163312919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236188356 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097706627 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245976722 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097635388 seconds)
  done (took 2.101124524 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.493419456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.373758552 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307258262 seconds)
  done (took 2.173649636 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252527966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245785922 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346810686 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.40901022 seconds)
  done (took 2.366910085 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302711618 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129805928 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124868917 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.213743955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257433428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231490143 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147581081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196677379 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151934347 seconds)
  done (took 2.79947576 seconds)
done (took 12.568036661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.3710867 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.369081927 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.227751551 seconds)
    (4/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.209932883 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.145048307 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.26015549 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111667171 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.197044951 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.234348613 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.246992243 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.359935752 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.244370568 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.134039517 seconds)
    (14/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.231239538 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.296210806 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.204484838 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109286428 seconds)
    (18/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.295363635 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102972977 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.138874438 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.132878548 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.22966981 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12926608 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22561936 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.158559936 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.185609767 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133524493 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128620293 seconds)
    (29/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170158126 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.305156531 seconds)
    (31/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.181735164 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.342975279 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12920722 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.186580262 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.14308769 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.130185336 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.295398157 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.181807448 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125629092 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128744933 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111236064 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082620575 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.260838549 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13169173 seconds)
    (45/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216017675 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.161745573 seconds)
    (47/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085715692 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.223086789 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093355836 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231156387 seconds)
    (51/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.189602922 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103250204 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081395333 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138999342 seconds)
    (55/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082397113 seconds)
    (56/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.247325745 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098717227 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101805608 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082233841 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.207717263 seconds)
    (61/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08207127 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083069851 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.158099157 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.176692668 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081228109 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148733957 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15132073 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188049197 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.159779391 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083883766 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.082841412 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082664732 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107839298 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193313327 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09815745 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.168405732 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087549418 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185118189 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129923496 seconds)
    (80/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083636608 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110471854 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148414801 seconds)
    (83/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088273844 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.207470642 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181888851 seconds)
    (86/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190833965 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108270264 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123055994 seconds)
    (89/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11449499 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109020166 seconds)
    (91/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.191792178 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104618817 seconds)
    (93/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109191268 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130191774 seconds)
    (95/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.14977657 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170952811 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.109038308 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082459693 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104543416 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.148852351 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110851065 seconds)
    (102/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144679961 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107779979 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139807268 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103343662 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104549404 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.141500589 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083934355 seconds)
    (109/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.155399575 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081374365 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125943827 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08346447 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0825849 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083146906 seconds)
    (115/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206890867 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082407598 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103591794 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134156631 seconds)
    (119/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082434799 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107844814 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08840365 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.130207833 seconds)
    (123/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.191249049 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.136814181 seconds)
    (125/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083571412 seconds)
    (126/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.08139768 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102870208 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107672862 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106014959 seconds)
    (130/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173159099 seconds)
    (131/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091807619 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.108235248 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084694886 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188392769 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082483656 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.10787128 seconds)
    (137/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.143925729 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083349167 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149720397 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12701575 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103929784 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083369643 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135637145 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083071259 seconds)
    (145/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207548473 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134128026 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111463319 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082353426 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129402528 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105671254 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10203349 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1286272 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087936074 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083930453 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09908189 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088021644 seconds)
    (157/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.137415615 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083625731 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.087506376 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.210942477 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084772008 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108537621 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099107568 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.131350484 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104591807 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112227233 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109011363 seconds)
    (168/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084578251 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108479574 seconds)
    (170/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08380281 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151487088 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084473113 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099517815 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082822306 seconds)
    (175/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.168217938 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084241608 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109554725 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102973262 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.125613677 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083617825 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089031562 seconds)
    (182/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082437505 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150026317 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104628359 seconds)
    (185/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083379249 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.123983843 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085317805 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085024735 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08769145 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081794023 seconds)
    (191/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087372606 seconds)
    (192/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.107456902 seconds)
  done (took 27.708727794 seconds)
done (took 28.71038383 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.21603448 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129410671 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10960829 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10755215 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206090685 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114277258 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.145864875 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111962428 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115756084 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134959392 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100680935 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119146734 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107311097 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206274285 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110957379 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129516476 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10086461 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117877189 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148278805 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122467686 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20807955 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103063658 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115614352 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127032004 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180417123 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128573907 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108261081 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10795137 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144111999 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110770229 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108396374 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125273325 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121969369 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120408617 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124753774 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11248555 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100665299 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088911629 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135403977 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112720325 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120078769 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133431922 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110649205 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101223163 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13636154 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110885621 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10043447 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136681902 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100579904 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108421447 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102062188 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147008541 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109647025 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098086533 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124953896 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102405221 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117415756 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126115341 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119996435 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100518259 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126188329 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103484647 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11147856 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100000892 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134982765 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101167078 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109722422 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137665547 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110312153 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102857242 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126048058 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110145417 seconds)
done (took 9.867219902 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106905235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146587013 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203237306 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215192673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127605706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141018606 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115432825 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125228544 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139079653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121269218 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137411429 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157764105 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18347333 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141977521 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116623369 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112525988 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137755279 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110058038 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.212119186 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124999095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151926497 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11815713 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128655311 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143450481 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106150322 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135607751 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133194193 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113496462 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104055196 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139392417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125890862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107582824 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133943499 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126270669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121937642 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141362242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116471607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111833626 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131826136 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106690992 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112309187 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147378807 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105341061 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14022762 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114977482 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119771021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136243475 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119632394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106054888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11155937 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132300509 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132230606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140027084 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123948667 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117122312 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142330794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119383386 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118174867 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132367404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119223015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105076395 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103519112 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132588105 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126663253 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131649479 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120850361 seconds)
  done (took 9.627779861 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125245634 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136276461 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139556412 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115655944 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10944834 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12475715 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099053288 seconds)
  done (took 1.911657373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101354913 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189028299 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209619302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210181871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208835151 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194700294 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148965203 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101214972 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134741318 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137009982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188555099 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243772563 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109793918 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142855915 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212374176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101106404 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214637367 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101924293 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113882343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213557562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117200492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157723865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114208397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100626226 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210243616 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101584329 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263819692 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117750577 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136724791 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115052626 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114789402 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204874599 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213077455 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115254536 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107658421 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210591387 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209252461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115217617 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226263609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105139861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210756295 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115178553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11524973 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141689293 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115147406 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197536847 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120035858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115607853 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140388612 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192283007 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136480254 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187421899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13854911 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115799577 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110657272 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142797223 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124167294 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114144665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221838932 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117042005 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21107524 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211927272 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184361205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211419574 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124580599 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.216308061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207237648 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113764426 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108785071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142099018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185264522 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141782092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112013058 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201769004 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117618153 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.214065045 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186125864 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140309404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112826717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103359901 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140409834 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102337722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.205308564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116290807 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111852677 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146949181 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114409773 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114782513 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134155313 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12414581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113019195 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139030669 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121653068 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139906953 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118905581 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.2158281 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112718516 seconds)
  done (took 15.791626254 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106631884 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102635828 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106388999 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129841203 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103472279 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102611085 seconds)
  done (took 1.730415817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142939012 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116349512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152380453 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117939866 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168145994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.221330494 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224099126 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110717676 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159800734 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127814303 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220239125 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19617761 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.221936598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119960514 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225753756 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117165574 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225874498 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113422995 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153037886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114132569 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14156429 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121840513 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113078433 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213220077 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116140629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14570475 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110723947 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125145264 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151203902 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111426917 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120264793 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14360339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110440837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109914376 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.226598533 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.133973711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114642164 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120305186 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143295841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119425593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.224979333 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115355932 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122822304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145498999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112491385 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108824783 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145013212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111779166 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227825773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11948581 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118001516 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145630952 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118560563 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11787627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137334534 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110901198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144094478 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.201370901 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145517548 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110629485 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1176708 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145055076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112123681 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120565473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144826651 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121399261 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10853377 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14479232 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116158247 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116687896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146310691 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118326111 seconds)
  done (took 11.320143853 seconds)
done (took 41.432732876 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.619094685 seconds)
  done (took 2.694906055 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.914477969 seconds)
  done (took 1.990605282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.281749507 seconds)
  done (took 20.391119723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.528960506 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.61042027 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016832717 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154281444 seconds)
  done (took 3.388545746 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.049169387 seconds)
  done (took 2.145949471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296361466 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265420579 seconds)
  done (took 1.647259994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763414342 seconds)
  done (took 1.862666624 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.542168821 seconds)
  done (took 2.627050922 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355078281 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177595061 seconds)
  done (took 1.630493007 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.618884223 seconds)
  done (took 1.717167676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.908392095 seconds)
  done (took 21.009099138 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238221302 seconds)
  done (took 1.340354634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284754535 seconds)
  done (took 1.388204092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.821150456 seconds)
  done (took 4.926401547 seconds)
done (took 69.848953914 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114415722 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115258781 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115183347 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139897364 seconds)
  done (took 1.576804227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122505642 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115888113 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120080572 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144088276 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123665316 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115341181 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142702798 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119109449 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115199627 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145474242 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118126389 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114894785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145063232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115552522 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115211004 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145429282 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12076991 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115821301 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143800722 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119499734 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117729769 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143817886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121792067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119054748 seconds)
  done (took 4.12495301 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113326247 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106653488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10787199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132254371 seconds)
  done (took 1.56801484 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126748167 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129468018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15289263 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124439523 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127350654 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152949311 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116128041 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11319577 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142680386 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125523658 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133147789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156188421 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129153104 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117669703 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154724333 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110653906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116255134 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155794979 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124075769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125052772 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144940629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123326907 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120564159 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15318197 seconds)
  done (took 4.280391628 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190231027 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126213055 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.167278795 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160068102 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.1691584 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114245458 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.13695975 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147631699 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121121469 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116435833 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144558538 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162268844 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147832241 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117981885 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116039248 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146648399 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128419008 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121422854 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184874242 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120300272 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147741937 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128006985 seconds)
  done (took 4.222190069 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118889507 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106900581 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102283954 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135034162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118684833 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108457468 seconds)
  done (took 1.803757617 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107547849 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101591798 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101490793 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127667127 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106084835 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100839057 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099351466 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128368975 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101513803 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100394058 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127933683 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101516455 seconds)
  done (took 2.417542259 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33660377 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107914963 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136002358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.10989583 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112351545 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103353104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145187947 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106489578 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271702097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102185222 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142859871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197958456 seconds)
  done (took 2.986565754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203635132 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144475457 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298124057 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368460878 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165242444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186845279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268472032 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192841498 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207187592 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135517469 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245677573 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150892995 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177693192 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171689591 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165005062 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15564324 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19473696 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187725829 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174247191 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224562601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155741513 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191118781 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178953472 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175253254 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13299737 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18945062 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11659348 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123854788 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194187273 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189712191 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169673484 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173136686 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137481815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217748668 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257542094 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168560831 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312617605 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131450712 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197528375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.182993528 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255342998 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162847726 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184948023 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178834857 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125799737 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20438337 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150271359 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201545955 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12799276 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166988207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176356194 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198819922 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203453331 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134891134 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312972499 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161481793 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167121469 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167977939 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209305485 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21336485 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162805886 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147094864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179082822 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207661138 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202766786 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139358367 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19102011 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124469985 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190777276 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190876572 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205320878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154444607 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224038039 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157624135 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15454999 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197735652 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1762209 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202656523 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155700976 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143933096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146286845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158229103 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124556727 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191329666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145107573 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195217147 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155455763 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.335122247 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182047847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181936739 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155506639 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185019432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182948634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144184697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104113552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170999326 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161276387 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181332622 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130993974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181359481 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136254956 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124759611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176565295 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.118106473 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183887877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127127358 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189712144 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155913217 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155289294 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162580713 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172783217 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151159381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191710078 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179797531 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157074835 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129697659 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213260335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154696271 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.156123717 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176103302 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209580303 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142105937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161534415 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160638197 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212531738 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137188298 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212110806 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133524514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160768171 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139034658 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185559479 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155371001 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179011545 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125917674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.175062912 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194432517 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153042714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135599459 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192495522 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131885886 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120387401 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163116171 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13279357 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16454871 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14333101 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130514943 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17947099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15424875 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181347976 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178919522 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133308832 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201273351 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130242382 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.154467792 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173364073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116794575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199598168 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180020284 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154989077 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225172689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162466468 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214387464 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15508987 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158522179 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174369214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153648183 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117422445 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185411062 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151698644 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186892276 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17696295 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214496624 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193205108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148341745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173331423 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163207641 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.202633708 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177428867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141706891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154306487 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189892281 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118359873 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149827756 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126858276 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133676717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155429733 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132685087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201425148 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160837976 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208413956 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184263135 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135276624 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209512569 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123495799 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185163431 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162178155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164473219 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179324618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207465758 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16111043 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167029382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157155906 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147203854 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12405394 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129667303 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189064959 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130685905 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162660065 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13760424 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209542791 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196096707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145080798 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221628029 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191375914 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192771495 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.1457443 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162495876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194198086 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155685488 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179932574 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162901752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155551185 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206105766 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137413335 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213292086 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154213558 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188737556 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215756888 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152935193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155204615 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14761511 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185192928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13660726 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159963264 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172828648 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127277181 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179397228 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134527741 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149394735 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180429626 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168852471 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168837011 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187015824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192416014 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124752294 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138287489 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186049285 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141526322 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106827405 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195359315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21003541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143474434 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181542333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172542853 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156824775 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316248984 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217014349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20188064 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135016569 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137217475 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190355392 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157552117 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188105442 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202482843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140130729 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201937235 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158517892 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139386931 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156508087 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145920915 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177868983 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140616933 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157383276 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155694064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.165827582 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181990157 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164179818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15796241 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184636554 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145053528 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.140394324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168218991 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218244719 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155019101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199782906 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152691485 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193863335 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187381182 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148903017 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126137484 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128772988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206563693 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126462943 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187798139 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.201547474 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216909318 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161346894 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187715722 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137503002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123141185 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185546176 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1441583 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217540045 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160840807 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135988914 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217852507 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128863841 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12676659 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187903121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302809727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143120071 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200816024 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114556578 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295424896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126594626 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129511174 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190288781 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195949275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13142473 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179345059 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187454939 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139511583 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19136928 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132988012 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211888754 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215946745 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164398715 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198585765 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140379312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188456874 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155376274 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204399152 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139403542 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171814506 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158377531 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208927316 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208895234 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130357037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153884114 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185415729 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15360799 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197480066 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13290553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21714977 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124227809 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18944621 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134218693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151010136 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156396569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20496045 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127854863 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205888736 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185221455 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130360563 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12396226 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172190198 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154431792 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164054392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128626652 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209844034 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126323309 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187905143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177240772 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126340047 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183007391 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1425238 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156878189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13897325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168260723 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129586872 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168566651 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21001057 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129125936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205277411 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158749215 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191024979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181432528 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140673605 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667157293 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15539819 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179367536 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174426066 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185629504 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178689724 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158213017 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186582813 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145305377 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191598128 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143580875 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.262469614 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187833073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158039235 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128497437 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16670247 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136593164 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.158700822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151065569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183611213 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13957408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131698644 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.184109842 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13869846 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171710672 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137093829 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209905455 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146239668 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210414239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178556906 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165468654 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158235967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198733895 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127014505 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19245373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197955982 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139078517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144395643 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16029755 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134852622 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208083246 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122849317 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154252301 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187541832 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155041105 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18605726 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131564863 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189714948 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137888291 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186602667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12477892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177581621 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159133498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131004497 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.15425685 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155750445 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185666697 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1530107 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152225447 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171263507 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184469146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151128457 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130783571 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300457136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15741428 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217679459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138588522 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163051066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141203392 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18189481 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153524616 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187931868 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128216571 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126364555 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.157918624 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.166711135 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175006617 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157342773 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20346949 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157666601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219787419 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130610351 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.306489699 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136329239 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18601814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119030939 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124536638 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167784293 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131632774 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166690429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213393255 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179126616 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.17846689 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.144474719 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131398718 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.152519201 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12911472 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191129597 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151464759 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184185874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143693313 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105967512 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169434737 seconds)
  done (took 83.343704117 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17604999 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152222021 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168451773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221171782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195594711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29039854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228439462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253585232 seconds)
  done (took 2.877996261 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119832495 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158254545 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138529192 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144342111 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117622641 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.446233101 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157123301 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118739118 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163052862 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158742816 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.1418432 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.622677326 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.112495541 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144435399 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128618987 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117409324 seconds)
  done (took 4.179813064 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.608664409 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60166836 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.496550327 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28491258 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236186805 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.18109134 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.826571199 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.710909177 seconds)
  done (took 14.151094389 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146043958 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135538846 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.317232096 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.262874352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149214854 seconds)
  done (took 2.222158939 seconds)
done (took 130.845583326 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122966079 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121589806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121628238 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154647347 seconds)
  done (took 1.715870945 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.18301668 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093272107 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095476423 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120954265 seconds)
  done (took 1.698133178 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.443726721 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092729984 seconds)
  done (took 1.769403832 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149032895 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142634867 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166400643 seconds)
  done (took 1.677194141 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141651523 seconds)
  done (took 1.350672639 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.131130181 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118698318 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.239642647 seconds)
  done (took 1.701817493 seconds)
done (took 11.126057191 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119030177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413222826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432818051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13396014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707779578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426645581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027158042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174009106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17336832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137617251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132409336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68639202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0460636 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.362535352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005175354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.391633976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694533703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109305203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145824016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110855684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008372796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136280239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110815971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110517229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72073414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419668958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106980319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.404039076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108059548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11209899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427241704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10951087 seconds)
  done (took 17.403855363 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117219154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170494179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146792821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110611307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112066701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139747764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12086786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120189826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204332976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107637109 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161740603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108303143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113394939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138051651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13553059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107772597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140074749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11215369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116048973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138652992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132737154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107261562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138663557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11184315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107787834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159775162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109812484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120582084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136388357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113783006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113207006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108790265 seconds)
  done (took 5.297543711 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157002151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177614523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147467535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14658294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184552627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111193154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221183777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146985762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202852268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110052709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131226553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137387292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149485857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109161426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165819278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109209537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111099897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140321256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11783104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110436836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161347838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108524319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110116703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140695285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110082515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130702581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139613169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121181125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107694302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14357181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115506306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108815813 seconds)
  done (took 5.603292799 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124336063 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124725629 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132768421 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162782319 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119430097 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123601992 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15615185 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120890123 seconds)
  done (took 2.284808165 seconds)
done (took 31.799770661 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137369404 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127372137 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128268855 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152366163 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193640239 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147232025 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12721143 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114851114 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153159146 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13159443 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108368794 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115268356 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160041353 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119708491 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.225531871 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123574351 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.23085327 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194838134 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146407256 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124136896 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116845233 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231350401 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120846118 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146287808 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.203533738 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111510646 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.217209251 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11780378 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148842936 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111085548 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225107809 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120838012 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115198839 seconds)
  done (took 6.155439084 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210221268 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118442132 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149265619 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116820493 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118423657 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147748895 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.2132982 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147351637 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118006908 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116624608 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116249887 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226254858 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122341461 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144386279 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.11930345 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113421101 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245028836 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118585009 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108888031 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125438069 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114472747 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117425131 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257088669 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112388387 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116439359 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149163592 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120292936 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121027028 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150794237 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118848323 seconds)
  done (took 5.502058076 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124554457 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130947143 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13397354 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212003193 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143599822 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16047515 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14046756 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132245843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171796655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111622304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125104071 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178724615 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127590217 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120900741 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14667396 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130966317 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134210655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143185935 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119938879 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128204179 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1618067 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130091818 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137661617 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149861115 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109981551 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11801442 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152171362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.1266035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11889484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154849926 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113669903 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114852615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141442776 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148077467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112220461 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154441268 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136884887 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122466548 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155644274 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.141714228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114359785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144254772 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138287459 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167216245 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142749763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124635656 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121832169 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155911383 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111350253 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12807046 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182719464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112305775 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13097199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142196194 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110671567 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118751788 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111257794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146385306 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126250833 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114118944 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166903949 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119062383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120711879 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144667886 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122658948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109711206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140912918 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117471553 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137753341 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147614823 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149508649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111249881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12243391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157054192 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122981979 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122091596 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14219969 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122434373 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120952494 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148208666 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124882482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113244054 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.144416578 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130647658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130874565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155545582 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124665268 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124799434 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.144783058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11467787 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128263693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111986902 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150117188 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124391289 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111018094 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146694629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125023487 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121525615 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140787232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13756342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114366048 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.140833871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137724701 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116429169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146662058 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122714262 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153923491 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.141346296 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123937491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124567532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.14118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120906193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114910293 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110210203 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161674762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126899811 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118092799 seconds)
  done (took 16.867377396 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.325379718 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311837522 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179442837 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311418523 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156535186 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208182123 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307621668 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309156555 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111472686 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181576035 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194867217 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.24844457 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144458733 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139994832 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31234154 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363232499 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173114034 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149749023 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180321689 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125741372 seconds)
  done (took 5.679000783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132931328 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147091282 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166303383 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141327425 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121965882 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157677991 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112402842 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133488877 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.15431178 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12296822 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114712964 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159731514 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125196639 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127845964 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158464105 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152522603 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119825273 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147976074 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134727488 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116092662 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135747878 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138503213 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120959246 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166726486 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131528034 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123115898 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141958705 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117956436 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118911462 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151032757 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118300448 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130465513 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148266758 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107918396 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123745893 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128837089 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14920583 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11565585 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116445107 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146150606 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127485684 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125326633 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149728167 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103490123 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132044469 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114164617 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155049381 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125565846 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109344206 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129315125 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156891858 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126817178 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118144815 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165665237 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119518248 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128800016 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155062795 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126933439 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116963634 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141124579 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112638035 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116641114 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15033119 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129220096 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123652557 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161560793 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130618523 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112408621 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.14601914 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118088583 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116826546 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125804774 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166556453 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120749999 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.118559791 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156181893 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121364585 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097604299 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.15175915 seconds)
  done (took 11.739588392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139511643 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121849187 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130312019 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180064135 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124939058 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118449045 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152446066 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133223449 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126244554 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161908943 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127209598 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12576877 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166364304 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121837191 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119407438 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159803096 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125737352 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149880417 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162841594 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13966759 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125581556 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152331547 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125879308 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123293388 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174867735 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123690564 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137920547 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158651072 seconds)
  done (took 5.157387886 seconds)
done (took 52.321542389 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.383031045 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.591082037 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.352652901 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.349479167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.345908936 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.383990232 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.347306526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.34851124 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.024302058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.325792681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.34874225 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.348520337 seconds)
done (took 30.396492587 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.428404758 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863102971 seconds)
    (2/2) benchmarking "String"...
    done (took 1.633438736 seconds)
  done (took 4.736314177 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.339289048 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.341519161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.577157721 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.337864943 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.360067115 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.344329105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.34679358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.342349455 seconds)
  done (took 16.887511509 seconds)
done (took 27.63170552 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.412070654 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.525557881 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.585540048 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.337613922 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.362198211 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.35380325 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.343014794 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.366418349 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.350495401 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.353747053 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.781686047 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.598501906 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.343671908 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.710711695 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.345183318 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.353234365 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.357132057 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.59723225 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.342718076 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.379936274 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.324014162 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.333001213 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.360286569 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.341714162 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.3506331 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.350024594 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.403998722 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.341241503 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.55018128 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.378358594 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.380840317 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.347555046 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.397278842 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.358197442 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.343758591 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.355540138 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.541092125 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.356080787 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.323942351 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.351328878 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542643333 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.367768469 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.350591641 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.355690775 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.346381619 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.421340281 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.32459253 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.456742592 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.375370658 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.353553067 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.360966268 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.747351209 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.361113824 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.347666646 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.350186393 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.575145694 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.366654444 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.411858084 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.371007469 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.35393419 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.353204106 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.346974682 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.38812042 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.348069834 seconds)
  done (took 153.108459612 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.341977747 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.345137671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.343282409 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.347674702 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.342965758 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.343415665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343543144 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.341992771 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.342995925 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.36561316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.345035842 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.344162621 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.349364021 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.318158501 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.352399325 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.360117866 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.347829013 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.343504988 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.368642197 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.345822513 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.368431637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.342158565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.363986912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.343085223 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.348925606 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.428689378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.360954764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.353010814 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.354110859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.345987779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.352455201 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.396342108 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.013239353 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.215910987 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.354989944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.377901344 seconds)
  done (took 85.497029125 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.346970337 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.346128685 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346416403 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3824419 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.349786146 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.976831977 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.979907771 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.064777119 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.359972967 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.878478827 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.70208362 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.351200157 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445672909 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.360967389 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.349581331 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362415007 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.373230966 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.347861703 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.347715621 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.977542448 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.363509378 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.346901411 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.536284039 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.365617889 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383604248 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.749555158 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.347611246 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385628424 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.691982198 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.402277337 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.348235565 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.772407727 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.559337578 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.353557754 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.465837814 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.350851455 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385165007 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.351315912 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.636766449 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352394242 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.34777596 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.352392483 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.071443372 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.351764666 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.980535185 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.352066243 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.336942111 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.349470274 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.34985526 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.393495389 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.100516615 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.344236247 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.345422694 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.349503191 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.344451942 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.343892286 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.381446683 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.43875226 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.448735925 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.350415727 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.351225782 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380644162 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.351097038 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.416987003 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.346369119 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.852707067 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.404303897 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.583569464 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954192715 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.347703789 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442631341 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464198406 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.342782975 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.344049344 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.340278608 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.341040611 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.45369875 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.339288343 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.774139891 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.525375205 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.359324215 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.818257309 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.442485826 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.341198795 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.340129697 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.744880609 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.34190923 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.338724077 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.105011741 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434767368 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.339021818 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.341487673 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.33852281 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.769207189 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.940834066 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.631323967 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.343973346 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.33983929 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.563329061 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.34248302 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.783112709 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.931823486 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.343411057 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022197386 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.338924552 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452346931 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520924762 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.358148642 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.339212101 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.785099331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.344243061 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.400792271 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.340992686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.743041279 seconds)
  done (took 382.658347668 seconds)
done (took 622.501781716 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.212439691 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.16107336 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.312796118 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.173057834 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.147062361 seconds)
  done (took 12.243289583 seconds)
done (took 13.478692214 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540068555 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545100565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.410640558 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545722566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377689781 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560198386 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.527847616 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.366914665 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.454421957 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.430291279 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461432747 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.400788245 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.378141861 seconds)
  done (took 20.237440237 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.650246303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.354076187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.413714289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614815138 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389531445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.63177192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.669939018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.355061709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495143151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.364003777 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36283713 seconds)
  done (took 19.542187926 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.629691938 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.354391453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405748981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.626894807 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.389584373 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.646974642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.6791192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.354689021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490259183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36653107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.360668058 seconds)
  done (took 19.545127245 seconds)
done (took 60.563413329 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.381661544 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.444156135 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.378605282 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.365026117 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.358694645 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.360550436 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.364320933 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.358544849 seconds)
  done (took 12.252586446 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.358954171 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.359293763 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.359214455 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.358197613 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.35777231 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.360104407 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.360486788 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.357694937 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.358896518 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.358287084 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.356969489 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.360067856 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.359209106 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.360353234 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.359590419 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.359169721 seconds)
  done (took 22.987181789 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.361968337 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.358799738 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.359617531 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.35969256 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.360184391 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.361176789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.361486467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.361490048 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.360422173 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.359514798 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.360898602 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.360139033 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.359839433 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.359451051 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.361237027 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.36133423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.359776262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.361156473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.36480174 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.360448675 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.360132897 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.36147593 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.358600651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.359864512 seconds)
  done (took 33.896684776 seconds)
done (took 70.376132558 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.349666395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.350106749 seconds)
  done (took 5.943502622 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.422247281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.419374763 seconds)
  done (took 4.084802828 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.363978487 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.362100565 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.360810364 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.361608855 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.36259055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.362845476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.363279927 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.362155049 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.361793425 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.362406011 seconds)
  done (took 14.865750159 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.362641035 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.361096747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.361162633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.360809086 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.364297929 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.362478408 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.362668439 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.363542693 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.362550298 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.361270211 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.36145641 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.362263782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.361034189 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.360509914 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.361348811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.363826637 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.362917575 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.361653952 seconds)
  done (took 25.760999226 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.374644961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.382314784 seconds)
  done (took 4.003791036 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.500923007 seconds)
    (2/7) benchmarking "second"...
    done (took 1.403543726 seconds)
    (3/7) benchmarking "month"...
    done (took 1.477679568 seconds)
    (4/7) benchmarking "year"...
    done (took 1.470338496 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.401937059 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.37994163 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.403898797 seconds)
  done (took 11.281272988 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.361438306 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.571140574 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.70672416 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.885195537 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.361833532 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.362123215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.172192862 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.364977958 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.365965991 seconds)
  done (took 15.393338164 seconds)
done (took 82.57588346 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.344896021 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.398805769 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.375292669 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.37751237 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.698381865 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.369370956 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.350902635 seconds)
done (took 17.159551557 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.340181528 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.335251239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.33151001 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.36149588 seconds)
  done (took 10.611101832 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.347184236 seconds)
    (2/2) benchmarking "read"...
    done (took 1.640450939 seconds)
  done (took 5.228476629 seconds)
done (took 17.081895624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362301498 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.361406217 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.360351812 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.359927442 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.360812567 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.361259001 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.359681013 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.360861261 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.361821845 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.364229775 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.359668268 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.359836708 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.358480763 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359325296 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358483131 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357298085 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35892625 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.359936998 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357318914 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358250003 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360481458 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.35732868 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.359681911 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.360796017 seconds)
  done (took 33.880049118 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.35984326 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.356680877 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.360089293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.356666158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.358638237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.35774581 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.36006425 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.358300175 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.356726493 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.357183357 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357138202 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.358978526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.359835513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.359941142 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361272845 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.3584828 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.357834906 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360989658 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357155084 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.359844391 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.357003381 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364068928 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.359506732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359165411 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.360175187 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358660733 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.358100672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.356562219 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357507367 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.36006127 seconds)
  done (took 42.00962441 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.362326336 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.362598807 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.36070098 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360523901 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.359250905 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.361549583 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.357458903 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.360501976 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.358097059 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.358439691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.357785153 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.3592242 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.359421226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.357825322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.359659845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.36126694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.358371363 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359712686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.358946018 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.360617494 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.358216909 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.356893211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.359692387 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.359955632 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.361509911 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.35819693 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.361473239 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.363094531 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.359544526 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.3597512 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.358202688 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.35864324 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.360053051 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.359475446 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.359914636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.360132619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.363684471 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.363707483 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.362061304 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360971736 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.358236844 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.3593138 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.360336509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.361173791 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.35909413 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.360401429 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.359010845 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.362128364 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.362066107 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.362098517 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.362655455 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.36317796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.362821035 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.362113964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.360151466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.36174731 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.361351827 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.363206537 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.363415142 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.360243815 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.361125024 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.361253397 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.362046139 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.360029165 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.365580792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.362152703 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.360609131 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.362423344 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.363737378 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.364097483 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.3621424 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.363454726 seconds)
  done (took 99.209502843 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.36553855 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360695534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360529372 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364892444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36408025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.365036368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363016401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36146385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362432869 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363359483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365040478 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362945402 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363664215 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.366478732 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361399917 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.362322208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.361819882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364071098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.364865409 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.362860826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363083149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.365412192 seconds)
  done (took 31.231280261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363051033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.36411221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.36409029 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364348469 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364664633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.365346908 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.363113309 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362618446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363606689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363898725 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362910035 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363932065 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.367346527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362539471 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363520081 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.36409685 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363850722 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366332499 seconds)
  done (took 25.792445221 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.364542578 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.36447278 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.362653883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.36230328 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.36434966 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365721199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366096923 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.366177566 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.362808414 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.362466176 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.365115706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362377989 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.363774235 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364913123 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368713901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365350013 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.363430376 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365784706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365166865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365884576 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.363779811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.366455577 seconds)
  done (took 31.260490192 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366710877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365174337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.363635635 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365683729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.364491019 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366701081 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.364211501 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.367010574 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.366101053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.367221113 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363193833 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366671247 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.366816955 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.363191343 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.370552783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363831231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.366264943 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366052877 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.369276181 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.366185388 seconds)
  done (took 28.560540999 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367077347 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369114161 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.365106406 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368264509 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.366372246 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367436862 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365107644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367629868 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372598965 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.366581222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.366027802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.370057503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369766526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.370821762 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371467242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369940494 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365622267 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.367339883 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.365735923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365413715 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369532374 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370375687 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368843671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367849482 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.365987815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.370061342 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367349537 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368054428 seconds)
  done (took 39.546973002 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365535822 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370029931 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.369518488 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.370170489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.368139734 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.365080777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.367646064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.367131951 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370509037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.364406528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.369096981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.367057644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.368721624 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.36871176 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.369173856 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.371597912 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370598752 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.366617035 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367379354 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365361956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.365241778 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368377933 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.365577767 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.367048793 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368187073 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.367353334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368226008 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367414729 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368523246 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367288957 seconds)
  done (took 42.279511783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.387974595 seconds)
    (2/2) benchmarking "in"...
    done (took 1.387048902 seconds)
  done (took 4.018358078 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.36600479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368956155 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.366893493 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.366183361 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.369552957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365845362 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365692235 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368653226 seconds)
  done (took 12.17712784 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.359422928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.367465324 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.37058224 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.369593711 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.365063195 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.35933542 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372001505 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.372941597 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.362865681 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.361808167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.366581397 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.36417382 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.366421562 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363371807 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.364181459 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365285574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.369443327 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.371244513 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.370690478 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.370503427 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365663391 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362733241 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367425649 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.372362782 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.363312687 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.36971575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.367943337 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.373723272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.360396564 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.366338934 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.360367 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.374578461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.368970133 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367560637 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.369529353 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.369749133 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372918658 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364419766 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.36934815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372135111 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368363574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.368148412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.361189071 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.362487959 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364098264 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.369458764 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.371393173 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.3693441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.360683723 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.362811332 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.370428515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362959225 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.368699785 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36462669 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.365191034 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368435168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.37110426 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.365279979 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.366441902 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.374497145 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.375552644 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.374433456 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367315624 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.373563198 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.373575399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.380797049 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371469127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37481087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.374405657 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.371053474 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.373754531 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377738669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.375456506 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.373304281 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370252027 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.375375544 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361196034 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372566949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.371396445 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.370214943 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.374705052 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372528825 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375410116 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382382463 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.362777433 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.372362099 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.369352719 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.370302163 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.364640816 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371240603 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.377560301 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.373023322 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.362849179 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364014888 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.364195818 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.370172313 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.360355976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368253212 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.372381598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.372008496 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371684363 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369623522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.369380444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37494625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372896576 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.37242126 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.375381652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364168374 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.372635389 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.375325773 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371521452 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364094334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.37094198 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.37210866 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36921737 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.370977534 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.371489686 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.364456725 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.373383857 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.377720304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374375423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.382241599 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.376029646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.37388677 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.370105192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.374860234 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371745647 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.367149102 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.371858835 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.374995599 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.373261956 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367899473 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.375837665 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365986897 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37422517 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368659284 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.374933249 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.374773643 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.372341646 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.367685328 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.368946196 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.371302444 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.368985122 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.371442139 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.374567903 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.367517771 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.373993298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.366795876 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.371151527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.368480406 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.375396526 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372784726 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.365689896 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.374218314 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.365393743 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373359518 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.366111773 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.370948807 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373514409 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.373688984 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374899089 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.365884584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363946471 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.373547061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.373237924 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365375218 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.372199069 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.373076501 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.37147654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.36553649 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.373096458 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.365755167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.365203255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.37766235 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.373335229 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.371761815 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.369027419 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.374137592 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372291926 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370254712 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.368938505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.369112658 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.371570828 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.371785001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375131313 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374664321 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.372953822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.365859963 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.365720643 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37322639 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.369537556 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.382675165 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381328869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376630875 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.368017085 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.375984538 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.364691472 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.371359991 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.371546718 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.379164146 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.372801306 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.3699613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365417592 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37596193 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.366532241 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.372808887 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.364386314 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.377372027 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.37459124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.372261143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372045993 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.367559757 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367563805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372228106 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374158779 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371834244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.366598709 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373888826 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.366344971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.364865146 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.372665202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.373916277 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.376405165 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.37404756 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367432357 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371910285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.370925414 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.366157826 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375012389 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366903385 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.36956967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375777974 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.371416647 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.369260104 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373886398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.372645293 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.368743397 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.371255052 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377654083 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.374570068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367686302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.378375736 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.376117389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.374822255 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374805338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366818074 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.373494155 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.372258156 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.376423835 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.36760971 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.381756758 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.367881591 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.374577687 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.367052606 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.369296205 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.368444821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371385274 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37747193 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.375569217 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36747531 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.371369129 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.373821271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.373840183 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368890034 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.378042843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.373784354 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.372250384 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.371844485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.37042425 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376065137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.367160819 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.374701607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.370065434 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381312538 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386669595 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375906525 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.373609005 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.375831409 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372430224 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.374951336 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.369645796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365886386 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372112374 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.368052784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.370209336 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378598155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371028706 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.379104464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375480041 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.372861551 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.379243171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.378591151 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.368796435 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.374817611 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.380461614 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.375059101 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.366755342 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.377576249 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.370296773 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371947779 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.372083739 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.371826538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38126273 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374724496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373876047 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.374115282 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.371585442 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.370330987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.375857957 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.379397208 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.372433595 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.378458557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.370655004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.375425562 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.369931572 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.379926488 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.383632134 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.37610038 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.383064742 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.379582615 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.371176818 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.373568139 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.378230434 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383365078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.382285982 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.370671367 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.377570699 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37534139 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.378347914 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.377906605 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.377518459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.380773147 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.380452396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381976531 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.376929568 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.375883822 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373393302 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.383211132 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.378487051 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.381249689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.372844654 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377894003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381779396 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373616746 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.375221073 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.377978136 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.384964706 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.381239538 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.382177526 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.383712572 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.384573427 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38334518 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.381144651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384655444 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.381975703 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.383127718 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385895133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384443369 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.38294451 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.375861011 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.383652366 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.383679118 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.377799637 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.376651799 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.377138402 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.382855303 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.375757595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.385476953 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.38199534 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.378767852 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.379045759 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.385445575 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.375891554 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385016699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396274789 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.377573938 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387216197 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.384817487 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.377998413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.386385398 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.383096416 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.376780171 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.379060281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383664813 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388264548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.376291256 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.385045132 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.378292791 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384515123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.384785659 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.384896792 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.384119431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.384954991 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.379931772 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385004473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381361149 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.387391056 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.378763534 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381665139 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.378930095 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.386649946 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.388012757 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.379747057 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386044745 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.386034438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.376929552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.376865353 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.386545858 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378787954 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389102308 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.380980073 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381676404 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381647716 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.382565619 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.380376619 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.384629854 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.376915473 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.381873807 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384725506 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.385088611 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385246281 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.379043331 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.385826335 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.379844898 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.37967674 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.387296349 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.37968835 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386664292 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379654463 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.383322234 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380305339 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386234053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.388556143 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388334654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.378541315 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.379499637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.390351456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384276242 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.385484029 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.385429185 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.389315019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.381469814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382491583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.383788398 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.380946178 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.381393809 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.388326702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.381067327 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.382584112 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38160474 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388486348 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.388562039 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.384516549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.383067301 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392970673 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.389340007 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389675411 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.381660977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38379106 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.38382166 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387726139 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.387274815 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380635249 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390130789 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.387818155 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389580742 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384453954 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.383565071 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.383468549 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.390581192 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389996855 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.382201256 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.39131434 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.383613027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390357931 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389348658 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.38857715 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.380777752 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.382589852 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385406692 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.386891004 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.389757709 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.385887829 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.387983289 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.385015266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391414195 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390016395 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.390602137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.390049478 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.382848134 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391133991 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.382734527 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.387326768 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.385834062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.384769377 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392831197 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390657027 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386885094 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.38865404 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.397076493 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.392344807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.383622006 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.385268906 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.387713707 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393663981 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.390053255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385859758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.38680425 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.394297057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.39132201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392279792 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.387407344 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397728072 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.397445793 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386372086 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.38583325 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388385552 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.394432807 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.392964596 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.391352489 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.388141293 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.388077303 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.39453699 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.393857497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.392233641 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390713599 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.387464255 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.395592616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.388005492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38932175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.388745927 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394590359 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.392967284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.391233467 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398218707 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39642755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393515083 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406986399 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.390712192 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.388945285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.392565906 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.387405727 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.394018242 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390741673 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.394338875 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.394368886 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394272003 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.395064082 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.384499613 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392071249 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.38975771 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.396090119 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.394870164 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.387238747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.387895026 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.395924053 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392790808 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.396414399 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.39496294 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.395329438 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.394715003 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.387217435 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400696601 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.402134251 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.39692017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.395111447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.395816593 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.393440454 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.393100158 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39386837 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.400486904 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.39551858 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.395355355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.391145844 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396015433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.398017736 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.389032626 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.389494129 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390418459 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.397754498 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.400111262 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.406240121 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.397557921 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.392238771 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397588988 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.396521042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.389968322 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398128409 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395922874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.392807458 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.392404484 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400885577 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.398364169 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.396889916 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.392999689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.401230277 seconds)
  done (took 822.812217473 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399530674 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398599008 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397372941 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.397391124 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399389627 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397565577 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395921449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.398621298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397752566 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39762787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.398326395 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399499802 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397799596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396344951 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397565422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.398655334 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399445991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399432187 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.399426644 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397920846 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.399368134 seconds)
  done (took 30.636553982 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399199076 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.397089836 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.399135598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397739345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399626056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398834745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397943207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398391571 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400640173 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398051598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.399587562 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398727207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.398869225 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.398897099 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398813908 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400753136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.400046485 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.399628893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.396001811 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400583917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401019244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.399793044 seconds)
  done (took 32.053151828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.399704261 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400306941 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.392319962 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.400143313 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.401850667 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.400458142 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.399746183 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.400631135 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.401727544 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.393813728 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.393221171 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.394285511 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.399104045 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.404623777 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.397082543 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.404090877 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.400024377 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.400349064 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.400660253 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.400364744 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.399502061 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.404286781 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.399428366 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.392963131 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.402466725 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.401270024 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.40156448 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.398847517 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.395311259 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.403080823 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.398121264 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.392382523 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.397138184 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.395062901 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.393708144 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404021693 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400663193 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.398601249 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.400822389 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.402504098 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.416565318 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.401902517 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.403785728 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.406802672 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.403971378 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.393993081 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.405165088 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.402530128 seconds)
  done (took 68.472224793 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.403556243 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.403422966 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.398252037 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401720967 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401254124 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.403759536 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.402505119 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402954543 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.403054993 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.403728136 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.404693323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.40328891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.401475464 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.403670012 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.401949509 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.404142493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.402770664 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.402612842 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.405314606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.401680807 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.400729026 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.400450049 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.405037536 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.403212375 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399744232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.401509067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39937496 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.402120485 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.400429195 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.400304606 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.40323765 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403911641 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.401066624 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400089398 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400420717 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.404292382 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.403092473 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.403527934 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401086713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.402124362 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.400761192 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402314021 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.406259912 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.401396855 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.404230557 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.40055638 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.400335066 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.402093042 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.40377939 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.406537995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.399876168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400674432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400521299 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.398810157 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400384867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.400901073 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401086413 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399197235 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.399086868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.399137058 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398359235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.399238963 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.39880254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.399626465 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.3944788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.398704829 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.397575001 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396921566 seconds)
  done (took 96.582443428 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395437768 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.393975033 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396018782 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394572481 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394505847 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.397180311 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393641301 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.393642776 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.395873876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.39431208 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389818633 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389854857 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.389625607 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.390416986 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388203873 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.389913927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.391070434 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.383216233 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.384634976 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385917614 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.385355636 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386166915 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.385195209 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.385978736 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383202253 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.383126146 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383497396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381837762 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381922697 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.383180677 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380911595 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.380538626 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.37914034 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.379435724 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.380088044 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.378754383 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.378035545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379265133 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.379064859 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.376406812 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.37504383 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.377010656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376276358 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.376418069 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376968331 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.377128563 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372447847 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.372922691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.372065128 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.371240837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.372186703 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.372248152 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373084831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366741543 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.368259517 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.368738026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367501129 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368372815 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368820777 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369466524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361863409 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.364001015 seconds)
  done (took 86.901116641 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363075852 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363870728 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.363393025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.361331773 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368321257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.361161943 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358986489 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.359144398 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358663184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.360276404 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359629541 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360032264 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356099935 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358255268 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356237473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358154953 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355598714 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35953312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356252951 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360555929 seconds)
  done (took 28.432507816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.358771602 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.361025309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359899771 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358780466 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.359775129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362344459 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.357568237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357672302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35719745 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357621338 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357155887 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360042591 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357793763 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.359573303 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.358055732 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355974016 seconds)
  done (took 22.975880394 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.357115626 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.357168191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.354613138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.35846444 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.35509038 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.353280499 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.35391317 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35239854 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.353721688 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.356412706 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.355942923 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.352763801 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.354551719 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.352534803 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.352781639 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.353263877 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.352587806 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.35254148 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.353171675 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.35071039 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.350954468 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349832803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.350464644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349581165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.351019992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.351461035 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348781159 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350211504 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.347817398 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.347040265 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.34938301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.349920378 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.346442853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.347459048 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.346487468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.346706744 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.347718767 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.348360356 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.34819393 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.347211288 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.344653072 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.345270202 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.339866019 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.338427755 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.338601222 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.340167937 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.344865881 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.340182096 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339581143 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.337216097 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.339752176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.337543646 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.340529094 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.341713159 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.339942454 seconds)
  done (took 75.400051434 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341121611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342486178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340679843 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.344476916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.340822474 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.342412735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343721878 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.340543852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342958232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343141576 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.341918081 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344479467 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343433662 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344273908 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342536584 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341467325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.341742836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.344021059 seconds)
  done (took 25.386103375 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341861522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342574635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.342178145 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341749961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.336201358 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334882709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338310337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.337183371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340662462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.336916227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340133949 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.339500176 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337675381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338361547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.339413564 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33754587 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.340118035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341032137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.330097212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331743261 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332551286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33256414 seconds)
  done (took 30.65646903 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.325948983 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.324782188 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.324193531 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.343340506 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.340388449 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.327144013 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.327058904 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.324923857 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.344737186 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.363206768 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.355940526 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.336651196 seconds)
  done (took 17.254480369 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334400686 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332383563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330159085 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331106125 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333009622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332125092 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334263872 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334404587 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329191392 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337707927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33403579 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333041141 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333357398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334248928 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332851482 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332422957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334332516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334560756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334159342 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335634128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335837296 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330647753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332396635 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335418759 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331668012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33533058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333350855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334283407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332147696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334675606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333817976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338334544 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334260148 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336218767 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330660995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335604025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333036944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333814503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334109655 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333507969 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.332634188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334043905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332546645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333167823 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333650454 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332938851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333794154 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334400367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334332981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338567745 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335699661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337900212 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337632514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337903048 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335253076 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333972273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335040714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33632301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334605382 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333729506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334205226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337229318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337153862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336504323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335267314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337213394 seconds)
  done (took 89.275660577 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334435244 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334746496 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335068841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341656497 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335644245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335561573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333830198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339284426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336511449 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338792411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338088441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333455945 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337360796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337108423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338822031 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338193336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341200425 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339278159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33880876 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338894493 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337093268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338525744 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337452224 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338439976 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336103899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339508964 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340508011 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337548976 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337129728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340906655 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336275282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338079609 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337334192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342599324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337859834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339430947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341891826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339003096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341610026 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336930336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338503087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339369745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338400985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341706878 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341115589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338676744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338777335 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339446722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342552203 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341304893 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340729052 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342216883 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340638254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341220786 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339823847 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341995921 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342091495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341656751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342174686 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33875155 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341578958 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341407358 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339635733 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340123555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340048672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343956047 seconds)
  done (took 89.597543316 seconds)
done (took 1907.643555537 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.49747283 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451276247 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.332800317 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.342112254 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.335211215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.331841987 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.343115037 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.331756261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.333240336 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.333073729 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.334372992 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.523376759 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.367226324 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.333857536 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330133732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.428504559 seconds)
  done (took 27.173377011 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356015586 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343242726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445688979 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.341433765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.360322228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.522683689 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.395951327 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.344672516 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501681348 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356534691 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.329682761 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.362779211 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.340267994 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.329064963 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.359446309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.522414341 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.580723798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.338244076 seconds)
  done (took 29.353997598 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.760120688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.34885579 seconds)
  done (took 5.33342724 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.359013508 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.337212706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.336640833 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.334263187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.329946074 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.332956542 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.335671667 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.333737304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.338770074 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459725335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.342742496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.346120566 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346380668 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.339385725 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.344935593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381750085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.524404598 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.343794204 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.344195118 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.342309091 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.33406716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436774153 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38357724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.350042823 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.456227828 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.333881549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.343277029 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.343709257 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464052313 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.346751737 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334053087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.338664081 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.339402606 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.330566887 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.773143262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.336571591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.360875942 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.345134154 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.344008942 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486496348 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.338686067 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.341539936 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.335333627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.768591061 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.476197663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.458843981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.359301371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343926846 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.341653722 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406141039 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341986181 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.341277389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.395133827 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.163009355 seconds)
  done (took 85.578906743 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.379267316 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.330157391 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516739386 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.351752245 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335401152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336336829 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332570961 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.607895918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.384219261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332645524 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.638387002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889961638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.346355633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.427677117 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.309576464 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.441156202 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333727037 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338539952 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.336873668 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.338407782 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879781276 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337108665 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337119562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.427251109 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.371347628 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.861270548 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.345174789 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.334762107 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336685941 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.33349061 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841103323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.340780889 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.405851072 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334299632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.600203614 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71581608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674745971 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.339266649 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355336226 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.336399477 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.352714752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849672938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.693319819 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.333844737 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333592668 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.849162711 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332811323 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.341001945 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.344152615 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587826479 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.334766655 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.334315861 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.343476964 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.349392907 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.333606574 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347005782 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391800872 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.858931605 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333594314 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333821233 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.37189528 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334944318 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3411202 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33751772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.349525227 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700177036 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526420612 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.348315442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.696021971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832740077 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333803788 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.902126729 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.338137631 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.346340518 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.338350711 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335962753 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.351059784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856054433 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.374069117 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.335531285 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675128758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.33759299 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.62515517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.355023623 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.335082782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906315743 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.34868788 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.338384525 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.334393642 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.338974128 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.336479984 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33960676 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.60759544 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.365284074 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.335266498 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.334322992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.354529492 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337005629 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.351427648 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.336459291 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899749123 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.34501885 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.336736353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341536394 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333254267 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.337134221 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.334035003 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.335114437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.604280156 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334288632 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.356399745 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332486342 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.331504256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.330903493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420639163 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.33625369 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629149495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335779131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332238675 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.337681482 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332991985 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353937364 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332508579 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336320164 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.186877274 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.633770315 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.351469252 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.331214549 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333588241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331893789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333124681 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333091962 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.410442753 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.335919243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106431981 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336321161 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.358606573 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331869144 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.336857834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332834878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334238759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331956551 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628015012 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608876603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526944183 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335860983 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.334405244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.09297626 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.390246229 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512569989 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349793268 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331896509 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.613190312 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.536632294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.334201721 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.331727227 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.334516151 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593053506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335140923 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.651497081 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870811482 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334616971 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.338817655 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.116112111 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035945997 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.337101053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.333986569 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615165263 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.34999771 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.33244625 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.331555214 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336790291 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.33331845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338153408 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.339176498 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.333881784 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.33313968 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.391262824 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527109573 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.349406852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335054648 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855233628 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.384365541 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337524732 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339938585 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.337573724 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.332834398 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.371310663 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.337228826 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.352141157 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.33512364 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.340504868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883587413 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.334405578 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.338339227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527431846 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017526512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33766384 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335109401 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333791325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.298683998 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889478052 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.40569484 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634884252 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.33764882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373654173 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335767019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.427969756 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886616432 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339940956 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334609855 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998323724 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.336422494 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.849513018 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.33584433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335463135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914882909 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.338250926 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.335940788 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.335352735 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.357720342 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651432002 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337227065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.338937108 seconds)
  done (took 498.642022802 seconds)
done (took 647.300383333 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.336105217 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335175074 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321025684 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.339893521 seconds)
  done (took 10.564642337 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.353562191 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341709904 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.351382718 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.342299944 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351609608 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343179535 seconds)
  done (took 9.317138555 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.335610852 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.341445512 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340771663 seconds)
  done (took 8.251303451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.550055718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.357312055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.689102344 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339903854 seconds)
  done (took 9.169212512 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.351535226 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.351133933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.351023478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.352961503 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.353968136 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355057652 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35297864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352561677 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355055129 seconds)
  done (took 13.408156742 seconds)
done (took 51.943040553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.095521603 seconds)
    (2/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.345935057 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.40685281 seconds)
    (4/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.457816572 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.34246211 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.994321088 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.376053633 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.448588638 seconds)
    (9/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.047196957 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.213440661 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155016056 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325371503 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.359393921 seconds)
    (14/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.41866381 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.330022468 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.319370944 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372239351 seconds)
    (18/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.436048956 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.349658817 seconds)
    (20/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359807527 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.463328494 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138679662 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411683295 seconds)
    (24/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.319636123 seconds)
    (25/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.538551201 seconds)
    (26/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.332540601 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374452409 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.414659692 seconds)
    (29/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.440218632 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.460577831 seconds)
    (31/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.55373141 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.324635628 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411277053 seconds)
    (34/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.1055476 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.424155221 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.44773349 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.454644914 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.557969048 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.427673976 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.45651414 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410485408 seconds)
    (42/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.521231691 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.0903621 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.445334094 seconds)
    (45/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.321508722 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.47947319 seconds)
    (47/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.553723623 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.15178092 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.301109833 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.339056013 seconds)
    (51/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.559766272 seconds)
    (52/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.506745305 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.471421907 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.448876999 seconds)
    (55/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.484181438 seconds)
    (56/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.372720799 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.323233289 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.343831294 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.324094393 seconds)
    (60/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326834328 seconds)
    (61/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.457609378 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.321663493 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.622883929 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.323106332 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.49802248 seconds)
    (66/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.323154168 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.439953121 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.339748597 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.489795072 seconds)
    (70/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325839463 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.626905679 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.091309802 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.325145656 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.049133799 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.405555696 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.437473605 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.558945855 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.24972298 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.458778381 seconds)
    (80/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.334848291 seconds)
    (81/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38693062 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.426440093 seconds)
    (83/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.461802766 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.189594604 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.678220811 seconds)
    (86/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.162881211 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.38437638 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.463149262 seconds)
    (89/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.539063164 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.376519053 seconds)
    (91/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.469977185 seconds)
    (92/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.34802646 seconds)
    (93/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386567719 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.343278245 seconds)
    (95/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.589217779 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.609503126 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.327632724 seconds)
    (98/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.493760329 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.604732147 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.418241913 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.376018474 seconds)
    (102/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325090253 seconds)
    (103/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.382276839 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.501623001 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.455987145 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.431213704 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.405145283 seconds)
    (108/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.341234022 seconds)
    (109/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.520508762 seconds)
    (110/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.486977257 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.460854357 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.33012945 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.297160954 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.328359122 seconds)
    (115/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.362720783 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.325653434 seconds)
    (117/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.348093409 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.391923786 seconds)
    (119/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.426293707 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.391658793 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.326531668 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.483384407 seconds)
    (123/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.411749026 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416509575 seconds)
    (125/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.346034529 seconds)
    (126/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.391050447 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.451766365 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.527936299 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.456642647 seconds)
    (130/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.331480842 seconds)
    (131/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.331791409 seconds)
    (132/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.331077916 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326050887 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.446177215 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.336444876 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06283447 seconds)
    (137/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.378756773 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140719072 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.48227911 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43865197 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.504040304 seconds)
    (142/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.345879011 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.385390826 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.43044756 seconds)
    (145/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.534046533 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.379438403 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.411515955 seconds)
    (148/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.444724646 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.603466203 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.504203202 seconds)
    (151/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.359335778 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.523167871 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.329188513 seconds)
    (154/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206913301 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.457040302 seconds)
    (156/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.596175489 seconds)
    (157/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.42901007 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.475259939 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.485986281 seconds)
    (160/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.489244148 seconds)
    (161/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.328658414 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387520439 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.408358473 seconds)
    (164/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.528640772 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.510677376 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.421090397 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.194725766 seconds)
    (168/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.494511969 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.386769802 seconds)
    (170/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.338360935 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.473277072 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.524258671 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.429918294 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007706512 seconds)
    (175/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.413050929 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.205543936 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384017457 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.499684414 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.526038917 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16398872 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.60055568 seconds)
    (182/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.339347047 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.552654662 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.450441114 seconds)
    (185/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329011097 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.471205722 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.346317971 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.050880898 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.521427875 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.381641266 seconds)
    (191/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.4748131 seconds)
    (192/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.417470377 seconds)
  done (took 342.33714619 seconds)
done (took 343.572603718 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37383784 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.434986763 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.358004144 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356660052 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35908949 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349923705 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.379453151 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357326008 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370858654 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371366328 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361892382 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366241979 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371649909 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36838385 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393847524 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359437194 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358458707 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36882057 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372519955 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.374634953 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361133137 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359925312 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.381004357 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359059579 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366082759 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366743359 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364942277 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.355489242 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36776281 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.374120309 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357755423 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.365020146 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376161372 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372157651 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359802195 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.368551863 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35993236 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437956153 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380133464 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370158962 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.369257856 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377577806 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366573898 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365429212 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370775994 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384240878 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369128575 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.37700935 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.358498459 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355060539 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377049488 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37259461 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369745194 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.35275001 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357244086 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376376167 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.369767918 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377907293 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367047096 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362854713 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394839213 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378066035 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372394635 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369670693 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367955496 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375611476 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.370311959 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378463701 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368823103 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364154533 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363861741 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368701704 seconds)
done (took 107.909027082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.491550382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.36127702 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.503980741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.369412349 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.526284888 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.498978421 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.36899045 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370050417 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370672149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.219828385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370653929 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371086223 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.362031236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37002951 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.494973195 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371580839 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.36986563 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.111488883 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.37067348 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.5068094 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.3616088 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.37086344 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370606285 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.195277636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.363404666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359736721 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.507663456 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.371319974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.141027246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.358464378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.361268936 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.08693652 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.509826823 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.390187084 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38201463 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.381176926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.528275237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374648315 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.495143992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.493444496 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.5065746 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41060619 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.359972202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.363434542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373217261 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.374276886 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.371745748 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402672189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.363458066 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373372105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.118055259 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380654606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372628335 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.372395622 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.37232244 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.400418345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37272484 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371996862 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.512231713 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.372744195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.495741847 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245645736 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.221613597 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.373694718 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.363162715 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374414764 seconds)
  done (took 111.054151958 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.435304753 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440459754 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474347712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.369178324 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416483794 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.474547516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.367919305 seconds)
  done (took 11.230603262 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372399734 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373298174 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414979003 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414563317 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372619217 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.52276418 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373886281 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.378131532 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374612175 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417838029 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37399833 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374944167 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384398539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.367501087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414747089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.379057822 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481166017 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367384967 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.373394887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519909621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373878691 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383674921 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419392096 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377956058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374755409 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373077252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.15493878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375206531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376016737 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.375657152 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374851624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.420710508 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375651787 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.367153993 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376805501 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484035563 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376298867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375578705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376541773 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.369434755 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376338324 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375502466 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376488622 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.375216013 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375161355 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392100324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.37564635 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377261699 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376657581 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.376658836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419830071 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376544361 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377556384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376470369 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.423578602 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38644497 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376737855 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.374518216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376499123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376055183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522441786 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417474348 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.374839402 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417493632 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37630902 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377635589 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377669093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377170045 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461602788 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.378799764 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41681755 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.377518853 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55113834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393887394 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378840403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372726968 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373131239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377516744 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.36760334 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377252309 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378598645 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371552316 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376291839 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377654623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378155649 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533697192 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479033653 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379422909 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383404425 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376623383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380630562 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.423936653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37939814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378295264 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423372742 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487015706 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424719587 seconds)
  done (took 141.431178219 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384775075 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384647061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37432935 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397910268 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372532198 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372360859 seconds)
  done (took 9.544939331 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374180814 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.382474263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.38021637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377398257 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379585236 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379178394 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380872859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374172497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384209457 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38060591 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380232816 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382427329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381169942 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379956663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380770339 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380818668 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381398253 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381444898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380711343 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380774609 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.371969535 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380862829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382007187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374565924 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384060642 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.382111284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39839337 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380950293 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379969706 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.381497991 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.384234299 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382504205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374336574 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379266047 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384890943 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375712596 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385151003 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383128928 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381905787 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.380522119 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386370872 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382068644 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382470232 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383877399 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375789171 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378977936 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387065192 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399852282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38298912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384298835 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385610589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382972065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382025072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384000181 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377955611 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380501631 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.38950469 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384285197 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383670561 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378280771 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385697337 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384299817 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377651214 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386895293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382776049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385158736 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377093645 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387464671 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385736631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384455586 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386819382 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383328343 seconds)
  done (took 101.771971188 seconds)
done (took 376.281331239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.773731702 seconds)
  done (took 4.035676676 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.4343072 seconds)
  done (took 3.69766522 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.721544095 seconds)
  done (took 22.987430725 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.413765026 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.462906233 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.393477621 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.37792915 seconds)
  done (took 10.910588492 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.683488056 seconds)
  done (took 3.946628215 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.38288049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.378146282 seconds)
  done (took 6.024584518 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.582537414 seconds)
  done (took 3.869594257 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.571974639 seconds)
  done (took 3.836153176 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.383785898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393891899 seconds)
  done (took 6.048334148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351464521 seconds)
  done (took 3.614615256 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.353816163 seconds)
  done (took 20.61702036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.406110663 seconds)
  done (took 3.67269287 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.433835101 seconds)
  done (took 3.698127231 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.917398697 seconds)
  done (took 6.180899712 seconds)
done (took 104.402526403 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.371991334 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.377186407 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.374433716 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.370248676 seconds)
  done (took 10.757745629 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.437430774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.436396058 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.443082436 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.437789046 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.437559076 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.436398321 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411666178 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412504915 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438519631 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.438044487 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442563863 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.437859082 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437596007 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.413347075 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438545281 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.444814009 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437249916 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.441689059 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413323195 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.438428163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3872838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437565017 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.438739685 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386823469 seconds)
  done (took 35.590144199 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896628957 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449412887 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.53212686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431013237 seconds)
  done (took 7.573901538 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.465991172 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.468643402 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.486493882 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.523027922 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.550491281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.485659602 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415038371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408452195 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395061798 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.46864447 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.520418461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.454162608 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.555235546 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38817754 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.606959255 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388000002 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387928068 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.469089601 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.521488601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.538699497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388535777 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.467205859 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.47396674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.454472789 seconds)
  done (took 36.548480521 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398774809 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.410499882 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.391188616 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404563648 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.390113179 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.390460165 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.391772207 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.397480786 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.389973398 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.39113433 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391048385 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.404237082 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.389922367 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.390865929 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396667695 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.392449603 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.39292411 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395952005 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.397821515 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.391640508 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.390777229 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.39796404 seconds)
  done (took 31.956125348 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.376531668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375447656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72665211 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631642098 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.377614395 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37570818 seconds)
  done (took 14.131791729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451335712 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593457021 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383563436 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.730207679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814476609 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38462821 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.384297318 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627594958 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.927048895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920021864 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445014852 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.45261301 seconds)
  done (took 20.382324158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.378177417 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.381586751 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.390814579 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397909178 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438324012 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387486439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390494884 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.377303028 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441559571 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.442601013 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38713264 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439622654 seconds)
  done (took 22.12243709 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477433381 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386567408 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387185738 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464790731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387190353 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23134714 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462027256 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089968659 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.392413564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664459805 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390101581 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481116766 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641470528 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391082594 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393553804 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362964553 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620211202 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896839006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393086049 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389107944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424357522 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395957292 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392721156 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603991713 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233817357 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388481334 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651782527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387464295 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677194392 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656904362 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657473338 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395745141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663774485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030083414 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485162784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599151906 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380632397 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395014302 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.361417139 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.38936295 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40837728 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395554905 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654451779 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396440216 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391867068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392817076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102713338 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397974413 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.390479686 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389645477 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65780322 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493622535 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.39581969 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390118392 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435544456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38982103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.396816413 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515847056 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953849861 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403380891 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401172789 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.396960623 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395089004 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402690313 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056277771 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403852273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396987596 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397082457 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390392019 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396514359 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421934547 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392112176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.412823454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391468405 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182266925 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392183914 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398666463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961561925 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395635044 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39893292 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623026932 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392301253 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392429406 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39152311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394198012 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137991226 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403328668 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.364338635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455088678 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.096087566 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602533966 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411165937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423167508 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616014653 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.365197995 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394025403 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.393536074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39927684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413305336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099907368 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392462327 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.399675788 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648182982 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603494909 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404820611 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.376873881 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875647823 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394701797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423198159 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395231211 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609769047 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.035579504 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667864723 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399339878 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430726327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396643949 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198242675 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400641838 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404836968 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393059007 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674847335 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.250460785 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398786719 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463699877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398272286 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396162741 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404043677 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403432258 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394794712 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.586433208 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408909542 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.667217168 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.402754422 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396153341 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.405877532 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414737805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.401302002 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618792571 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396038098 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677848467 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39672996 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395785936 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396894423 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617772802 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396789917 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406269284 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658017171 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408536777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412347082 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67010759 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433429106 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507403478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426680809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.396853084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672680993 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401292508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401623614 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405366098 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403660281 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40496444 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.405650234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391385786 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046149721 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378394055 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397112881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399032572 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.41366294 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46626654 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40584661 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609657494 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397227246 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403715798 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408806433 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.397270176 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645203216 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665820092 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.418549456 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480416361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.876704583 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042032104 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417031325 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399221034 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.399280172 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398716776 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399254667 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399688788 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400114063 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611253823 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668510969 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400290167 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066543043 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405060837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401533445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412098396 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665751499 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.413792544 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400862563 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400984438 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404162527 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418360279 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669892744 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541107793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415536716 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400122662 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918825836 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407648613 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399314821 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399774081 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43054179 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405159869 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245856922 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660638882 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417852647 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67477826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406740357 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.425032674 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400015127 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401124368 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413672859 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.425028486 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411150786 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.610784748 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410178237 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408259176 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959826367 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205111172 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987744022 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410649969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.40334439 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406290481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110810294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401922051 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402263822 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639838909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112776101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402027788 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879215947 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.401371561 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156783875 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674238697 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641014257 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408572947 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.404876308 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693583289 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617589115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435608691 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404548444 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408519467 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.375435396 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957502626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411950859 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487445891 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114132325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407447709 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409863434 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.448609412 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403997048 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815636558 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403982586 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403091927 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409334691 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40852095 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250125433 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404304205 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405457274 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072806921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416047456 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.886986301 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403319246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616216506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67261229 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.657133439 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.409164207 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414507012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660564772 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671348361 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410387175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404296447 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9969341 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.277289386 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412542019 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406476936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215566017 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41244584 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704807977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.411467441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.420682683 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418867925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406938567 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405337858 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.405969089 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409989541 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380153218 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915986649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.417393805 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414507623 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41152681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411782255 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65910826 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421228411 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051190798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639370248 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401544533 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46089009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.4118988 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407006583 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.38549431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407500168 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406796096 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435569646 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628515514 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407756086 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.382639185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440680067 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616307218 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407360464 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40821687 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63732839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.406961699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.410260635 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278058992 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441297392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410600286 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41411441 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398274359 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450707573 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473635527 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620469495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.676673311 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683404377 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804856362 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419946868 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415424972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.423787406 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503393629 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408048251 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.426395118 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.187131128 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056701551 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284258882 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061186636 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684584744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413090144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413958739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409497208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54525006 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409892398 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683496988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409300501 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.421607594 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435540669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424022558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41691339 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6260785 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687174048 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408890425 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421359327 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414016269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.408855264 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68138945 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.625730563 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92451503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98915672 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415732402 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411488043 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125228615 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686350056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411177577 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410616647 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409895996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415539201 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415358407 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.421682793 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412037541 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550427054 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679760924 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060402569 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679182622 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.45421445 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.929437068 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427767229 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670501783 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181228635 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623965365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06153128 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.178053366 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679590322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481356946 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623540106 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.410998935 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549222255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.420245616 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416799659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41296768 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413389275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411276639 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.681619609 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069933727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680914692 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41671168 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.42088747 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447411054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.625947523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634475824 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170255386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638713759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684471035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422531959 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413371309 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067074133 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690491906 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419869306 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418020016 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638576534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413192965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439738192 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.93310678 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.413277874 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983978859 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.304682994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435128839 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414570936 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18342933 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070903326 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434437538 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933476762 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417480812 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414787379 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695839338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.421292046 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42758112 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69800122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421386981 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423246629 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634424637 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065312722 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184085206 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.425976584 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43463388 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.424139634 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417586981 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437512481 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415460007 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424403855 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816184364 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414484981 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416824736 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430373484 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.427473452 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433946925 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.421090285 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416419944 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422234646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.401107821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.395154529 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434736169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54292754 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971492835 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422265408 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095433529 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.739538542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669017424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421537752 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.39369956 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.421644768 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418392631 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417305807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417573468 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410482828 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99351851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.424806907 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.69291866 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42861993 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627656079 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628126114 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42991144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63734845 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426767934 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444613449 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.389367314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418988419 seconds)
  done (took 995.737539766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414057627 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.414239119 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416509532 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.484899629 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4131709 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425472122 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.435744753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446556033 seconds)
  done (took 20.747564828 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.417233693 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.423917841 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417752366 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424287441 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417197158 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.898555371 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.42152247 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.425033926 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.432285954 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.41634957 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.424531089 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.108224688 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.445528323 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.415378414 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.408397758 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.424619717 seconds)
  done (took 33.219553753 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.538697789 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.612364299 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.420937906 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.481308247 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.462000603 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.414848038 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.68857702 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428418564 seconds)
  done (took 27.345408559 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.424760675 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423533446 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42463448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426576518 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426924944 seconds)
  done (took 8.425197634 seconds)
done (took 1265.802055248 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436290673 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432234965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43399624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.431636893 seconds)
  done (took 7.032345383 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.399313138 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.399869272 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.399869759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.413239195 seconds)
  done (took 9.918074969 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.132293808 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.044780006 seconds)
  done (took 5.483211986 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.918863173 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.922500173 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.917823758 seconds)
  done (took 7.066941202 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.712307292 seconds)
  done (took 3.019509803 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.34083312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.426027624 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.092732901 seconds)
  done (took 8.168417241 seconds)
done (took 41.987230697 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419979567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.669487287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.578724766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420456107 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.600228222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578991839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.163690882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412134902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.442024347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431606609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425276853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.574028905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.137735977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.658401416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.137360857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.657818033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.576138382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414770207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414654806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41280562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.168352616 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418806579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414639995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419006516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.581808251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.558779065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418162487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.659910594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418469094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414022489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56409945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415854968 seconds)
  done (took 83.886811736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414171768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.4143987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.429911358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415617073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.433412047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434288455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416351286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414474952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.41438319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430193069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414815769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.432831517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.431544769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415309342 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415895656 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.415978601 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421523454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415546247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416153586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416674637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417293055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.415236485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416777478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420854651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.421460496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417132114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.443151999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41519411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415653794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42944729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417441352 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.444670767 seconds)
  done (took 78.791631555 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.430846737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.431899727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417671181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418068241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417388842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42211804 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.417540288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424768095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416162223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421590757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417830715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.417296382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434143768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417474501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417941361 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418437359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417655141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422431552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.428110937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417803899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419162841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432239587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431932164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418427936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436502869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417857752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418166999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423843456 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417023761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.434139249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4238297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41940738 seconds)
  done (took 78.824712095 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.656761463 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433100891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43477888 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.428983495 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.435902943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.43260917 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427768565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665195427 seconds)
  done (took 15.220170982 seconds)
done (took 258.028406672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426084129 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.956352515 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458144475 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.436754839 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443860441 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.451726163 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.650363086 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.45758494 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654550444 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449079836 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463288639 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.429704272 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.248526371 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583105113 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.283375104 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.390833158 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.327917998 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.442365722 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.028507749 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714238021 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.458629562 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420363103 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.279265246 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.328300274 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.406723955 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.531416834 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.530682634 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.656483357 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.593447248 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.51102645 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.955811147 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.449552266 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.433436718 seconds)
  done (took 66.158992768 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.425257853 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437110559 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.435382024 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.433921648 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.435926817 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.436333821 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.426965056 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.435397044 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.436639448 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.435737332 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.435289933 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.43620313 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.436746364 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.437340127 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.436979576 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.411677248 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.428405781 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.437428885 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.428303736 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.413117095 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.435077282 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.436974705 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.437584827 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.435363303 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.437390112 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.437064807 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.438685384 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.437002425 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437355328 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.437146601 seconds)
  done (took 44.318171743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437822934 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.028652832 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.166427822 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441295005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429322608 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.434219 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.720343333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.443378084 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433168385 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434228374 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.918456224 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.446836407 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.463743639 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.169635469 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437682211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439206858 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437988272 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432077011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.044270426 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443722989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.718069522 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440464273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.721540066 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444132111 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.433351393 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431780736 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.435841499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.251202547 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.454754803 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.920899592 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.224418384 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.718694292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.195330949 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.223398487 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.230275148 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445946562 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439277295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926785376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438395024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431918882 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.718432076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431911358 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175540985 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121437552 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.45576889 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.440470345 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.291097439 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.929250328 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.683865096 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443282759 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.206814967 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440370243 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441477718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434089963 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.676969784 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44126822 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433788182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.291547607 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438932397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.7208158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.447915522 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433251315 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045041395 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439680572 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.03236027 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.441177152 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442137106 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435217213 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.180226899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.442954383 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.133610272 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457761395 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.442013963 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.920632862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.040181401 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.338358898 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441846524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05113837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.218236131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.741257802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444304257 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.234144781 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.739922939 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443703495 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445115744 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44356331 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441100736 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.504886743 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.718704611 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.070866867 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.131630524 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.320180079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.729627411 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.448421233 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436263093 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.305881581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449038543 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443385907 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176092512 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135231458 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459788563 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.443894969 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.124649491 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459362197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.726480234 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.446515877 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214011142 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437285857 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.506919858 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445325034 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442620729 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439511618 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.725214592 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445957684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445719806 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115720567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.958177071 seconds)
  done (took 200.283063346 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.432302562 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.432584215 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.432801836 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.433178486 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.432033394 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439869471 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431846052 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.432478739 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437318371 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.431816447 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.433460301 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.440692475 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.439444313 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.431898326 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.4337856 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432087135 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.433666123 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.455494729 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433842136 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.431334132 seconds)
  done (took 46.01783634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446482255 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.004704631 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.972451301 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452577154 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.446715501 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.439609937 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494969344 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447965538 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447856639 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737709003 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.614935423 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449254006 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448521299 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.447660609 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.968930292 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.426219977 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74237692 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010343831 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452947222 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.005054426 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427067512 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448497269 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439176498 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.005801505 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.757927249 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.730985196 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503379481 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010386587 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.451784382 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.448757743 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.007645596 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453530988 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.440852524 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995807864 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454703239 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462090238 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.449578534 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501166688 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505667121 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.750885391 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.018037622 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.74125818 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465970187 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.611109246 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.454404053 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424457238 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020983356 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.454823078 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425177205 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452188433 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.454263933 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983638553 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446710457 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.985671455 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.455800609 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450525234 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.010091278 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990368556 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.978457903 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.620214972 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44554944 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.728220208 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.456368992 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021037263 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454753146 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450511586 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451226961 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617981653 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010970913 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.733693265 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752279171 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.750693697 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45650393 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.51177454 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.457879951 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.747596668 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51513992 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.854618552 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.752872573 seconds)
  done (took 130.636156833 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.705367146 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.566620884 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.825766367 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.04366733 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.962338375 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.586254286 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561923199 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.691848675 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453491463 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537806855 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.099073663 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552200474 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.187136116 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517611389 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.558422771 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580794958 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.852821702 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.445502484 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.095298833 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.074176782 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.450958931 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.54615058 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.966643308 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.640514408 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444766756 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.001852444 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.392681782 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.976341575 seconds)
  done (took 54.639168499 seconds)
done (took 543.358082264 seconds)
SAVING RESULT...
DONE!
