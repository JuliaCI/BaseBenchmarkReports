cset: moving following pidspec: 23757
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.947068199 seconds)
loading group "string"... done (took 0.516117587 seconds)
loading group "linalg"... done (took 9.295401182 seconds)
loading group "parallel"... done (took 0.169343252 seconds)
loading group "find"... done (took 3.185332716 seconds)
loading group "tuple"... done (took 2.065446451 seconds)
loading group "dates"... done (took 1.397837812 seconds)
loading group "micro"... done (took 0.197774871 seconds)
loading group "io"... done (took 0.508577104 seconds)
loading group "scalar"... done (took 58.258557951 seconds)
loading group "sparse"... done (took 13.935226749 seconds)
loading group "broadcast"... done (took 1.367432059 seconds)
loading group "union"... done (took 10.93927936 seconds)
loading group "simd"... done (took 3.867431815 seconds)
loading group "random"... done (took 14.7872154 seconds)
loading group "problem"... done (took 2.195236629 seconds)
loading group "array"... done (took 24.147862937 seconds)
loading group "misc"... done (took 1.154247897 seconds)
loading group "sort"... done (took 3.803570761 seconds)
loading group "collection"... done (took 22.070618618 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.673041593 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145057203 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.184157566 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224732489 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277128537 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167168465 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157178438 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.151204912 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.603901725 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209981102 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138808154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42519981 seconds)
done (took 6.118389916 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265296586 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059745447 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15545664 seconds)
  done (took 0.917622974 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093988558 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159730857 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108697062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095745486 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.155304316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109889813 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095862749 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110276942 seconds)
  done (took 1.541535485 seconds)
done (took 3.528934092 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487202947 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.891144607 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509206513 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.178577947 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307081509 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.35221113 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.465051457 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.219581834 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09189765 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083865623 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.189298094 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.415233879 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.670826297 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.999978838 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067271893 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111757648 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134661957 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.771577726 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079173057 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108875298 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532835216 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.211400556 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116299077 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105388192 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18689723 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133755766 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139709526 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102819639 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662512042 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137805233 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21332636 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083543795 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137136154 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164770743 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.299497233 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09548393 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681133474 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20361465 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098383461 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100766166 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684398345 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121360126 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.202820066 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106186408 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067571861 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162333981 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100423595 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094761283 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095473803 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085592658 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162025911 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.466338283 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105810104 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19138125 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094389726 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688747431 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100121811 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280964151 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125018272 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09415066 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091785065 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089648691 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156443637 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096113968 seconds)
  done (took 20.744549779 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.171298878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.188727841 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07871406 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162859047 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124936419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097758591 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088765129 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078523742 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1312544 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180302537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142052701 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.196854851 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077724618 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091495294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171580898 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.234873304 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131035728 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101774255 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088970113 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111581088 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126777156 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113425947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09677341 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094900336 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172312764 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204711856 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108767672 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123173624 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089550075 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097121569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142647469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147321109 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092788196 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088886443 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174046225 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124963377 seconds)
  done (took 5.381009904 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234854376 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103741893 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252836412 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199805086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134377074 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.20116783 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172864371 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.29637435 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214960646 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182563021 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129847448 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096150774 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079621089 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079069342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094989104 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.885804263 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151751071 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169748192 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185009421 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113546353 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081633775 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3779797 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101714052 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086112347 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111340695 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063592653 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.220961827 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093623009 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.504577712 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100292782 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101527296 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129574648 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19378002 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123469542 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136948979 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096449276 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101676058 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222552602 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119331516 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077751996 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094751155 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.107204764 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131999677 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115841616 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109972853 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109413146 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136260833 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088071745 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110640955 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.05680457 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192641397 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157144983 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.160682514 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085903312 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283810881 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127429333 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101003696 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091845618 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.832380082 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123447053 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09937367 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079804632 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095217835 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095764413 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.460849246 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106860447 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.149438067 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085730525 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160911943 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098328077 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117870645 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08601429 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099873385 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110605476 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085909808 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095509981 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087768982 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079793177 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107079399 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112557121 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099586547 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081650676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147137915 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113650136 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109363139 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123413949 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091459256 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085813846 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129277194 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081515045 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105139348 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085071572 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.183999306 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098618337 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127856342 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098325283 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145100435 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087424176 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.267929113 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082132581 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083974785 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13777129 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084420791 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127082292 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097721295 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097162006 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08450509 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078987907 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098984306 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146240943 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087705497 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096173473 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089455929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091802526 seconds)
  done (took 27.250819955 seconds)
done (took 54.079466042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.409965122 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081953438 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080335635 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099351042 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080780244 seconds)
  done (took 1.534821781 seconds)
done (took 2.2948472 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.299693278 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19635402 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108466167 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18654132 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086718989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192888076 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181967134 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101641557 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206372193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085348842 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190117473 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08548629 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104151862 seconds)
  done (took 2.809864019 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103895614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107827819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10332117 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12017869 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085922239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1015083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119376353 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108789673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100418147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112800099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086841909 seconds)
  done (took 1.908007506 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099779099 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104617703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093083834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116260455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086204957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098959302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11562022 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106817704 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099906909 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112281457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087183502 seconds)
  done (took 1.882155196 seconds)
done (took 7.358290604 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.187009745 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.790333744 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189530945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.242952543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.336192542 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.290251993 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.598395718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199613862 seconds)
  done (took 15.723468187 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112785013 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.186317827 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094799416 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095266026 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110261508 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091596215 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096271181 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110755495 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093316615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093055339 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094822533 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112112022 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090871193 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096056279 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11305439 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095608806 seconds)
  done (took 2.513862691 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135385094 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116503362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116157439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099779797 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094906971 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117541483 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100689131 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116063712 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096598457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094798927 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118906461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099503994 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097620584 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109725266 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099162261 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120017985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113330193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101185144 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116017756 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116826937 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099836508 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096313715 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114299032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099265137 seconds)
  done (took 3.437886479 seconds)
done (took 22.438899807 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140210428 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085478677 seconds)
  done (took 0.99526106 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161942451 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.179384893 seconds)
  done (took 1.118942639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111970593 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090628983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136863145 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103675824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091727936 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108350999 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115455814 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108204612 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092290228 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091746863 seconds)
  done (took 1.831551275 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094847047 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094311853 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12162252 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166397068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11707627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092811873 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095123828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112990765 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095621168 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090629472 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114077006 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109255514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096519607 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127030469 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095408781 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0965928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116615738 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093804526 seconds)
  done (took 2.709522699 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090917008 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091797777 seconds)
  done (took 0.963185892 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093988488 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090060754 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092290926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108351557 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090788361 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090184373 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106897811 seconds)
  done (took 1.452126279 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523739436 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234640383 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.365027145 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073215526 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123556844 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29750096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.121806272 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070975855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090280125 seconds)
  done (took 2.714090597 seconds)
done (took 12.562184689 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09247866 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.190387618 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.741589625 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11294027 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.107541329 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.144897755 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.308907089 seconds)
done (took 2.481580584 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344574963 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162003213 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083130823 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093070006 seconds)
  done (took 1.464219088 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083000499 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098473276 seconds)
  done (took 0.969080146 seconds)
done (took 3.225175632 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090017104 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.11259714 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107901221 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.090277402 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088721478 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090423789 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108357634 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089216443 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088246766 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.107787241 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.208234232 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092599415 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09109245 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107132688 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088931142 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088400557 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089360526 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106137379 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087916766 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088897198 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1061767 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089755198 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088791458 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09024737 seconds)
  done (took 3.217542259 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112543292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09190205 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110835184 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093255644 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093060298 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111239285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093947561 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091270056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112980917 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092286527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095473523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109826256 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091317199 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09458626 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091981529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112554118 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093674062 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091397935 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108188129 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095174463 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094105612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109299094 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093163593 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094771968 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110961108 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09457327 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091905402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108361406 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093738666 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095118799 seconds)
  done (took 3.763624131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096817759 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087469084 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090591479 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116515794 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086845471 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090197434 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10350122 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09044111 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090664602 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089286354 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109501774 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089174469 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089714062 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108389412 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091269498 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093078456 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116643255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090034703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090134507 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091521276 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111401667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089432811 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089897046 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10755851 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089980298 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087009109 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089762183 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107493208 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091107815 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089411301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110415158 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093124273 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089806672 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116978074 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093333797 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091283605 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094262057 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105748643 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091341154 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086580912 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105568034 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090824259 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08910798 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113239051 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092249161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09033104 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091420424 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108477411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091494246 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09162478 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10360724 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091051732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091483701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091574145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110954822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086350506 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090496703 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10469369 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090889002 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089521998 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086987808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104581944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094160996 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091395561 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123959479 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096367352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089912342 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.108739457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091047961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095814558 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109432561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099605054 seconds)
  done (took 7.73991993 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113501724 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098750546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10967959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091394793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090211053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090837948 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113778505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09162024 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091955129 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114089438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091056551 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091497389 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108643914 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091813142 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091379916 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.1089318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096458704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090723479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090188494 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108788624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090415688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095287676 seconds)
  done (took 2.958599275 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236451996 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097158585 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138130555 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121837072 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10688552 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1216925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095020254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095377911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11202933 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100766655 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098794966 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112926721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107679545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117866035 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100783766 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101228235 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111491692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102956667 seconds)
  done (took 2.877928471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103443672 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09366226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154162621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092699428 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092452609 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112187102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098651301 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110271285 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113385229 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09315137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099331626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110834974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093606946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09289205 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109806701 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093973053 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092530621 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09305087 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116895801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099228959 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11539107 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10002948 seconds)
  done (took 3.081752086 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107015704 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093500367 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128870158 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097907283 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090852825 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109813266 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098051296 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093390088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117480582 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093308863 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093393301 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091359103 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124098811 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093940367 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098695581 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111371844 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092704456 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092484316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110336028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092165701 seconds)
  done (took 2.833860018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192503949 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12689365 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10801192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116146334 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128175517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108604383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13397409 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109229393 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108224726 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135960166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108417697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109078885 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133478915 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113975038 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126910412 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116104569 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116893077 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136144408 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108036714 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126622946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119453668 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108418954 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134824757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10799858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125854412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110054568 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107575342 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130666337 seconds)
  done (took 4.211839997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092203624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091482723 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091443891 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109468529 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091185199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090928323 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093139079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110585432 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091437186 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09067424 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111119857 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092590545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090903808 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090704341 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10956512 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091639307 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091153771 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109809494 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091346882 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09101744 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090843535 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10840345 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091264679 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091121643 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10917317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092583422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09118897 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091282627 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109557856 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091808322 seconds)
  done (took 3.693335444 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104062395 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101616763 seconds)
  done (took 1.012495235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099372622 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106384338 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090921339 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109589914 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098288546 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09302398 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118077795 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099331486 seconds)
  done (took 1.622248751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.164893036 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187816272 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096849397 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122266177 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.166995747 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.178298023 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130004521 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116200042 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091392977 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084881814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.180616614 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08546394 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111682288 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089371141 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091461282 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11752982 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092987593 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101255194 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117873369 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094413473 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098048153 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114712702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094559232 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102987258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10619451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095763714 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094250952 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.12243198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089704214 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094079911 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108877603 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093055199 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096138482 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114928093 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09456824 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.187594247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099225049 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090205186 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112364778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097803917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123858837 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.111850536 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.094224412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090759376 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113764537 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096252393 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096902127 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092278494 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10424922 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088790271 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093863752 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106022421 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093760596 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093124412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110762618 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099383727 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095059644 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107899126 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089444754 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088916475 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109759069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089859541 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095001886 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114188752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094628794 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094267015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110322758 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094328545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094900406 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112454105 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092801885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106297386 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111974365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097000115 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09836621 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092994018 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108465399 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097940387 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091033713 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110728117 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096855752 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120426557 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113229134 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088563496 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088155065 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.118280684 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09415478 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095015993 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105177551 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101695893 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095665517 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112350949 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085319509 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091610811 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105919475 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096106705 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085093083 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110450218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092451911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096873911 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098300559 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109915583 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09533873 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098794756 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117303884 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091058297 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.175913362 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090746037 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087978017 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.11443648 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098239867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087223452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111954041 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092326754 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089770563 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08892311 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116426468 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09261485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095219162 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.116991762 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094987987 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093849574 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113826486 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092723523 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089223497 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116449794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101142262 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094678171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11447133 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094701498 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093749142 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111477374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098598502 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089855281 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116188728 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091327605 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093189854 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094070343 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117741579 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093406152 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088981078 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111806117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092802443 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091964767 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114772207 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093875555 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089176703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105142979 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093802571 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089205618 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114380118 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102047335 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088689839 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115144391 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090166005 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100960954 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109787774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099019505 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095441745 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097918667 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117608112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08557429 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090596716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114987667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094008393 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090442158 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.116294258 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0939616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099679226 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104810116 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097130927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084928328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109167793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098550172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095190247 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09720447 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108612974 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130832978 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104067842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117849135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09213078 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093162126 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.118405909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093519434 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09765781 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118860995 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097855461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090523522 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11176959 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100494972 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090762939 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116059032 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092127148 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094252069 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105584307 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095834044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085955414 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097423771 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114056194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098788261 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098704032 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115208296 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092264107 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101268744 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108924047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097907772 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086557376 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117495389 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104216954 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099239505 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117769306 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096311199 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090943687 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113154054 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103799861 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09534285 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094522913 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.114970486 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086890309 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087487383 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118821604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097111092 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089810164 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11238154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095627943 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095251498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109898752 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087444639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098242381 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115599547 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090205117 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09612647 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08927043 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11275561 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101920293 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086552347 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108752237 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095811695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097324457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.113799877 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092375225 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097381867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118455148 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096904223 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0958756 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109562466 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10205355 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092075605 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111566631 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090967713 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095985111 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086939268 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114578886 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094960819 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090414151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110224491 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097209638 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10156082 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119324672 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092292463 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097748534 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11867822 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099713309 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092267389 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118645674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090057332 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087451274 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090216709 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106006288 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095022418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090404164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117781807 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091918253 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093380381 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.126147816 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096497327 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091992215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118645883 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105680617 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089945027 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107446624 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09258405 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093619378 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109175755 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089973592 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095890825 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115374029 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098729036 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095828038 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109325075 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095714825 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100371493 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109021824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100935461 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098795594 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099600515 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110372136 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098254045 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090958424 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116595972 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088865001 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09282179 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1136134 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093549536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090931535 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111774898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090517027 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088790551 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110081666 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101179207 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092414615 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.118056982 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094628444 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091778012 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.11029126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090728157 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099067765 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101349201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120959935 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094510971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087978925 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107303939 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099560286 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094161415 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119707122 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091035669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097352394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11965949 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098280096 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094858431 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102024217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121369066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100797315 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099381143 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10923058 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091527002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098176172 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113998784 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096729898 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095942508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106856954 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09742852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10000308 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114804334 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09247831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08794589 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094239218 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120342119 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096977136 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099733702 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115778759 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096405695 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089700513 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118546081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100126001 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094317231 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119927053 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095292145 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097485232 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10964439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100009087 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096153079 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0884609 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107555646 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093562597 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101280756 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108187152 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098372845 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099018318 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109764866 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092691396 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100242357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10933164 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097936686 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098677492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111225736 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1045179 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095605873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091988304 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118415687 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099099474 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088276659 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112132485 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093501206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102236465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113549426 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099314026 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094730273 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119707053 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097898832 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100023823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119549979 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100340204 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088508322 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100845924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117207154 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096882152 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090957935 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11275533 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090597904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093570628 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120306639 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091473155 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102538179 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119556544 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093730424 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09217904 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11892455 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09390412 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10145089 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091406526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115177985 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088120354 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096267619 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112354999 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100857588 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091347371 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10889646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099743341 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100090032 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118766918 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098330172 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100348026 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107305824 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088577814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096873422 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091267611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123874761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097082806 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091662983 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113431184 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097145733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096410165 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123693872 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08923963 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091096081 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114098098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0962144 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093143269 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109544377 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098439962 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094531994 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115278417 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093621821 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089337129 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113184365 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101716427 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09292257 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089811211 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112771045 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101933004 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093690406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112062225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089200868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100641081 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115916486 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101945645 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09200325 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114361609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092862647 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097486978 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121628036 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09295365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095543575 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113900378 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099601423 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09957607 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107673189 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092177713 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104910618 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118589871 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096656076 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097357143 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093884565 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122530944 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101466325 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097348972 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108941367 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08894909 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092932977 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108878371 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098267035 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099694242 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11342839 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093734755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100894953 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118527084 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099020902 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098208928 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089863313 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121245306 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092627351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098058978 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110061831 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089740322 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098813544 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121231967 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09499134 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096609981 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116122169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099273937 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090150919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092646837 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118623884 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099866331 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101122286 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114597883 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093024609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099161003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124981675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097276127 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094293904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122821833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102943817 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095332165 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116787756 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098779321 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102736947 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118174175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102656211 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093329117 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11355187 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102552845 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102121576 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122909275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095564037 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090226977 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100103791 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11372347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090665859 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099186426 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123567669 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102183805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095327276 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113351635 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10457098 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100540998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115748029 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094172311 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094348869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121001001 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093917809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099602401 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111931832 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103725062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102252249 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101629963 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124854215 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090182208 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10014395 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117486308 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105167214 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097105924 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11114507 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090297516 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098879683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.122580182 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102395912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100532267 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119160474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100464521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097290304 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096241708 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114643908 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103576718 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100788795 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117867293 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097347016 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094777346 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116412709 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097734774 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102416236 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123158818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096952692 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107066967 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122559789 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094944755 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093217021 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115811445 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099765341 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096341372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10082574 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114789457 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090967922 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10153016 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123370926 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09579598 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103097608 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123565434 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095473663 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099080407 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123999428 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102146788 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098197055 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116290347 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100534014 seconds)
  done (took 61.95791986 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145897673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105181183 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119057668 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098589842 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116262969 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120949878 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098202293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100639124 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119897509 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108005145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097997099 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117434137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112198835 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118594061 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135499283 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108086789 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11870916 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100770357 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099391131 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119086652 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11496469 seconds)
  done (took 3.231641887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116325756 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113197565 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129862044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111908295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10575891 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129759447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109838129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130718578 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113785838 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106181869 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131951626 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109408396 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125919155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106626758 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105959634 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128584089 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112344943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105898802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130506121 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110117844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126748799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109699425 seconds)
  done (took 3.427555138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127608336 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102314826 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097504089 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117821547 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102022401 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09912762 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12205365 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09892075 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106866662 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112782847 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091277598 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09378085 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096832774 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118425884 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093168621 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098606953 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127801168 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101405284 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104225405 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118342284 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091497599 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099715124 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100177194 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110333584 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103534116 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104175608 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.117864011 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102587487 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089765395 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102425176 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119803433 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091873275 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090382513 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110249564 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089731173 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101902274 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121285884 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100691785 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099566712 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090056005 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119933687 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103792948 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09009763 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120022316 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099383867 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093138659 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102006617 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11915796 seconds)
  done (took 5.875398331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126129866 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154859637 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10329463 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127303898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135882503 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108558568 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101777886 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129036312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101135766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123656576 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113852816 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112356606 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126618057 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106815818 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103222624 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124646996 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105016707 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102135544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127486044 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10340037 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106409761 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124639034 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113307286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132163105 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105677335 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103114299 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122311155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106235646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11107467 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127449726 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106583595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10771223 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.364181995 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105430795 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101860998 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123972818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115046124 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123248494 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104810745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101935448 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104050941 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1271272 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104551493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134118522 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104204383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105047297 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121997497 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101369385 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111356968 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123377561 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109207532 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111647368 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12584212 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104290707 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104527887 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132980109 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103290021 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101349201 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125104316 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111113711 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.121416907 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105473817 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112806035 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124199453 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108377748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113258257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124894654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104840288 seconds)
  done (took 9.01914196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132281277 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106310935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135427906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116036823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104997849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128411022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106654903 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106060764 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127398603 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111289083 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127221625 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.220882837 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124915815 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111000917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125999752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10786637 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106959132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127142355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107505361 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105610707 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125812857 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11445841 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106536942 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135213284 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115988772 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122803884 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107907367 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105981214 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13449783 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106723837 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117792004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127361377 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105623068 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134421004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.117265331 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108001164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122884412 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107435729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106078363 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127928489 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104603874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11345961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130275225 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103411614 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106746885 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126905453 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114957356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137796224 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111436307 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111009158 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128901726 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114719197 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107026878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12707398 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113288079 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141507241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115429483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132357823 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107935024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11419839 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136394788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121647174 seconds)
  done (took 8.281186945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100439518 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099579562 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099632014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119814329 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099937988 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100360947 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098949245 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120483547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100116572 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099346641 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12059683 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100443289 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10009974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099737893 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120597039 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100095131 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100609093 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119496411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100083188 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099387848 seconds)
  done (took 2.972976941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10926627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115400918 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122063847 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107572967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101866376 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128059232 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101927068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10266508 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101748623 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123194087 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110347203 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129755047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102823132 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107607259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129779143 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108558987 seconds)
  done (took 2.677378597 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119589579 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117897464 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207163984 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103559049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124439358 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109324517 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101907651 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126210323 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102387531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107682409 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126381854 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106181868 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103263341 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102151398 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121971447 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104111982 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100034578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127368222 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10285421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.212478695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105580255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104552821 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126118622 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105695145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102937113 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12886981 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108130021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102611512 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125460926 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104081531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103127848 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130045727 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103086991 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107504592 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123252475 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104820103 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103168008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.123103504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106637163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101982801 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103977608 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125209847 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102843874 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103254053 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123692964 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103567918 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100720071 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128841174 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104437932 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104011202 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123444259 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107129336 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106538827 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130940534 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109295463 seconds)
  done (took 7.202698682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113022822 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104907544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13473962 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101474077 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10381816 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103999887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124938024 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104974522 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103327037 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122828958 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104003449 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104274853 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125141891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104363411 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103795951 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124830329 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101599861 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10448263 seconds)
  done (took 2.872532534 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108624428 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102115569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106392789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125170037 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102279697 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102891856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122742145 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101365963 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101224394 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123324481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103668979 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103067087 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102151538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123719364 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102701677 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10304362 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123404799 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103621626 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102736808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121703744 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104091729 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10153023 seconds)
  done (took 3.275395565 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114089717 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21147375 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108189456 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.220190151 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100755689 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.120375852 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110099546 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099987784 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137796434 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099354115 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098435841 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119320271 seconds)
  done (took 2.42487449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131393594 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140705811 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126589701 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105361792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112099031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129534349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108347088 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107214193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138283437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119347649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128397962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115950988 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114320403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137431303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112804289 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132066445 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108215018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107511018 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124230322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123228729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106943837 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136887868 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108683374 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10734745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128868552 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114959801 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137785468 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119313566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1070787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13804472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112644003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128053156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116519356 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118341027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12690671 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115720931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107000757 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144408657 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112476593 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136891011 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105972834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112223978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137295671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112759172 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137431513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109006041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112694847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129000552 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107122631 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1507793 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113495019 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114881089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133690045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115424804 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13675091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12824452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140164542 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116780214 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11237721 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141485101 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117209179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134764973 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116014893 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118827052 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135085893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115670785 seconds)
  done (took 8.938099881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142557863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10524844 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130302045 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119058925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137048852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108991863 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109126028 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129805474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10827585 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104848319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170445836 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108464072 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137045081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116998468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108611298 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131405606 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110572091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115870461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12630405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129649657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129603283 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117199401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116430937 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139117691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119332913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135470509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10876418 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108023932 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130818172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108296523 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111973178 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129621512 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11592815 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106072148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137955601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108862238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131988153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115757737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10784898 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135576528 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116039337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145675508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109311108 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108270541 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141456885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108932288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108874739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127167149 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108637419 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10559569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141577711 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120613034 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142833038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116997001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110513914 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129715169 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109832193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109119952 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131241689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113591121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13959785 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10932738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128403899 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132618541 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108782339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138808713 seconds)
  done (took 8.9240893 seconds)
done (took 168.883353397 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173281393 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212442309 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.194851524 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156780831 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094314018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151854366 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12809967 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197196864 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094619156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094702406 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116220295 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098593753 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162676204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094420526 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117888106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097951842 seconds)
  done (took 3.073123615 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193730152 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335510822 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11018971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120723383 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101337677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099805499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120872912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101367709 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100072781 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127786361 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100814426 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095985809 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126788818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096272368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099741455 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122465783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107709717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099547994 seconds)
  done (took 3.15905612 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119657954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142093348 seconds)
  done (took 1.163794362 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130513803 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195976388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293177017 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169787722 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119991236 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140785012 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149103528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131880877 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189261288 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134381335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111590657 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097598864 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147247705 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105896427 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115625597 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120149287 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128637447 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113257908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135675633 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102306375 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146128708 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103963919 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104991005 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136253779 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178726918 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133294185 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103522592 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103254192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123603009 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114126664 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1060447 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138047582 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111917025 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17799966 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103555487 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175656415 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106860097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122571034 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113864969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09987548 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125600818 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104824922 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112510467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119238906 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104387995 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106714269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125980476 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103508972 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129788781 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108110605 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107559208 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128263587 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152221103 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129767549 seconds)
  done (took 7.895003268 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.894946976 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147616118 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099901531 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.054726862 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144132645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112768949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.899061047 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146724315 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248387033 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.918366295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119568906 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106641214 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266252992 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258366794 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277094315 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358859252 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.756513241 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113295901 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131329898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16436769 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105172871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139480237 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115744677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445265281 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100336083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09990167 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126046545 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107975323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177475711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099610642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125096354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175032105 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292820057 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210289381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121853973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100582762 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099857251 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186473364 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269568638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219930062 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190938736 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097718851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099790134 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126612888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115168556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097329765 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180860639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193250692 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19167172 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104271989 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108115425 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129457594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104340573 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179895502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097619327 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3627279 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386370711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100205131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105094649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133227277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266906288 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102427969 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236898911 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144983172 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216799637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099277359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805058311 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187542215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100731454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127158488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105715608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105544776 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125914126 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159495771 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.42218134 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107097348 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126323885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102079042 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24333653 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100929036 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10054882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180812239 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101258827 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129423511 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108829132 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127516076 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168914147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272756822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105999303 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128151911 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105811919 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131957982 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101325315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231344992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232684827 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177114771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205168339 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127566711 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160300412 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185865744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126812356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167707849 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128306889 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11205538 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104252293 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250097935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135869233 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101586382 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127974095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106166364 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161336717 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104322484 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106263094 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188352514 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483023644 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188860399 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099437016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104590535 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129554254 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179903743 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108702021 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263479734 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10762472 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186217046 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10485656 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120614779 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106185849 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182446665 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107751132 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129741219 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10525312 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11113152 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280939008 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219825091 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131094324 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250346989 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174395851 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126896863 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171452808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131088737 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164199931 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132723931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104974592 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101142191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812483696 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113223196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104889177 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127865841 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184105605 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122314647 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104594656 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100051689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098144463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800301491 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127088717 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098895327 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102350934 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127323384 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106852415 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106907589 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127349225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182861871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245007972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108968187 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125894012 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101298357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178649115 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102069265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101433919 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101198344 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12420057 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107641552 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10481703 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125146152 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187150055 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161260172 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253367066 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583709423 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101455848 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101292909 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241908346 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124141485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328459576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107488878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238244402 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183347128 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09800527 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385019003 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162342431 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.203468612 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104401824 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191648812 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099292515 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128919816 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178920518 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101928325 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107265805 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179776213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109918377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130144762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26844112 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102311963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247587211 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098825486 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191609142 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102901214 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128528216 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329072852 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100959835 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134918623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.15869539 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12904106 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102070521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.897400221 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10174555 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132999176 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106278668 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235597278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18506704 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107866999 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130831162 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110328694 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183165122 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23199228 seconds)
  done (took 46.643100775 seconds)
done (took 62.827010895 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260178826 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172052116 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.383189231 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153932703 seconds)
  done (took 1.960520678 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265637272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169326421 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.251867504 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098878845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.257449847 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098859219 seconds)
  done (took 2.07072736 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.18145429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170542358 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14895274 seconds)
  done (took 1.428884917 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20926034 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208293527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347224043 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234172795 seconds)
  done (took 2.009838612 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.280001458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117481211 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12539325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.234848929 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252221529 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207664187 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125505695 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175391228 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130785416 seconds)
  done (took 2.619617131 seconds)
done (took 11.013719902 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.421718083 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.396061399 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.141278231 seconds)
    (4/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13817183 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.357353683 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.221031599 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.397088415 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.237291278 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112567248 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121623567 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152284449 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.197960509 seconds)
    (13/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.221863898 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104769538 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102742954 seconds)
    (16/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.228379741 seconds)
    (17/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133539747 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.224748762 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129612083 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.095481835 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135574224 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.239690327 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.143035019 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173152675 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121020138 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.33115063 seconds)
    (27/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145418981 seconds)
    (28/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.139855914 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195236629 seconds)
    (30/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.157404094 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.264317481 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206185298 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105570897 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125222767 seconds)
    (35/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.174133596 seconds)
    (36/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.180963235 seconds)
    (37/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.255087186 seconds)
    (38/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.183623979 seconds)
    (39/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.120923478 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.240310587 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112404797 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.235586243 seconds)
    (43/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175189875 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113964003 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149097102 seconds)
    (46/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.26749016 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091981808 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.256224342 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.110704022 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183198436 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080896181 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129802889 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103895963 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.183209751 seconds)
    (55/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10314517 seconds)
    (56/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.253416793 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109337577 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085279839 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131693143 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.257088698 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.174396828 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106877977 seconds)
    (63/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.218156024 seconds)
    (64/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.231381518 seconds)
    (65/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.130664102 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116832944 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160346088 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.173628993 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084830969 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092172336 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.106741088 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105028509 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077291533 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.300487933 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084237039 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148493045 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078307165 seconds)
    (78/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.130121016 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103106477 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.105621742 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104593329 seconds)
    (82/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.141410231 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.143020981 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.105850961 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084965483 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087956297 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08523577 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.143233717 seconds)
    (89/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081622321 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124111383 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.217536671 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080512683 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107271881 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125061225 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212785928 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156119225 seconds)
    (97/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078480371 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.109034745 seconds)
    (99/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112639813 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103412801 seconds)
    (101/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080210759 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125479714 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112000555 seconds)
    (104/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081624835 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130331727 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178727198 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127205702 seconds)
    (108/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101244509 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136542364 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11037025 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103767735 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106144644 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084988811 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08116053 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104205849 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.109533412 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.13459002 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104595493 seconds)
    (119/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.167051061 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111541139 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08494495 seconds)
    (122/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081463851 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131402254 seconds)
    (124/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.150420874 seconds)
    (125/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110910054 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.143294758 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.147974334 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110318778 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079600206 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125733727 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112693731 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113838429 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135202738 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085658449 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102581411 seconds)
    (136/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110625101 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.108480345 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.129741289 seconds)
    (139/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.13711164 seconds)
    (140/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155128386 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108400726 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124614869 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.147607388 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085761185 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104319341 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081116181 seconds)
    (147/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078451038 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137261728 seconds)
    (149/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11400081 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17275472 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106050846 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112741501 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084443909 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125434457 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105170567 seconds)
    (156/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140709654 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108482999 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080624987 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078912269 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083719515 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104441843 seconds)
    (162/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103701385 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104751519 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.133790617 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.134364991 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086300639 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126027898 seconds)
    (168/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078928961 seconds)
    (169/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.08375681 seconds)
    (170/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105056097 seconds)
    (171/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078936295 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081645298 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078669012 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078632346 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103504852 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102794217 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104610369 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084647496 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126184762 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086273331 seconds)
    (181/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078689197 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105995323 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147106835 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082764226 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110803615 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085377686 seconds)
    (187/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.102605785 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080089095 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079038124 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101240667 seconds)
    (191/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07871853 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135991455 seconds)
  done (took 27.198512326 seconds)
done (took 28.133610147 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.213227604 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128203524 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111664199 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112660974 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.229566273 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118974697 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15264469 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113119064 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12172344 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136708585 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102220261 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124687224 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134922185 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205167641 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138980941 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105098212 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102289754 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14637853 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127711492 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128871415 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.229524578 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104625735 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148388912 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103877665 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232298395 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104437094 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111368352 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138147595 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127015453 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112201978 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13783757 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104280789 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129243879 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15042269 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1045839 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11362262 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101237385 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108396187 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114099845 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113941864 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14907608 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113249737 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111625927 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129172712 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113061375 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111292783 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125728977 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116354392 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101536375 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135498236 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105388262 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128671111 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134856744 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103048369 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10173249 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103897081 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145842428 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103194337 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125443606 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127212895 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10462825 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103095513 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138005677 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103506179 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111193679 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126262635 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113016466 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113765654 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111299768 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128265682 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103229328 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112212384 seconds)
done (took 10.067139125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109082726 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147252315 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.230562141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.233384218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131356089 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145831743 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117402708 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126323397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14163072 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121713033 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140588478 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159083359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.236766002 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118888233 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118317211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140615437 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115357546 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111323095 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.23381423 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126929619 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151927909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118998582 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.153865097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121661141 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106450897 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155570132 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113353241 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115684055 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13033061 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125819073 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127773161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130335289 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11022952 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124862456 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147754543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11921523 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119360011 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138112465 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10707018 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107376225 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137271017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122510341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106232922 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142879203 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114730931 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.14648909 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115192791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119921744 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107712021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13904778 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108482231 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154159618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120675402 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123709377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.143087539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121456576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120686995 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14322778 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111293203 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120237427 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130870762 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107456612 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108373278 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150869255 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111766029 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120048366 seconds)
  done (took 9.743808413 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126014348 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137498979 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142159279 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118182487 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11320874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125143567 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102344369 seconds)
  done (took 1.843062585 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103294979 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241368403 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.214486353 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.241557883 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.238931361 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252217618 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126829605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103031887 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164461277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112976378 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244491286 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27072465 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113351076 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144111482 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219439567 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130456115 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.219542862 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130621918 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118036518 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.245323515 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12024483 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160478089 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116895242 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103679315 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237390383 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104787278 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.290079416 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148548848 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114426283 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117198842 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143138244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183225256 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241059076 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117938741 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138256827 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213915541 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.238810466 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144739705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.22914534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135022338 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211571806 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144797883 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119302042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118191007 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146345076 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.229581569 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124604812 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11944389 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143086491 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222389524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142815298 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216038017 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143790631 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118302544 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113122485 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1465634 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126191885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118658455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.247936348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14827507 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.215679592 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.243324028 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.241736886 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245025363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129333276 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245376385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.231839817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118081356 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113251552 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147586156 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.219310151 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145240607 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115264309 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.23516538 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121211014 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.246949909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247706779 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115261725 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.141572892 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109860619 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117004334 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104528446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.234940421 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118655033 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143924797 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123200862 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1429202 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12024497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109391984 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153394088 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119352398 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116077401 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147257204 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119595306 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120073719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.245733833 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.142323126 seconds)
  done (took 17.027522146 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106176979 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105579697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109307127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130687499 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106536173 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105329386 seconds)
  done (took 1.663730283 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142397647 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118713769 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153225001 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120198456 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166653385 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.248634411 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.257609923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112421349 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.164466236 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129952978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.250353554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254572945 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.250178741 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123464094 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.256682501 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12184685 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259606547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117593795 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125926279 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141715368 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11787756 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14850876 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117834258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.241650981 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121323249 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120283871 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13825997 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128643873 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126948336 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140695824 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123164126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118505851 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135957652 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112543362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257543365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111455863 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141728148 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122523123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121847617 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147114797 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.228622369 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14371213 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12592586 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121453014 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13942597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111325749 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146970784 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113707406 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.257816793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122624392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122468227 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147641679 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120259077 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121703674 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13923272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113745749 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121131605 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.257698133 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150693884 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112859114 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119899744 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147621496 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113922867 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123635485 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145897254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122364932 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112137165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145792353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118989572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119632741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147116822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120491649 seconds)
  done (took 11.773001861 seconds)
done (took 43.025012819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.581296686 seconds)
  done (took 2.582085194 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.066186349 seconds)
  done (took 2.070160807 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.706662978 seconds)
  done (took 18.740256566 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418554343 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470686391 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.283324088 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148234213 seconds)
  done (took 3.323406559 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834923002 seconds)
  done (took 1.863455332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.452998457 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.282230512 seconds)
  done (took 1.745713195 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.707143625 seconds)
  done (took 1.726554055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.719582986 seconds)
  done (took 2.729104937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295159741 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24822109 seconds)
  done (took 1.569200874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.661429571 seconds)
  done (took 1.685414884 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.430007057 seconds)
  done (took 20.459359393 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.303592656 seconds)
  done (took 1.334748504 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291851429 seconds)
  done (took 1.324677042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.50200881 seconds)
  done (took 4.534374867 seconds)
done (took 66.703856826 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120170659 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.141994802 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12285019 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144572923 seconds)
  done (took 1.54816419 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124797155 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120038379 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146149171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119744347 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125763479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119486843 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143716321 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122008741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118941452 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14724121 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119931103 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118413731 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148308803 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119057877 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116333649 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147897508 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123945161 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119763415 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145187318 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121752843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121071262 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147006474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12269577 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122839992 seconds)
  done (took 4.112741152 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116118327 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110938549 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111891603 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134097988 seconds)
  done (took 1.506713179 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12816113 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131424185 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153910284 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126362577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131226883 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154493459 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118421344 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116031585 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143968238 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127800539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134412763 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157145472 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13100402 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12025775 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153892894 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114231425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119954849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153909586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125276057 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127100869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145904797 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125783383 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123158469 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153413992 seconds)
  done (took 4.24755676 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195253181 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130710966 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176305311 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163925385 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177840213 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117022214 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147233388 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151196461 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125294215 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145580803 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122942659 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165028388 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151172786 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120710602 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119853719 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150729363 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132141245 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125600958 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190723624 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124960165 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152661033 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131671633 seconds)
  done (took 4.253807206 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122019707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110634949 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132571747 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108542923 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122238729 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135884808 seconds)
  done (took 1.769705142 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110465793 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104514617 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104118967 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129481689 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108451291 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105010002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127277568 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.1062339 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104902726 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104347697 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129609079 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104839659 seconds)
  done (took 2.369696175 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205878694 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145919952 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284057211 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391956896 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164117449 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188571116 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284100304 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188581873 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204572802 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139319951 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22414219 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163869302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182085724 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190055663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16972284 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158419307 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197235696 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23741846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143503374 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251083954 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158408482 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20389206 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225258673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151442862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165202083 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163388515 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118642531 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155224557 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169697348 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192883816 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203706491 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151896341 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167814566 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194462369 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263506414 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208731082 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282709066 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134204217 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.196710978 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.22543628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269646719 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143081603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21990024 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153106062 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156558736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186994589 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180698886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210313895 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135066966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144054701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212378124 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206762327 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170847773 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164013245 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320161594 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137263615 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142280174 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205093608 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215451071 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234950338 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179879438 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123524647 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20087743 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224558793 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241619133 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142607869 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194398184 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124940329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193078254 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239231958 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183613433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18774678 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23881745 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13242103 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199201309 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178775597 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183409427 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233353767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171787278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119980201 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178730759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133596458 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153110462 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18767177 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12095763 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250693611 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159403371 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.191190514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207906187 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156386786 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190166501 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188134329 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165507779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175617584 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101658598 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143200264 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.201211551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159205371 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156396634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155745643 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169433417 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.127397695 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1534237 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148852797 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171362294 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160105974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162733124 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198204324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131581467 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206151983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148091877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190222514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168954795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228324915 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156840405 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133216522 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256811359 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170674078 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164468121 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184606576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231951353 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176429908 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135313436 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19363447 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193823461 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171549399 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233538846 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139441894 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134649665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167225386 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197645036 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161338533 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187142653 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129267137 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189750876 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201860726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15603765 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139667831 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209887235 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134171951 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124298139 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164932007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138549113 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169850231 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148690067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139552174 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181980334 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192124781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1659035 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186060113 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137374872 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202126053 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132098781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19458913 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148925153 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11868681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204482427 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234173634 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129233124 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208273343 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161776857 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209447375 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199476553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129573739 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211212543 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130057181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120778348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189751853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169562275 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19061586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22630315 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206431279 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166930166 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192439904 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149131883 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197643709 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.218917364 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157275028 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169043214 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171408459 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19898529 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121380869 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124062844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155870939 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138288535 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130249245 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164489911 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20713926 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164702299 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20499185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192329835 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137750338 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227802991 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125453943 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187498424 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175801965 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16503614 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197442915 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227080133 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206172098 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141122415 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190638907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121870595 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125994584 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161071111 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161512648 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16562581 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136074776 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16762816 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200880223 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201040719 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149383243 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217435262 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194164984 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236947589 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121522088 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160311168 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207209101 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193241683 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185838646 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134414928 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187877384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200261779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169623386 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220754329 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169002985 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207149666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221218005 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165354616 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130618845 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176065197 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160943651 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166927861 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171820732 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17484486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130863568 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180985934 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138529906 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167539182 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188129231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171584808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178850118 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.196024089 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201334961 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12776932 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140949139 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203438231 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172369825 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105420319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169326351 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231960363 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178600016 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156359199 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212448105 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131144051 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34315062 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196534839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205469355 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137217869 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166066159 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17147376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197626598 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191384394 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185571084 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168750649 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208444105 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198962103 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142176041 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159045015 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149257179 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180162995 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13948764 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.185218665 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161922616 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17187877 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216133769 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139196192 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16892197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205035989 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144282035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178029343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139582695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26206503 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196588268 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173862123 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19275859 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174829984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211456569 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124164881 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15626184 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133004623 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214564785 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130138057 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204294904 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.165626439 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209702156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203145176 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162241791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169820408 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128514038 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193865295 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149713871 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21144735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1355011 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16523002 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199594166 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154935345 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13182661 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188569091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290457397 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174284733 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211191801 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107541748 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28264963 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152916792 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133392522 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1994167 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171677488 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162212806 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182314595 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200467671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141207621 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201121106 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135418268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203982364 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183796137 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1951216 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20540992 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145175514 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191129123 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161101841 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212536595 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145646664 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177528092 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159234914 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230380623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.214907217 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132928287 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199743417 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170450446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199052337 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174640505 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167596592 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182564068 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166084528 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16717461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12575852 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187926691 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.167959976 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157984266 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185767617 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198623652 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131160114 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15606391 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14808154 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193236794 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141021564 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129217898 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21414874 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1574497 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183965363 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238056529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129282082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195475207 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146301915 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158860564 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139967171 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143937717 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159700196 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173495735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220643421 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130934527 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216977661 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165656121 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19300108 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186139732 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144434079 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26334955 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158686659 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228297607 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152291503 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226434451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150951667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203260904 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168328738 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179504391 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165470763 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176219267 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22010243 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192868869 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167558807 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160311797 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143639914 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164342896 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135683874 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151260087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196240387 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141794148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164795398 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165680776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173728656 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146894308 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170684414 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209351762 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180958626 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216245795 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187738259 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164846941 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174454168 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206119996 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12954755 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19542094 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173660631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174078282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15203728 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163032115 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138970047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242947934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127216597 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188309351 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174959818 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19950016 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1713463 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170854758 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177059736 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170068974 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175833673 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154544582 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152813986 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196434686 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135430979 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126683218 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199211785 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188987231 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165175055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142492561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201892922 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203841564 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150844671 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133821417 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310897845 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162216997 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223371422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134244795 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166079081 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146211331 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188557218 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163565144 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199998617 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130866432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15720386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146133387 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181085528 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151631572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196375461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182380874 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189268691 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18592937 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16354007 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254616666 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169404852 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172308364 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116056937 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.157985732 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141223965 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161519143 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143574892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20704232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242213832 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163952623 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146406537 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164709074 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126703822 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157981821 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174829914 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17994041 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170378649 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17601987 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104795938 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141810422 seconds)
  done (took 86.070885483 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162291238 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153431104 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167330357 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222588501 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1953152 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291341169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229177188 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246687096 seconds)
  done (took 2.784572745 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122712601 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.47810584 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.250237128 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120743916 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136752935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.698574309 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.72580745 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.156520183 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193396521 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152302678 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135649372 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.072057208 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116849636 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146796251 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122571034 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135336763 seconds)
  done (took 5.869489968 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.664935534 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529287419 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.834640634 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278736143 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.26510117 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.211146474 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.751304618 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206928758 seconds)
  done (took 11.857927674 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175436067 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170885976 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.405437591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.318676768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.178507477 seconds)
  done (took 2.375432797 seconds)
done (took 129.788861492 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125419371 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124904222 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124702171 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15390365 seconds)
  done (took 1.64280786 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.19348019 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092197269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093452527 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118285433 seconds)
  done (took 1.622902675 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.7787799 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092564564 seconds)
  done (took 2.023166214 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148827584 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137839944 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169754897 seconds)
  done (took 1.59538507 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135736116 seconds)
  done (took 1.265101099 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118611242 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117259395 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.269031837 seconds)
  done (took 1.639640139 seconds)
done (took 10.922624518 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120738608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931002119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434047793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1348059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713405385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428986047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.403232842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175321317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175409317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138464395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133213379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691481368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.415169066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880374872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.372589979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907235969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69818662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114337445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146173267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112921064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.383468247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13778442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113868321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114199228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72076938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422645505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112154905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918214669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111292575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115482423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429199761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113287311 seconds)
  done (took 20.940586789 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113091965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17111345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146608378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11328787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114729883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140008796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123194576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124249669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202195754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110959501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160517759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111684454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117703864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139131519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136199512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111206041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141491735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11418554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119163477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140228377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13456369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110541082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140302967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114595927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111907596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160337429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112653991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123406056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138795862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116387426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117473039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138763805 seconds)
  done (took 5.309965604 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160413276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177260181 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148828144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149235248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187859224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114561147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225976781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152141973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204908738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112512003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134238648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13860317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1531377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11289592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164421887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112120263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115899794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14166613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121307116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114293934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16201327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112703228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114050258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141091545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112903394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134432947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139372192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125127854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111354244 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143317875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118565566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11194594 seconds)
  done (took 5.605532798 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126554571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128447968 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135731995 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163611658 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12129664 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125335351 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156413814 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123145338 seconds)
  done (took 2.228532692 seconds)
done (took 35.220849035 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136046211 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128652952 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132265982 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155948812 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.253569256 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118825794 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131326547 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119189179 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15554478 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134447125 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111208346 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148863134 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132268077 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122680894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.254490812 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126528869 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.25856675 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.25636633 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120338627 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125945415 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150500912 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229976172 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155497217 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120397294 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.252215174 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116395388 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.251664335 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123879091 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122588145 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140572625 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.227314521 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.155558538 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121100316 seconds)
  done (took 6.424554896 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.238017907 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152995922 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121354398 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120749294 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122506081 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148973204 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24558535 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150525566 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120674284 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119999199 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150841947 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226102984 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157194012 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116788316 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122281262 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109832472 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.277375147 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123320291 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144634453 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094076768 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117062721 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.149431991 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258818387 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147075965 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122334202 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121535777 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123376373 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156107281 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123028913 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122772177 seconds)
  done (took 5.658984568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12580713 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134449779 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13839623 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217927992 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148903154 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161350895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140318612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132471664 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171161011 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115635445 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129292489 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180155172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132271289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124000475 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143438282 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132141594 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130200845 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144290834 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123223491 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132407689 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163384464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132162896 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136661862 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151828385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113443965 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121382824 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152924335 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125545783 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122293066 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157622768 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116472562 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11747702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116127477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177292936 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115343369 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15598024 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136991583 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128676628 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156254786 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14780008 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117458163 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144502803 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142172897 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170582446 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.145627038 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128588977 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126318997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158245542 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113013464 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133483525 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184822526 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114608778 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134881467 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143421031 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113572683 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123704837 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143115546 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119323903 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128832514 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116701712 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165088312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122904037 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125126387 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145280486 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126606602 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113328866 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141655025 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119690988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141746936 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150683757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152002849 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114489559 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153528602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128557199 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126258374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155589059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113708105 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127427168 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125547739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149039274 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127240482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117417096 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.146731998 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131964407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134763367 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158757409 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127332533 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127161143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147402753 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118647979 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132667848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144579768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120668347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128378476 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143457489 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120054722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128021029 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124888368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142985292 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140947672 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117070265 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.143289451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13978286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118100772 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148815433 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124559066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15671078 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144454264 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127016711 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127480457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144462505 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124153148 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119284233 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.142366009 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130566254 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131024413 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150778042 seconds)
  done (took 17.121004634 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.352422609 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346779084 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185539795 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.422149702 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128801784 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.271717863 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.341173832 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347221528 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11525055 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180225712 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178258632 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310001083 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116139629 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.174100561 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350615466 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.398400663 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17626648 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.155303548 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181471541 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130227803 seconds)
  done (took 6.020887014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13603783 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149703045 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165994293 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144537095 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125630362 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161140114 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115332613 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137432281 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156166577 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125756634 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117881261 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160000095 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129372667 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131727575 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159222901 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.14853048 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122362627 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149559103 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13819376 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119605853 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131873753 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141055507 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123812672 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165583346 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134916459 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125106203 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14382199 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122335878 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123397116 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151798913 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119350512 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134171112 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150683966 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105832243 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127344406 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130452133 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151231732 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118711813 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120490252 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147532727 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131453728 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128470108 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151453129 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101012427 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136211246 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109835196 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157385098 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128248711 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107352129 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134142686 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157194012 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130146927 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12250657 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167339646 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12279718 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131612058 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156172723 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129966527 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120249928 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142594739 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113904429 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119198189 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152612214 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130116406 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128301301 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.164756566 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13220089 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115641941 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147981248 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118870214 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118934678 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156979879 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136656694 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125254965 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.150336855 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128566838 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124286057 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094501263 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154584951 seconds)
  done (took 11.823462537 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140408916 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126248875 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132421657 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177222048 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128473321 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121214227 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155762964 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135986846 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129728298 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163281727 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131102844 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129008025 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166732096 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126521396 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125832622 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160247891 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129005162 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152266709 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163033232 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141678562 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159320749 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12218998 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128226012 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126731968 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172526828 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127395391 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170214173 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130115987 seconds)
  done (took 5.150591496 seconds)
done (took 53.348152933 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.304590549 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.572672894 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.27516893 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.275036162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.286586723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293036077 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.278894264 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.275747495 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.756988511 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.250433523 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.275762302 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.274182212 seconds)
done (took 29.292860357 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.36143856 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.497604339 seconds)
    (2/2) benchmarking "String"...
    done (took 1.677115784 seconds)
  done (took 4.342797781 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.266441633 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.264400522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.598038759 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.267385538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.265562052 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.266050731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.280663204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282286525 seconds)
  done (took 16.392596712 seconds)
done (took 26.535291953 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.292130096 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.456154515 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.516536356 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.25028469 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.271462663 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.265711024 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.273731387 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.287772628 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.26948825 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.24927269 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.739508285 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.540223027 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.275045032 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.651419151 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.24553695 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.267207024 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.282950507 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.506251738 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.268567393 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.301866739 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.246921274 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.247149166 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.27019225 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.270492428 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.274383426 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.280243109 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.26748625 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.268693875 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.463674396 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.282427325 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.303369793 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.271215005 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.266013017 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.267550503 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.274065648 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.274426587 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.461446459 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.273340905 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.254423835 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269247367 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.474478982 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.279706239 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.266829253 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.271225761 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.253112913 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282047319 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.247377617 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.442121865 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.286286755 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.289464673 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.324322248 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.644499695 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.268596028 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.269253933 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.277881356 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.491756948 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.278855433 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.316416215 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.295898033 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.268618936 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.269258681 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.265618274 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.331675837 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.26663251 seconds)
  done (took 147.829389482 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.267789919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.27051324 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.271659545 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.287244139 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.27009084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.270592999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.265168427 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.265559678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.268057202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.301638987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.269017938 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.268403266 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.271246783 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.276678131 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.276049908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.293357347 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.270613603 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.281982576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.277868296 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.267206466 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.269465552 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.271799648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.268608948 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.266418935 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.30588848 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.345436734 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279786836 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.287381028 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.278942455 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.266853138 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.301164904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.272267863 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.912121577 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.230180388 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.273566003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.271901267 seconds)
  done (took 82.763407556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26551442 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.267202485 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267013145 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.295522706 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.267343634 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783878662 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788197507 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.24222354 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.454661868 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.457845303 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447064392 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.266047729 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35647089 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.279254785 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.266950078 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357297741 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.292591467 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265851475 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266461747 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777210147 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.284088989 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.249495065 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.436441952 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280736747 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295967106 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658771552 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265230027 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295113156 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.589645443 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.311808226 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266160662 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546855784 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.331817266 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375743871 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267645976 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297256166 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.268345717 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.541519072 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26730976 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266572167 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.269615571 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.264284306 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843931899 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.268985323 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.769316824 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270646149 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172989038 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.267149126 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271033349 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.291048603 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.842702972 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269830821 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.265458618 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.269245901 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.270117799 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.265938357 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267043735 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.296339709 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.275254417 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.064372153 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269011653 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.26959392 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297133036 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268446847 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.51800896 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266931221 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.412502317 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.328324782 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372859217 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764661694 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270527139 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359679678 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378817097 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267114415 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.267072719 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266166389 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.265982707 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.374645407 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.268146948 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.925869763 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432642028 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.283396862 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.40561401 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364362046 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.266893926 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546459924 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.271117018 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267335532 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905296407 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35756607 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.267159531 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.268085417 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.267714001 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.266690827 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.930388424 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768333459 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441553776 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272101083 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.979990333 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273203457 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267543868 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.092114856 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757580905 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.840624636 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.269322237 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37355749 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.432638676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.283905237 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267162186 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.4028902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.274137863 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329768331 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.268781945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.667248607 seconds)
  done (took 382.486697097 seconds)
done (took 614.25158564 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.258454863 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.254750761 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.253170043 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.25334786 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.253714596 seconds)
  done (took 12.443531821 seconds)
done (took 13.614070686 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522072814 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526936142 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35683588 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525009291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333606809 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53821977 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509841649 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.322036832 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437673045 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.374465845 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441986233 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347939008 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.329135849 seconds)
  done (took 19.737012158 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.623813195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284166723 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405887648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598029331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.34808791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.6358553 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.666974759 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.285960526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.517829118 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321657943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319681015 seconds)
  done (took 19.183862697 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.633213414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.285059295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.406919483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598911565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349568755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621415684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.66614721 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287714939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.527424751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324329163 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321597879 seconds)
  done (took 19.193685036 seconds)
done (took 59.291564593 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.330521849 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396145837 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.3283831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.312769242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31137109 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.31112916 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.313211617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.310200411 seconds)
  done (took 11.786495965 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.309137147 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.309874181 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.30953594 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.308964359 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.30950102 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.310749502 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.310298957 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.309324321 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.3116441 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309736246 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.3104297 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.311851039 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.312163229 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.309682887 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.310621274 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.30916641 seconds)
  done (took 22.136985507 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.31302549 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.313860862 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.309739738 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.310858524 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310252163 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.313532398 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.312682919 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.312243407 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.3104825 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.310985287 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.313908842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.31333328 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.311544785 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.314794291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.313695827 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31424457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.310771922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.313385382 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.313825173 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313929725 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.311994423 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.313028563 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.312782722 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.3134657 seconds)
  done (took 32.676980362 seconds)
done (took 67.775516008 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275472181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.289528368 seconds)
  done (took 5.740884717 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.410893592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.411670297 seconds)
  done (took 4.000446984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.314362602 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.312723846 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.313943554 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.314391306 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.311335331 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.313120963 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.312498258 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.312602671 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.313085694 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.315977891 seconds)
  done (took 14.310782189 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.31397596 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.312898379 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.312500564 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.311821775 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.31402457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.313972818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.314315947 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315341008 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.314810912 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.313035547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.315257059 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312897122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.312936023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313101129 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.313933427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.312599388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.313349064 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.313192062 seconds)
  done (took 24.820440225 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.334018384 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.338923127 seconds)
  done (took 3.851206987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49515298 seconds)
    (2/7) benchmarking "second"...
    done (took 1.394913487 seconds)
    (3/7) benchmarking "month"...
    done (took 1.478979834 seconds)
    (4/7) benchmarking "year"...
    done (took 1.469526747 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.3950575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.344244963 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.394137062 seconds)
  done (took 11.150284963 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.311565877 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.664394893 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.853441069 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.523808929 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.30618747 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.331632186 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.268737247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.334720777 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.334773088 seconds)
  done (took 15.107037215 seconds)
done (took 80.161045272 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.277739578 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.302747158 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.307818264 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.303438656 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.71550649 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.316029992 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.283238183 seconds)
done (took 16.690774016 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.261289023 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.264646852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.265852453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.295039613 seconds)
  done (took 10.266650668 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.281080367 seconds)
    (2/2) benchmarking "read"...
    done (took 1.697585985 seconds)
  done (took 5.160584737 seconds)
done (took 16.610285918 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316315853 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.316731408 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.316596825 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.318128164 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.317880577 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.316876818 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.316957694 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.319812736 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.318885943 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.316596335 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.317820653 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.317241948 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317634317 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.316244755 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317891961 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317556165 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.317157859 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316820176 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.319611454 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317670704 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318805136 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.317525922 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.318603016 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.317845796 seconds)
  done (took 32.80552967 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.315411059 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.316938557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.318946983 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.318406202 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.318729427 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.318447409 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.317653034 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.317924367 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.316969916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.316672183 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319073675 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.31835466 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.317887422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.31949377 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318774196 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.317002742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.319034495 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318255485 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316362507 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.320654463 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.319050977 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317446932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.318572075 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325914978 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.317989948 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318485123 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.321290089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.318027383 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32157986 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.321062615 seconds)
  done (took 40.74416216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.323267086 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.324446146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.318633047 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.318665313 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.320931733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.320395003 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.318961162 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.319878387 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.319276634 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.320185199 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.318794311 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.324589391 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.32021593 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.320247498 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.322022794 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.31979346 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.319974279 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.321161721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.321413918 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.319188075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.322806063 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.323264362 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.322541505 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322701721 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.321583842 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.322020907 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.322856629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.323934489 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.322955593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.321661156 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.32042692 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.321884578 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.321971809 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.322647035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.321751111 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.321704737 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.326756985 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.326827594 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.321954139 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.32157979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.322431086 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.323016635 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323897613 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.322735454 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.324643029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.324799333 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.320646501 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322602546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.321868863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.32092873 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.323878756 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.323043524 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.322259276 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.321887162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.327443664 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.324569626 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.322227568 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.322663657 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.3232344 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323302356 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.323726921 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.327813404 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323408235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.323503289 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.326140426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.323073346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.324138636 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.326119893 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.324621448 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.324645892 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.324671803 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.323381347 seconds)
  done (took 96.408507886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.328962782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.32391193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.324112095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.324035829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324337613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.325961563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322952102 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326792115 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325378318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.322087955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323140184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323685156 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314365605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315583706 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315568062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314870767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.316276043 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315628196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.316502887 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30885415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30546573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.305999387 seconds)
  done (took 30.213936353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304934028 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305607578 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.304360282 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306259267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298804128 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297996624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297388306 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298880605 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298474478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296555169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296326928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29539776 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294319341 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292179962 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293348127 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292140502 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292488381 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293824446 seconds)
  done (took 24.528192587 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.292342763 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.287634831 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.286458914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.284699821 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.28548344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.286322025 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284026062 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286879008 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.279214696 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.27724196 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.275744143 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277284773 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.276644188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276975235 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276280803 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27817902 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.272287768 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271948688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272404123 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273611539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.272741038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273643597 seconds)
  done (took 29.308015845 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275744423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270198676 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270858815 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270292752 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270824523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270501018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.270832206 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.26941366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.26978724 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.267229793 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268541202 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267726574 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.269413171 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266929544 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.267613011 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268060624 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269665787 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266262212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26624992 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.265772484 seconds)
  done (took 26.525254644 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265570015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26863891 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268023958 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268268192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265600675 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265354624 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265680154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265369151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265118909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265086992 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266212833 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265554579 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264178776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263307087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264243659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264305677 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265033354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265327107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263958078 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264261048 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26456821 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264563602 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265061779 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266256135 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265253493 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264374192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266386319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265656338 seconds)
  done (took 36.567559605 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264281932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266731684 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.264218236 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.264539157 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.265005208 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264770401 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.265486484 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.267104498 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265653265 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265337862 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266834281 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.264452274 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266232528 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.265671284 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265986967 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.265382979 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265258802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.267499589 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265892402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266300903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.265473773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265710256 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.265904694 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266798313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265550458 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.267255913 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266943164 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267351246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267559862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268889082 seconds)
  done (took 39.117453275 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293784496 seconds)
    (2/2) benchmarking "in"...
    done (took 1.292359664 seconds)
  done (took 3.722984746 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.267401951 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266784345 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.26682115 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266482421 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271246644 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266207246 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267629284 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267023691 seconds)
  done (took 11.277628112 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255281067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.269431608 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268437698 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.267176574 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.267337069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.258182342 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276011636 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275541533 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.261830782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.262598687 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.26813305 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.266677347 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.268593792 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264745537 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.264725214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26914931 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.273395381 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.272200955 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.271206834 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.273366048 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271779882 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270237927 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273698911 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.276385565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264115988 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.28324796 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.281195185 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.276826404 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26609096 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.279397541 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2656115 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.275152657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.272398676 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.273013069 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.274982664 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.274225864 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28481024 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274761686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.282923757 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278875966 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273971851 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.272686422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.271903501 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.271083564 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274386079 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.277353426 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274885864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2743154 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264147278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.268962555 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.278820163 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262582134 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.27646302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277736086 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.273100231 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287618209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.281904144 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.267430376 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269394104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.28642057 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292329772 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27927043 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276875223 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.279416188 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281936691 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285778101 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288517904 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283601846 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.275943261 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.275509267 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.284862412 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295062591 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.289859276 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.281785345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270422796 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.271198244 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263768947 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273766517 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281211598 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27904121 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.276638461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271839108 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27258606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272878206 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262587163 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.269910581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.26732743 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.267159043 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259069676 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279390068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272700321 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.265309227 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.256396292 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261041575 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261364382 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.267938961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25780087 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261370947 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266389183 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.265074001 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265427957 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257814768 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.270274454 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26912752 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264495087 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.273628022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271732041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258085823 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276412524 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.27270898 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263840185 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257410177 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26666303 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268178586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25879967 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266913691 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270371114 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.269147215 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.269845697 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26733658 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272298314 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283721974 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.270785621 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.266151233 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261242648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272943159 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266043818 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26878823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.272700181 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.265555976 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264526027 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.270992631 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.272938689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261033054 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270037552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262147162 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.271062054 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265982357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266717087 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270063742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268173907 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265274376 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.274015711 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.275940817 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273711622 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.269827469 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.281997941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272441558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.273686618 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.27192634 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.273125235 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265996884 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261305576 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.269796948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263734446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270565482 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260362788 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.270087139 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268126903 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268008452 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267945736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259562616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26654011 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.272068676 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275365953 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.267708205 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.272335958 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.269092879 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267947761 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260045918 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.270764041 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26088129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266799291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27187738 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267937075 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268016694 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274988181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275141762 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269032884 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269347101 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.263685556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271215635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.274038479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282107731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278641858 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269281519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.269180669 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264585182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264995569 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271208371 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26576571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274979451 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283266748 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279528423 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267971437 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27168846 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.261314096 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271964682 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277306213 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.277542487 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.27016159 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271035654 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265678967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2733738 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268159589 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.272960339 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262088985 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.271087476 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.272477387 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.271367329 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270589298 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26455508 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267923456 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274421838 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272389666 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27045611 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265177296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.273944752 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26378976 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265326827 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276855318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272046327 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.28072655 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.279417096 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276014569 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280644277 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.271660803 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266715062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.273813451 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276413991 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.272133489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285586247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272880371 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267749691 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287383682 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273748499 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264650414 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.280833687 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.283458253 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.276332695 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.266662123 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277727636 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273444409 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272289584 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273552314 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266410693 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27588194 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.283835395 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281607808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268086675 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277227013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268785437 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277313686 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.277052899 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.277981439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.27505481 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284238031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281690011 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273665038 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267818764 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.276841699 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274989857 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.274483997 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268254155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278554137 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.283861028 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274168314 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.278734677 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271320606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276261249 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267197735 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.275668924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268858421 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292038115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.29191268 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285607338 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280486436 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.278321635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284584374 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277226594 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27014413 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273120346 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272246841 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272029215 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272843495 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.281239395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273042263 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.278732791 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282090271 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276659343 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277733223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.276853503 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268713082 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.280927833 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27571034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276266487 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.268257716 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.278322194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274448099 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284487993 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.275870975 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272688517 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292103765 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280369592 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275261051 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.277487381 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272825196 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270053475 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279584297 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281845338 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272650943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.286678704 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270831717 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.27623401 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.273164555 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290626832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.287169549 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.272068606 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281493338 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278331623 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267216103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272237413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.279615655 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29021868 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28979572 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.2711078 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.280334671 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27857048 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277388556 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277978016 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.278414525 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279286283 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.279050708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294166947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.281623033 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.273604346 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289200952 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.287867053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277671413 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278696265 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270026098 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28855052 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.287187079 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.280248976 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27725055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274307089 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279990144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.280628354 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278577884 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.279393979 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.279309121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291742756 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283292728 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282538163 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.282021617 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.292032737 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29072042 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293273957 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.292182268 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.277561064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.285706933 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.280459687 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274409616 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.27535387 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276892334 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.283387852 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273008321 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283161008 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279845991 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.284919821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.288925917 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.288574476 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27284587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289466419 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295114135 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273092829 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28427379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.281286468 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274069699 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.286149377 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283236437 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271841412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.277946099 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281032525 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285134583 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277092219 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.284962843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276007515 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286364139 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282250767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287018691 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28179156 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.282957491 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.275162295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.285272589 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29014381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.290901098 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280103077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285681999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277326328 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.297185418 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.293033493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283096265 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286932088 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284640735 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.275742816 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.284170983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.289616438 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277538646 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286672139 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.274120124 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277790423 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.279590023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.29384421 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.285710424 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.28695304 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275394099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277994011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285630526 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.284011675 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283895599 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.287857486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.289150387 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276470493 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276345267 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.288095505 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280499147 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289591295 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277928638 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280609217 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282699777 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.287947091 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286789193 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284112596 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.276862093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279343274 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.299571265 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289367594 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.283091725 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280625979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288895396 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27727234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2829005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.283249986 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278987223 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282281008 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.289092908 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280439992 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280355134 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.286730246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287497383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.298720529 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289904393 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278235452 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303082606 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.298846174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293193988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27912502 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.283161706 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282759351 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288849022 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.287873898 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279157077 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303534758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292845061 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291366381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295233353 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.288139295 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280426513 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289028724 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290567188 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.292848553 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.293138814 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.291766293 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29378261 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289233358 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.289138933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281407224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.283415999 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.284187745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.285192622 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290657632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296479461 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.293555067 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288923473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295666998 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289644584 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288532641 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.289448749 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.281544183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291511371 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281881515 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.297684643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.291196109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282127497 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291994883 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291445861 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284160437 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286874678 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294806414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.290229435 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283520342 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291095187 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.303171304 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300173228 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289876667 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284680336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289825682 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.293727296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289552114 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290814915 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284769662 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.309578054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.303173329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287061295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.289425212 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30027324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.300219811 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.290965422 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.291190241 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.295717633 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291433569 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295180553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.291537912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304011914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297510878 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284931415 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2941263 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285915339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.288234838 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300642422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.303827393 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.29395428 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288079999 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.308164956 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302274612 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301226295 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318392863 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299131614 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.296562084 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296818681 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285035478 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.295291671 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.296582757 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297789125 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.297517303 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294762553 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.293717868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.28518878 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302227818 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.308424416 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.301414027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.29370816 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.284782792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287475244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.294886731 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.294850623 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.294758433 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293671004 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29328087 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.295039614 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288241752 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31063615 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.31028813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.298955615 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.294498762 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.294084116 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302181025 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.299590751 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293190985 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299497374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.294919906 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295033537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300453919 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302306809 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29554729 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289462717 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.290423035 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289680413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.297029951 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.310204531 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314205878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.305051222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.297456611 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297601183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295548337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289416272 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299805722 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296730122 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291269651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291906324 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297456821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.297868884 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295957328 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.290530032 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300524599 seconds)
  done (took 764.033289029 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295959354 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295814712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295649119 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297388655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297410026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295664972 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296387621 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296434414 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296530446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296536941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297084497 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297165373 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296949145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29734249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299165278 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296714966 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29796736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297375874 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29616762 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297045246 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2970919 seconds)
  done (took 28.395473476 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.298685399 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.297240662 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2965331 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297766147 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298398141 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298938713 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29775176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29765978 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298096008 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297119696 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297186745 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298646846 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.303212441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.297008859 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297904014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299444085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299283519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298093284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298779405 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298487469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299389189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29753602 seconds)
  done (took 29.725937147 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298805107 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29949004 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291316445 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.301532898 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299495278 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.298816631 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299134268 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.298631551 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302064459 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.292878165 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.29139362 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.291544965 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295726712 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.303449343 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.301790612 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.305178124 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.301211488 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.300093888 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.300076008 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.300692987 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.311972982 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.312697306 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.299965938 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.290465708 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.301386511 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299064916 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.300943437 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299785398 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295312972 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303032599 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.300624193 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294394909 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311418931 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.302723552 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.292398356 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303037768 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.301904104 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.300219952 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.30089825 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311144665 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.31534436 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.302876365 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.313224677 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.314886131 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.302269443 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296763157 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306052467 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.30192757 seconds)
  done (took 63.626088906 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.306579698 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.301894605 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.30214764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302148269 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.302430149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302209729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302253311 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303710828 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.301673768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.302598186 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.303029596 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.30388599 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303266288 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.302462066 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.304170872 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304387031 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.303261679 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303739323 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.303345628 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.305829394 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.301800041 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.303544536 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.303873419 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303019609 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303140085 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302105387 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303798409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.30464279 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303640917 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303462123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.303496834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304326549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303936695 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.305286657 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.30339738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302971978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.305420822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.303946054 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305916625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.304301616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.304714098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304168219 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.307163013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303923425 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304481946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.303996549 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304478594 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.305648994 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305992683 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.306490022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.306402022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.305548143 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30617413 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.305891692 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.305034111 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.305728403 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.306128035 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.307184244 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30756481 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.307328397 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.305782251 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307060626 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.308049229 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.307556918 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.307226429 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.307741787 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.306134879 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307844314 seconds)
  done (took 89.882182925 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307956829 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.306589616 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307724188 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309542435 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309228359 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307279368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307661609 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.307720206 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307140454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308587775 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307631438 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307571375 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.307831813 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306688162 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310273115 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309972867 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.308658175 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307783343 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307637794 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309564365 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307090029 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307378823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307886638 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306761425 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.309165432 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.308143725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30880561 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309586156 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308306384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308539375 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309278645 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30846248 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308394664 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307713572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.310678963 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.308705388 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310664506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309407851 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309054175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.309266632 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.308457311 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310242385 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310095998 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.309037483 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309716899 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310571408 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309790652 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.310847909 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309288144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310357413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.311288886 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309737503 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309735546 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31039862 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.309614512 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311490448 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310296931 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311344271 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310444297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311662886 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310211166 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311038506 seconds)
  done (took 82.33529229 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31012561 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30967674 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.31028855 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.311269401 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310522309 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.310403299 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310781979 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.310397782 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310276957 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311862144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310857966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310217172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311795585 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311729934 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310327731 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311003306 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310984099 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311350906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310825979 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.317280221 seconds)
  done (took 27.396192003 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310746849 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312250322 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.312305077 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312007204 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311061623 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311666309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.312267922 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311669382 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311671756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313155884 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314290036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313627453 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312011465 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313345224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312446925 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313504462 seconds)
  done (took 22.173594143 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.312517675 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311931566 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313513122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313545948 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.317970742 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.314235351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312833008 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.312350963 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.312705757 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.314172982 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312388119 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313087998 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312861084 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.31359323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.312833008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.313408081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.31393224 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312526894 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312889439 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.316078533 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313739478 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.313320709 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314238703 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.314185205 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.313136607 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.313985947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.314934601 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.314267478 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.313814138 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.317840558 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314185553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.314564304 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.314371332 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31451276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.315123942 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.31473262 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.317059523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.314537554 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.315317123 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.315707884 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.314319091 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.315169618 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316118132 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313732284 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.315519732 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31481224 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.314189046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.31479017 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.315531745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31574902 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.315998424 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.316407624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.317140818 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.315288278 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315664513 seconds)
  done (took 73.470542241 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316548494 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315628335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.316441427 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316640615 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.315537123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.316770939 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.316698094 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.317956355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315826894 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316503796 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316679027 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.317280571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317201091 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.316839034 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317518729 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317515796 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.316442335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317287205 seconds)
  done (took 24.87998851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323138508 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.316479421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317466139 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317327434 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.317345174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.322056736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31719285 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.318753034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318370234 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316552266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318370374 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318819662 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317733561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.318142133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.31836751 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318360526 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.318771193 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318379593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.320167879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319783752 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.319006209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32021572 seconds)
  done (took 30.191420292 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.310330525 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.308685693 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.308753788 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.332753557 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.320144971 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.307413114 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.307574797 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.309963159 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.336899685 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.350442818 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346547769 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.319115859 seconds)
  done (took 17.03964331 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318832164 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319315187 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319702596 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31992113 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320285143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318642056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318405224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319830196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320692526 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320500253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320126602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320474343 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32009671 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319703854 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320349676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320981251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321400927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319710908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319671377 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319097142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321509739 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325581487 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321570362 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320547676 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320530774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320284165 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321903854 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321589708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322016717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321792317 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322950635 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32100758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322577753 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322750959 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321517631 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322494501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322984438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323747455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322889663 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322576775 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322650527 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322316197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324015226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327024687 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322346089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323585492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326687143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329396007 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330826078 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328095493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324104343 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323001061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323070692 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323572851 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324337962 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32441807 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32389021 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323461664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323614197 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324578636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325735067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322590254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323622508 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323557905 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323785378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32397374 seconds)
  done (took 88.462605617 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324203099 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325159086 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324454737 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324444819 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324377283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325031137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324531772 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325306801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323343632 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324542946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32528508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32543014 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32584374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326652083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325402972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326304623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324826153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325480636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326338636 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326476921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324888522 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32647294 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325889346 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325867905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325381321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325003969 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326230242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325916864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325028064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326250635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32550941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327156407 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326156001 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.327902173 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326634064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327073017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326262439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32631894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325822718 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326511981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327260121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327717722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327495626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332666605 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326506465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326868801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327504217 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327383461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328190756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327266547 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334394828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327989055 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328298173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327024197 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328496871 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327237633 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327782604 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328970395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328757379 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328246979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32800477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329876306 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329031366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328263671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327117645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327565887 seconds)
  done (took 88.748785025 seconds)
done (took 1802.763771124 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.550736514 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.501872061 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322428851 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.311636347 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313698202 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.297322516 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.319278171 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.312076976 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.318137034 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315526646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313144919 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.572123033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.333417748 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314586443 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315715357 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.470473096 seconds)
  done (took 27.071829526 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350973682 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.339135863 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447609783 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326654737 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35752228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.547609302 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.395823449 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.33006418 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.496893076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352833206 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.308969318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.359613328 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325976648 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.298829761 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.354575257 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.550875289 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.630798581 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.305508612 seconds)
  done (took 29.270546067 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805346406 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.319191847 seconds)
  done (took 5.319720337 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351550221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324945861 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.33361491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326159982 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.297622763 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.315935427 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32638927 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.318479117 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.311789509 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455650122 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332363564 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.351171193 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330436783 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.33052583 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.337626523 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.383691949 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.536275108 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.341757007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.336816854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.343428937 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326483347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.457617202 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.381665922 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.342562557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457507201 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.301689412 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335479952 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.345112671 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.51917454 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.343347921 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.330103151 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328172179 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.334917171 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.312192982 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.909764713 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.302962548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.361255925 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.345764499 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.338941705 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.526526174 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331679469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.344047871 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311600309 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.908697468 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47990104 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.475044907 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.312580183 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.334351875 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.335041558 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.403117882 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329516973 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335074104 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.41377664 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.220681065 seconds)
  done (took 85.620535197 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.350652691 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.303483215 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56873182 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318832932 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304478314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308467299 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.321722825 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633496899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.338193007 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304191475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.697028791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.000009568 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316265916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.355766051 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.330304573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.34525871 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305184269 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304702993 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.310534042 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.309953661 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945017938 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309663191 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304712841 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.463196123 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375171103 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926719662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.305988841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308692607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.325296115 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.304873475 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.971635499 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.314751059 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.348752449 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305233019 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.669956983 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.767569884 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739055993 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.312092271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320711175 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.306450213 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.311201795 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931342596 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.756872085 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309873902 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310477471 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.940628414 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311304182 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.31081648 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.315680088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.661837165 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311175953 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.306908092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312917865 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.326937664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.307500137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384223021 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34612062 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.93756727 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311934779 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.306826727 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320865873 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311332468 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308833407 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308827889 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310820461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.758522784 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.493939976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306554556 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.757100955 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966571657 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.312303191 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04560552 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.312002525 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321632102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.389202915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307251083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311904817 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932983377 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.339719039 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309151603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738081777 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311302575 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.693222511 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.324020952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308260988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.966164971 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.31642257 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.365548091 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315135675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.309507445 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31602259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318170278 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.68115254 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.335103158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.308768244 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.308758468 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.358166426 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309487191 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.326108858 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.309100899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032504692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.319320285 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310403788 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313254919 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309955198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314153427 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.313841586 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.313337122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675502241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313558869 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.316680983 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311079153 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31410782 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.316395681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.467742092 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.315863002 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689825291 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.313199605 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310492207 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316505053 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.309484467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.364628351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311888195 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.313370087 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.311697039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.716003062 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329323583 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.311976194 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311322271 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310803559 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.326475106 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326436623 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.352209104 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312103376 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.191531619 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32635875 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.328949233 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311291261 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316087681 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312867789 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.327746636 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31248862 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691777913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.680315912 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479564685 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.312759954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313068233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.203669964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318874907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578491999 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.3296019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.313285928 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.698374004 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.506344348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.315505834 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314456259 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314151123 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.68400835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31339984 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729808937 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001577365 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319659714 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316055136 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.196148756 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.143031387 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.314511713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317168266 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.694545864 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.329710852 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313738919 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.316900843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315981593 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.313979731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.318301789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320503187 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.318361854 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.314280049 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.433353291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.593312111 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.32954456 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319166425 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936516648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329563278 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326811392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328571741 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314737929 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.314720049 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.353644412 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318265752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322264305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.315356652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326046211 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97307835 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318626761 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.316826114 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.59149484 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137451418 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.322105555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.315455408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.315694615 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.360017919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.96791666 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.379097161 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.694985235 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.322221282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.384247396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315904068 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32449301 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968893041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32147412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316693275 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.123818748 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.321426558 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.015534657 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.317911866 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.318452717 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043718339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.320473225 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.316606672 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316824157 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331606973 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.713394909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.317066577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352821263 seconds)
  done (took 497.321442984 seconds)
done (took 645.793276522 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.316494996 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322529003 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322362641 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.320917625 seconds)
  done (took 10.491692554 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.355852444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.340099953 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.353945917 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341035896 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.356369689 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34230149 seconds)
  done (took 9.30062538 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.315859929 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322444425 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322451759 seconds)
  done (took 8.171537457 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.596051007 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.336518561 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.764105896 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.323728737 seconds)
  done (took 9.231940947 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354049562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.354576794 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.356292514 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.354900997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35720534 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.356903277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.357056927 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.356448121 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.357377429 seconds)
  done (took 13.415597891 seconds)
done (took 51.823409878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.297264338 seconds)
    (2/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.659584575 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.502553502 seconds)
    (4/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.385571867 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298913849 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.459550478 seconds)
    (7/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.66873476 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.553481207 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.387739181 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.512496526 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.340940353 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.58533428 seconds)
    (13/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.609605593 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.330218039 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.520259175 seconds)
    (16/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.515987264 seconds)
    (17/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.453892985 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.512330863 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.478687059 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.298694548 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383010228 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.648996356 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.342486011 seconds)
    (24/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.302929653 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.516438787 seconds)
    (26/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.307534149 seconds)
    (27/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.303689178 seconds)
    (28/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.535573763 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.75181411 seconds)
    (30/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.4916635 seconds)
    (31/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.562585367 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.563829869 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.491586535 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.476324608 seconds)
    (35/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.566645591 seconds)
    (36/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.516066674 seconds)
    (37/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.674535498 seconds)
    (38/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.411515808 seconds)
    (39/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.302794441 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.304863279 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.45766183 seconds)
    (42/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.306950625 seconds)
    (43/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.578794342 seconds)
    (44/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394636148 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.322592768 seconds)
    (46/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.413052107 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.302811622 seconds)
    (48/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.309455134 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.302995373 seconds)
    (50/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.318292711 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.542380843 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.5094805 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.494228281 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.299965939 seconds)
    (55/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.503213712 seconds)
    (56/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.722209577 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.907251963 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.650612344 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.678320686 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.51939468 seconds)
    (61/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.301948174 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.520659785 seconds)
    (63/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.611958057 seconds)
    (64/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.483985498 seconds)
    (65/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.575142203 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.328651779 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333693761 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.306267718 seconds)
    (69/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.305353984 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.731349845 seconds)
    (71/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.701416989 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.328617278 seconds)
    (73/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.314339973 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499191203 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.566269007 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.482681003 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.30101705 seconds)
    (78/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.682315328 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.510031828 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.487831449 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.489860618 seconds)
    (82/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.611389339 seconds)
    (83/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.569402087 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.546231822 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.90192866 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.308540353 seconds)
    (87/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.330492585 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.549118781 seconds)
    (89/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.544583707 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.492508509 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.587188636 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.309207547 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.500966708 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.484700813 seconds)
    (95/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.753967735 seconds)
    (96/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.660175153 seconds)
    (97/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.46930067 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.697987782 seconds)
    (99/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.398191488 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.334579558 seconds)
    (101/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.499485375 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.511808031 seconds)
    (103/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.39136087 seconds)
    (104/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.487640643 seconds)
    (105/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.508896348 seconds)
    (106/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.307910524 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.501875553 seconds)
    (108/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.530337063 seconds)
    (109/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.577662285 seconds)
    (110/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386364915 seconds)
    (111/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.326340102 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.324293544 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.615553207 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.551617772 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.551531099 seconds)
    (116/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.310494931 seconds)
    (117/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.619350338 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.561531602 seconds)
    (119/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.526255888 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.39412875 seconds)
    (121/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.757411959 seconds)
    (122/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.716322306 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.483289251 seconds)
    (124/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.6201635 seconds)
    (125/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.39621456 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.642566139 seconds)
    (127/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.502026549 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.402395444 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.327972433 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.52343444 seconds)
    (131/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392762656 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.555112071 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.397029748 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.564749819 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.502310245 seconds)
    (136/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394559531 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.334955444 seconds)
    (138/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.490580332 seconds)
    (139/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.463670485 seconds)
    (140/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.514966394 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.463616707 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.541432468 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.49679872 seconds)
    (144/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.687315125 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.354029936 seconds)
    (146/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.623073576 seconds)
    (147/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.456231969 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.464466605 seconds)
    (149/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.481687371 seconds)
    (150/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.755092739 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.528657799 seconds)
    (152/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.466863768 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.756056689 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.45960684 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.56086839 seconds)
    (156/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.331594192 seconds)
    (157/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.338027203 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.311571534 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.619866186 seconds)
    (160/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.6166171 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.654693799 seconds)
    (162/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.312590309 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.566070936 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.654894662 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39654065 seconds)
    (166/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.619145284 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.521956248 seconds)
    (168/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.42272254 seconds)
    (169/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.528670022 seconds)
    (170/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.503063553 seconds)
    (171/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.312137737 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.829582239 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.464977424 seconds)
    (174/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.395196484 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.308945362 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.421737639 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344166951 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.658282873 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.596838606 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.313016411 seconds)
    (181/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.315679459 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.663110442 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.616272712 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.621902059 seconds)
    (185/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.395696408 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.558919469 seconds)
    (187/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.308164257 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.457905646 seconds)
    (189/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.475059433 seconds)
    (190/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.477052633 seconds)
    (191/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313873503 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.400965304 seconds)
  done (took 334.709355646 seconds)
done (took 335.921315701 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389305023 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.515642247 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361306909 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358506483 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362329735 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331819221 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395885119 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359234858 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.383767028 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.383334501 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330745761 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375911001 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385209739 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371405191 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404845965 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361330166 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361868852 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371685533 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383801809 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388426489 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363567951 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364028275 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.399010027 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362970598 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379450278 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378664773 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.376850087 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332495075 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.374218817 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384975422 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.344623992 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.381923917 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387888712 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.373439667 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364861901 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373174759 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363798148 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520672846 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391946001 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.373384143 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371424747 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388256984 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375914982 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.376991096 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.375050836 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.399524339 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38047024 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.386759029 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.34429036 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336467228 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39225016 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383274856 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.373066365 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.343552347 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.3387854 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406837979 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.374281464 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395151297 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372018188 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36615571 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.407416125 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394449951 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384198158 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382187638 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37254088 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.3884832 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.376563458 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.389615676 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371812785 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367155628 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365924466 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373751438 seconds)
done (took 108.44842665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.54463532 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.337332003 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.576266926 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.372199914 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.590665964 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.544764666 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373453147 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372705076 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372240911 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231551303 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.373274842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372981717 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.337030219 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371518473 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.544280876 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374745629 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372714785 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.127977587 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374338245 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.549199378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.331777316 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.368709038 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.370000334 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.228929601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.334625653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.336360581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.541899358 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.364498865 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.124288082 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.329983304 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.325777671 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.122372545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.544973631 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.383025244 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37416462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.370483565 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.580217149 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363964301 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.533215502 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.533962035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.56690582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402102321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.324525067 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.328551557 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365758313 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36418891 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.362855221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.392971621 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.326094051 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361819964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.119979084 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372726378 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373890353 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364255468 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362653659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382175485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36382343 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.364374618 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.544906444 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364583862 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.538520506 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.225725911 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.222435269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363933151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.327622597 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.365140358 seconds)
  done (took 111.258745895 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.478359574 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.487586585 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.517806978 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353146584 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.448578342 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.520441741 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358046369 seconds)
  done (took 11.384320241 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37050361 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36525371 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.448630444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.449298615 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365756218 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.589327735 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365550117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376921534 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365259996 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449991161 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366838898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367502529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376496969 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.333960415 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.449801193 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377170519 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.530097857 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360379975 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367657089 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.56862622 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366032161 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376524906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.452601759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378540036 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367975495 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.375431051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.204227437 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367776378 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368553292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.369530581 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367154999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.478020005 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368730619 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.335878536 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368533806 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.531986714 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369062574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367738663 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366993247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.337275222 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.367151438 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36838693 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.370255953 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36811434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368097787 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391016274 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367675247 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368603996 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370152797 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368951318 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.453121029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367147386 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.369539311 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368045965 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455246369 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378088932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367142079 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368281469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369756657 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368134872 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.570306462 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45261908 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368798086 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.450442895 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368553292 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372988423 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370899191 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369383914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509796043 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369110974 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.453356254 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369019342 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.603310658 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393384452 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37138347 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367021602 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365320758 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36982999 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.335716155 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373869889 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369679831 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365203215 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375690862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369431826 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370364276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.578823816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.531679902 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372153889 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383065263 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377549757 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370484543 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.455052071 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371099426 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371672543 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458670338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.534286867 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.455742801 seconds)
  done (took 141.877187668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378783503 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381554386 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374641706 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.398066542 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362243271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364074579 seconds)
  done (took 9.485381067 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36606345 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375527154 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.373288461 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.374198073 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375268322 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375372245 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37597316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367990999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.37710375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375168867 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376728982 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376192183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.376327814 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.37531295 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.375426791 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374805972 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376137427 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374752125 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.375134924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376023026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.338487806 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375871401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375839763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366894771 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.37729777 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.376672131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398959253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376243515 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375828728 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379558881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378201656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37592043 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368210581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370931108 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378099059 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36813613 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378805573 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378611135 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376500881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.37739017 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378726303 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37808537 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376558988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384942596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368632631 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371675476 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379289224 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399115558 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377355737 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379236983 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377595433 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377204602 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377782678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38036883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372644384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372710734 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37981918 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377891142 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377250906 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369536936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37970925 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37810716 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371548784 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379789776 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377668976 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378841123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370564721 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380128297 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379505452 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380095402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379627745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378291052 seconds)
  done (took 101.30786094 seconds)
done (took 376.540692719 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.746231207 seconds)
  done (took 3.979126955 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.350650526 seconds)
  done (took 3.588216211 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.987148995 seconds)
  done (took 22.224527924 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.377366074 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.399147965 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.354227377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.345219738 seconds)
  done (took 10.711504026 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.623495348 seconds)
  done (took 3.855651267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.351267574 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.352060342 seconds)
  done (took 5.937484648 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.527838142 seconds)
  done (took 3.76014415 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.996772844 seconds)
  done (took 4.230350661 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.354313143 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355088312 seconds)
  done (took 5.950872035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.322770514 seconds)
  done (took 3.55688185 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.854571382 seconds)
  done (took 21.092248812 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369560334 seconds)
  done (took 3.609453618 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.379971783 seconds)
  done (took 3.616389416 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.797232176 seconds)
  done (took 6.032260946 seconds)
done (took 103.377785264 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.344988074 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.350790697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346584786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.348235694 seconds)
  done (took 10.62640787 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.499732962 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.501788251 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.504628487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.483072044 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.492144357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.504170816 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418531505 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.41748158 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.478588723 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.478991498 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.507087808 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.491607348 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.50343434 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.415723676 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.47764824 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.510031898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.481307923 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.504406531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.416692024 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.490893011 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384717777 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.494196224 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.478619243 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386074863 seconds)
  done (took 36.558544631 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.932915352 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.504539299 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.588021563 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.468443857 seconds)
  done (took 7.732431129 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.550367124 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.551782388 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.562349514 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.601968239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.654978542 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.564201914 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419546019 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414610964 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400873952 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.552268484 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.627821108 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.547128793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.770830216 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.384609174 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.769854672 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385713085 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386360864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.551409156 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.59983843 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.634542074 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38979447 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.551593188 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.555213341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.547558317 seconds)
  done (took 38.21352443 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401761844 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.410790785 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.387377962 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408059363 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.385880845 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.387781225 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.387888921 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.399748599 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387567861 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.38704007 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388204324 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.409660265 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.38866807 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388366845 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.403217825 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389373048 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.391375747 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.401322263 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.404281089 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.388462178 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388151315 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.403140511 seconds)
  done (took 31.928021504 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.350945885 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.350299015 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.789764466 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.693702112 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.352236063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.357930362 seconds)
  done (took 14.135775855 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.461481729 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642445942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385820292 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.734463091 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.861146239 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381058164 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37879803 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.676494825 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968258114 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920582359 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.45371021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.463397475 seconds)
  done (took 20.569479332 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521022959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364455284 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372492619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425271468 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367084111 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363873646 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444512462 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149682163 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394970129 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724288542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371321939 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528530339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699772576 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364068922 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368609723 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333350002 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678852178 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925820455 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366620713 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36407004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429751437 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376485934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368108124 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599887877 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.365459183 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364696725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.710765245 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363398097 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71899604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671467301 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677062915 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366743145 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718139716 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083641223 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544556958 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594051311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360939894 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365881513 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.343209566 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.387456115 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371961477 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372915369 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671530995 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368427438 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366236377 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374801223 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163664248 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399931444 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.36699164 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366351546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681039398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528741609 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395220929 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366200688 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398711386 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372027407 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.394418802 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575852628 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088219738 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382305669 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384397905 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.371382982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362993017 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368536111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091062976 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396524306 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395135932 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39406275 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368671324 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379578227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422637404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367925209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416549758 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366830377 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215511693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383410977 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37303829 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985369509 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368427367 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.373774067 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677661594 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369039318 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368209672 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.366748942 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367620352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191219079 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397346478 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.337778219 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493276903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153809713 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604998094 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42219915 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431050974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670174608 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.339453501 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369949349 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.373871775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37678283 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419631086 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159386748 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373326315 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395972142 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706944856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.668417192 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374508309 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345588499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909281271 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374604411 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.434209825 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376044537 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60349448 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.06870741 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692425622 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372129515 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439714086 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370575966 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254253212 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372262702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.417491289 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384147873 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727987197 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.277939604 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372723725 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522719823 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376248824 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372208296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375515839 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376768792 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37100088 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.596604219 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381030157 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68780171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.374649179 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371001508 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.372716601 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376799242 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.39421703 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676674317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372161223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731084659 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372891134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375065712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373577953 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.677859315 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.37355728 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406097382 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802891694 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379859618 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385309613 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689233945 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442909115 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570294099 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437577851 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.377053046 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.714025785 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401516143 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400806765 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381444456 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380743179 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382308183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404708099 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380859117 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070732039 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380830202 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384036406 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374860867 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420636591 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527458973 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405050601 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607374303 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383135243 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367599749 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.419911568 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.374252969 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681483588 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683650414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.382519313 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630464391 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.908851468 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072210859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425815671 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.375523801 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.374517458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.373779725 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375684925 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375170264 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377024131 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606624976 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702217649 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392177874 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079528199 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382977472 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385438539 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412082221 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6829703 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411873884 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376810557 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37617109 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380441256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39066134 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691336307 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680932121 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422855099 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377840785 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.98094625 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40678853 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377608843 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376883541 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436015781 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38557019 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283837491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809051207 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369257851 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689049145 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383042146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.42709663 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376471687 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384933448 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38291706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.404621077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429238244 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.608570056 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383302723 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400824015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100604343 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228126286 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021781332 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381531618 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.382892685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384062038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174261336 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382806081 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380363732 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706494101 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175919577 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383971663 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914653253 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383372495 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209116816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698396633 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691652549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379490996 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.388962102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701739376 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678718362 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436019762 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382683091 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38361652 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.350242863 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980036637 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383166672 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639105085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175838212 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392068433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386471073 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.423327506 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.383264939 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840994724 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383967891 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382266278 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393742389 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383936323 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300542478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389215695 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3801885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102222636 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395205983 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.923413027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384802076 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61612374 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.697579001 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.676963181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381294437 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.394845741 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.715739062 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699266506 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382563313 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386250165 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025120723 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.328307461 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411113732 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384293073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273842854 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39639999 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740821721 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387488102 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.411383878 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393249379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382339681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382914895 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.382452126 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391544972 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383942958 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944720694 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381651535 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37736782 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391315125 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388723454 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717269912 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.428839869 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078777546 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699337185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384244114 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447348298 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.410703694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39771496 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.359385715 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383872418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382677714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388698241 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.693410943 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384660717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.357707918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.451533047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68475684 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385760228 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383974317 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662855452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.390139137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.38708805 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262071385 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451516985 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383954762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390799416 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376021211 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467249851 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537609217 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617453937 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.708176857 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.703077186 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844194992 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390291321 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391456762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43018606 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544374812 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385619987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402507749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.389522019 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081610028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270128555 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093525091 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706330393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390612103 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389789442 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386168381 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714099328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385985746 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74001219 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38651186 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.381294925 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437913089 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399734701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397036872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691798238 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74081292 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38770447 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387759505 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408465211 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.38729562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712034819 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.688352479 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95686302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013360219 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389467822 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389479975 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190252895 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744726686 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3867672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38953969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388569733 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.388040476 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.389419492 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422412794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388178063 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699010677 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696250829 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117430785 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.702155002 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.413021586 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.345860253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388636362 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72431606 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307433159 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621685481 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098837848 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20250117 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728751331 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540697249 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623349938 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.389714641 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713682655 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395019576 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388287994 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389620077 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38992249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.388786172 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698968493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092628329 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730624125 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417975638 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.394669113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449840095 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.625614333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.701754881 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226088458 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695950162 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71458214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401687324 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390337277 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098385346 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712812014 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392809868 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419208896 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668851046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391813652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45797409 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.349826259 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.390265899 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0159866 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.694626182 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441904938 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39626743 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202808471 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098798318 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.392852471 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97493103 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393874319 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401756606 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756257203 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.421986413 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395934777 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76671824 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419540362 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398400174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63180688 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.094063498 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238059393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.395531723 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404242327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.400516644 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392594757 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390444763 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39770658 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397611456 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.855458715 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398347933 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394132871 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435586188 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.403696099 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40249427 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.392961214 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393352744 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42524884 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.384462996 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.385823295 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410823052 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599198893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001453816 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399532441 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.093665123 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.818020713 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.728862518 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400497437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.369629057 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422460426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394659964 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395424866 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394982351 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392523309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022769864 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.40632688 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.710949696 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425567315 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.692004409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691310117 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395411386 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63483436 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413570748 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450086495 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.366808726 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397917361 seconds)
  done (took 998.320223149 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.409544887 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.410380119 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.406802499 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.387004381 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417471105 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41507939 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.414387681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.47286481 seconds)
  done (took 20.605510031 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.386336838 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 2.386983639 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.419512076 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424805068 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.39551943 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.39308197 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.394901266 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 2.403838924 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.446940354 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.394954833 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400879609 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.168639602 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 2.393752237 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.410078894 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.404270054 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.422048991 seconds)
  done (took 36.519704777 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119666963 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.41782541 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.963637206 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.43184926 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.4303974 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.389919765 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.539338208 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404486493 seconds)
  done (took 25.970946865 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43235086 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431587145 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434061552 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.432924606 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432904352 seconds)
  done (took 8.437192188 seconds)
done (took 1250.855475299 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426650344 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426316294 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427164446 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427063665 seconds)
  done (took 6.980150479 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.368670276 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.369524854 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.36971126 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407632563 seconds)
  done (took 9.790947089 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.901707822 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.983502861 seconds)
  done (took 5.159724222 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.003438636 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.000083391 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.995328945 seconds)
  done (took 7.274343826 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.760629476 seconds)
  done (took 3.035442356 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.391286839 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.396916815 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.395745437 seconds)
  done (took 8.460148389 seconds)
done (took 41.974455272 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392627792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.158098736 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.55004774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391353747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552897264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.58848978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.638343256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39089482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393013805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.391576331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392688274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553272452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.626625215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.154146907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.626496359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.159996533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.552817226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392148262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.402063838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395397347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.638895142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398004662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392464643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.402623546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553543995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.59472451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.400664917 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.160467193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391105391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392554807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.540141034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405540677 seconds)
  done (took 83.248435784 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39405416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.407911299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.407692067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393686027 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.392590077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413210926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393194345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.394191678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394523005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397903463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39375049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393742738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394948757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.394545215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.395422212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394142649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393083087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397675431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397982942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394787145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394303284 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408679973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393602916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406526696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40505975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394626858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409445503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396537856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394634821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394607094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.39860411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409070735 seconds)
  done (took 78.022551124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394917189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.399787431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397937754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41045911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.398114593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402297317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397864003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411239376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399331158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415753917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.398435583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413674323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.404169763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.397432244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397211475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.396697443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395693685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.399263342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400192302 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405460079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40108166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395260319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399249653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399046625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.401532206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.39916724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.41083758 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400174701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.407638779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396620758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402916879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414844024 seconds)
  done (took 78.144856901 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.721272657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.433061425 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43607794 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.405965941 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437106772 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434253965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.408152113 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.726742975 seconds)
  done (took 15.282546684 seconds)
done (took 255.97466969 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.412126501 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.40761622 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.465011857 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.409586023 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.458400611 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.463547984 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.686118186 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465364066 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.678266978 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.408513541 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45064306 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.415521555 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.270456879 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.617946109 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.403094765 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.413180684 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.356943506 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.403920639 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.42531875 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714107639 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466612968 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.405360416 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.408111814 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.359382362 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.378022792 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.502909064 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.498539235 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.635504627 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.598626473 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.496897825 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.409685827 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.414032538 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.413745002 seconds)
  done (took 67.595507433 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.426146858 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.436450962 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.436465768 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.436144988 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.437589445 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.43782921 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.425281595 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.436905699 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.438114233 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.436620118 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.436671032 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.437991311 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.438220461 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.438454918 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.438284645 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41092523 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.421680089 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.436172994 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.423132858 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.410723319 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43602507 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.438585382 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.438342962 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.438248957 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.437717185 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.438622747 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.438037337 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.44377829 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.43738453 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.437727591 seconds)
  done (took 44.308050766 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437758251 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.402483444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.436729559 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.442419039 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430984625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431915399 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.75731467 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.440690817 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433975997 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433038029 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.404178422 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447361497 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.494493678 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.403094625 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437139527 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439535014 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440128246 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.428269685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.403572968 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459101608 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.765680817 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445660024 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.75589347 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455134413 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435710854 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430148904 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.4456925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.403018358 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.435625229 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.404030709 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207107482 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.746303702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.407712182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.412742012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.2073374 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.447169853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441568233 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.404165571 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.439120017 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430111119 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.749745761 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439599477 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.40579441 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.40843902 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.431962403 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.440564404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.405117928 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.404179889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.67937047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451671543 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.419814699 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441936436 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442603281 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434576632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679219334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436905768 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.430590929 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.405161089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447336774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.741517968 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.447670475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.43539154 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.405784842 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439400359 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.407458518 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457890281 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.459080446 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.434361032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.406981223 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43866996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.40621674 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437272017 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443287167 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.40758961 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.411763605 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430679488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.4399285 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.407078442 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.411425154 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.746633074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441814004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.407441756 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.765973942 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440163725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445937573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445178119 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44437264 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.560490059 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.741654089 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409379852 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427820256 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.410322011 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.749804218 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451842235 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.436706162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.406894759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.445979898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447072844 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.407891464 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.425007538 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.436546086 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.458196046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.409606347 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.441232227 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.750415398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.450825276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.409260982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.458361081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.562248034 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445747675 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460081341 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446367936 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.768538095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.447112583 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450909086 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.414688488 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.420620806 seconds)
  done (took 210.927472346 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.409570938 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.409567516 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.409464849 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.408962621 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408133255 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439950849 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410732887 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.413267846 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.433594454 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409879217 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.413573612 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441980856 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441267007 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410624354 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.410372296 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.412221135 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411187204 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.414433288 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41337177 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.410475592 seconds)
  done (took 45.623220454 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447510888 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043271285 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007394795 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.453127175 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.448190723 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.437660403 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.500497165 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447629618 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449338635 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775900693 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.619642345 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453505994 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447521784 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.449299035 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.010605748 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427679944 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.776097575 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042479354 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.450128539 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043243628 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42331675 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449295054 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.438073655 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.04338352 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.785845463 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.74732562 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.505802798 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.044454326 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448870907 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.449845543 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042809424 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.451737054 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436841724 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027720844 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45030014 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469541483 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.450302025 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.505364125 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507306062 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.777532255 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05002368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.755356251 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.470134226 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.660700848 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.454839823 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425009074 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.05709057 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45353414 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.422721842 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452758413 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.462217088 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.020283236 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443335776 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.018447458 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.455275772 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450751943 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05119841 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.023525198 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.016597083 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.627480841 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441626201 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.747740268 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.455852312 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.060239294 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456240281 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450276393 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.45114054 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624616092 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.051505782 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.749229284 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.779728764 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.778419309 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451393086 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.514799822 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.457526757 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.777689397 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.514498038 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.899103441 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781057284 seconds)
  done (took 131.696031391 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.772465409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.572691402 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.903175746 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.113061165 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.047414339 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.631894391 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569042264 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.73958993 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431044828 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.605730868 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.183087388 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.556058421 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.273898657 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.52771173 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.607087396 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.625122371 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.918736105 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.429928206 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.177399584 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.157292349 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.425007748 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.588727938 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.278593319 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.881618046 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422721772 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.257808412 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.418938609 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.05931697 seconds)
  done (took 56.47057716 seconds)
done (took 557.901893474 seconds)
SAVING RESULT...
DONE!
