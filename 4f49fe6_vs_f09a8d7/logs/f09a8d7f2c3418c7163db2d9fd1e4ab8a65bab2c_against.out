cset: moving following pidspec: 28342
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.557477246 seconds)
loading group "string"... done (took 0.510159078 seconds)
loading group "linalg"... done (took 9.363787043 seconds)
loading group "parallel"... done (took 0.168518217 seconds)
loading group "find"... done (took 3.152058792 seconds)
loading group "tuple"... done (took 2.054602055 seconds)
loading group "dates"... done (took 1.394422363 seconds)
loading group "micro"... done (took 0.199958318 seconds)
loading group "io"... done (took 0.514506628 seconds)
loading group "scalar"... done (took 58.065168904 seconds)
loading group "sparse"... done (took 14.785659057 seconds)
loading group "broadcast"... done (took 1.845634001 seconds)
loading group "union"... done (took 11.156381618 seconds)
loading group "simd"... done (took 3.863388214 seconds)
loading group "random"... done (took 14.293298541 seconds)
loading group "problem"... done (took 2.236845411 seconds)
loading group "array"... done (took 24.321419715 seconds)
loading group "misc"... done (took 1.156817567 seconds)
loading group "sort"... done (took 3.992585928 seconds)
loading group "collection"... done (took 22.98765723 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.680225118 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144668885 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.181968671 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.219860989 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.274422886 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161588495 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14055258 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.165791683 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.64275953 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205792929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140228446 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414199319 seconds)
done (took 6.113870067 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260377454 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059975992 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153951072 seconds)
  done (took 0.902969435 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091636025 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156803809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109158434 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094793549 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095764133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110859279 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094566774 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110739432 seconds)
  done (took 1.462626497 seconds)
done (took 3.410407287 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.548667187 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.880113945 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534258232 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.177394765 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307520321 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312156874 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27231773 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220185821 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090324126 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.069951633 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.188773446 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420483429 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.407958582 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.974818586 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069415391 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095219929 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.151496081 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.776015512 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078994193 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110191317 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.543490063 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215581395 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117299274 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106425475 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186671364 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135458846 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142538936 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100330496 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668160037 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.1306868 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213698404 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083771896 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.13919277 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.161766312 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219362043 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111649184 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669972697 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199316197 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097023581 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101888794 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688551247 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119042023 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201587786 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106750377 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069134001 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162464165 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100053156 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093835257 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094335041 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085926011 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162901721 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477698665 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106483932 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191979091 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093366272 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69767608 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09548854 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272471869 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125432431 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09702386 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088928069 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089739484 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160046399 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093801384 seconds)
  done (took 20.232814453 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.170611012 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187027555 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07881526 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162473105 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125950793 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100120972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089881891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080268866 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133135016 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184802551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14386606 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.17982608 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097005283 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091962183 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1699031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23686818 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128936438 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105201716 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089280697 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113150143 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127401746 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097839118 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112147291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095767345 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174163767 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206266453 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110265488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123832298 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0895565 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097956172 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144161908 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149051496 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092996044 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088767434 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176219615 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123917643 seconds)
  done (took 5.39232056 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233761989 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.110385755 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247985027 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196699664 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133321492 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.199122668 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171885406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301159666 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.218851992 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18007667 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126117435 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094400063 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079882295 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080348276 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096349962 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.802971663 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169503608 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166402725 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16625529 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117999084 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081713603 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.108144199 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084514938 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105437012 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095500552 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.140655596 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.310302169 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222192431 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11290095 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.465354777 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100071454 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10039922 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13103461 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19554875 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123501948 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138577958 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096334108 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103514141 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19725162 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120991154 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07849839 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079164327 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135400528 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115616587 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109715069 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124719631 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.13486743 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088152341 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110981013 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.049352855 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192385708 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.139917303 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101962268 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264590002 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126776806 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101771252 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111982676 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.789192746 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134651969 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083828397 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095454596 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0967336 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080087698 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453429727 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125923765 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.343518613 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082910124 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161382673 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159855942 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121370392 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113035324 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088560354 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08597909 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129024368 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088406215 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080263 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.105463551 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081300772 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090960031 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131842813 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085539718 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081342955 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161794667 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097847918 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084576258 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128321346 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110960828 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.108050053 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087201522 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1282404 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080698809 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090228792 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186476506 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099312629 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103230027 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115648156 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118327896 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143948752 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08999678 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.254607587 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095925327 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124349822 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099956496 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114529089 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11572973 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081901965 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085278373 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097232685 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08275822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147098734 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102411347 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081772689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089689059 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111951946 seconds)
  done (took 27.351807378 seconds)
done (took 53.666785422 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416074139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081513089 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082780289 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102998852 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083804232 seconds)
  done (took 1.531611596 seconds)
done (took 2.27002966 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296601335 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195032274 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085891648 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188608971 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086470004 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194879111 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160713454 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118256239 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201841869 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085322512 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191937746 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08503302 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087022729 seconds)
  done (took 2.742756743 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10314496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106672713 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10320663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122191935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087248525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102411696 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121310748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109048294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10175868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115151235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087003243 seconds)
  done (took 1.905616909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099993791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104990865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094051764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11995408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088044227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099609944 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118124449 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108288491 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100329169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114151387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087808303 seconds)
  done (took 1.880673234 seconds)
done (took 7.269234726 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200443785 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.828310989 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.187443808 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.240339571 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338291552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.292076667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603325465 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.196625493 seconds)
  done (took 15.757540537 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.197304699 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.1089223 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092190075 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095533238 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115075108 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093356844 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092741891 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095380565 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.119352188 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09296713 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092911675 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114168289 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092531529 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096061028 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109690695 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09874007 seconds)
  done (took 2.51494579 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137234072 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11757836 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118335789 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099573207 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095075638 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119055643 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102857074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098096762 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115315642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095760082 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103045436 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117612373 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098963911 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094567333 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117262258 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118496843 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094566285 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117087725 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117319668 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099962921 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118213636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098813823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098466153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.117913388 seconds)
  done (took 3.44064102 seconds)
done (took 22.458946771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140027513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085237096 seconds)
  done (took 0.975722611 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.160028171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.178701147 seconds)
  done (took 1.097657879 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109627209 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090797999 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139937698 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104821081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093629644 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110382543 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11823836 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09243452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.111472975 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094596387 seconds)
  done (took 1.828894513 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09278652 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093725117 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124237796 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169944656 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118587636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09518019 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097475733 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113984187 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098862782 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090613129 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114765641 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110542339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096277746 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12919513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097003886 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097228286 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11822935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095101758 seconds)
  done (took 2.715405989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0894509 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090667815 seconds)
  done (took 0.943880852 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092010513 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089258487 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092592501 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111309965 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091143713 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090822513 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109795387 seconds)
  done (took 1.438555559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.514456272 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.232871093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.366718561 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072275671 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124453955 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302967298 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.12306977 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071855576 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09127299 seconds)
  done (took 2.697979401 seconds)
done (took 12.454420776 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089412487 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189958025 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611846939 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.128352705 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09046751 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148422925 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.303332777 seconds)
done (took 2.326983271 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343662767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163363861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083845299 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089858774 seconds)
  done (took 1.443191763 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080659349 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097053893 seconds)
  done (took 0.950156511 seconds)
done (took 3.167042052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088335814 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109083424 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105056097 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088105059 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089421846 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088203745 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108090841 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087451973 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087239166 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.089716297 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.108162149 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089958227 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088587034 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106702954 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091786672 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089641427 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088776163 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108562408 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.210235603 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089158824 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107441805 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091147694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089273782 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089317853 seconds)
  done (took 3.192527346 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109252301 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090211123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11296667 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095200584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09524612 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111930156 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096365676 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092750761 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093489612 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.11150999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094738444 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094410329 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110663444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095091002 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092277307 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113948638 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094283219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091512545 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106696599 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09247398 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091019326 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107315602 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094251929 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093622729 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109785749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094977791 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092531389 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10910312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094721891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095367645 seconds)
  done (took 3.751017011 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09451558 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084428124 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087941979 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113194492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085124372 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088361027 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103102147 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090097281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089813586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089086678 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108160332 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08901565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088234335 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107128917 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091742183 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093174697 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096110406 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106572631 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090466951 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090477288 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109109476 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089245567 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088950627 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090011865 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107266155 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087318925 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091163618 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108717875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093151021 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090487555 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092314673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113259654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093068539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100856611 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113995432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093533262 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097350369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087425643 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.113366581 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088514398 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087626576 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109537742 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092752507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096585117 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090318887 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.111786841 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091790653 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09360513 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110346225 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094629003 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088386309 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091684983 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.113267755 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090790037 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093450431 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105440014 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091640355 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088107153 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092577625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.111025711 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088894545 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089067052 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115163108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093629365 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104762484 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116008258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092937377 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092419784 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091359453 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.115616727 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095299828 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100418217 seconds)
  done (took 7.754603361 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.111931971 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096332781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107335646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091573516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088053516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088948881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111082213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088701014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089299205 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111732016 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089196119 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088970462 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107064523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0909513 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089398589 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089165249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111441057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090329294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087916766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107908833 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090773205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0934468 seconds)
  done (took 2.900945714 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213384049 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113164391 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137681125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118998303 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106999779 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119005985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096099511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097148876 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114516588 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100804998 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101609988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114812854 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111355292 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10007788 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11988808 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102974478 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09235539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116666512 seconds)
  done (took 2.857652918 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101843956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090311764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151973096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09158504 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090713142 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.108759641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097126946 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110384708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110274148 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092261104 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101005373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111038072 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093735174 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09349478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09345085 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113011019 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095093098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094191377 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118856874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098995061 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096863365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117089751 seconds)
  done (took 3.050959204 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104272198 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089526608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125595091 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094485549 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089140037 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089144995 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11464754 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09204271 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09743753 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114637483 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09568186 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0937284 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127740545 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096104051 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098707804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11429533 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095724883 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09530346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112903114 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093463911 seconds)
  done (took 2.817897933 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188906285 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124135409 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105906974 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113465406 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124692812 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106931126 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132447499 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107819787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106238231 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13504343 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10739599 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10562712 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131525454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112004396 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12305224 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114238759 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11290081 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134203868 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106186269 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10599609 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134552795 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107689322 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131602279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10622489 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105422624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123322316 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106770631 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110524879 seconds)
  done (took 4.112691984 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089721814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090926506 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088435827 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109755088 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092735676 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092192799 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09300652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111632073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093856558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092670234 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111164765 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093660723 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093709263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093203542 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113124371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094092063 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094406838 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11095985 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094860387 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093510005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093530959 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113503051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095742901 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093659815 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093380171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112737451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094045618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092610101 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11183566 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094962076 seconds)
  done (took 3.733837801 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102550401 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100188788 seconds)
  done (took 0.992946449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097111302 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10350129 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091827459 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10995686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097692102 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093484513 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119368532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101335233 seconds)
  done (took 1.606176596 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16030146 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186581408 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093790628 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119911198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164928306 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.175918669 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127077194 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114056124 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088754164 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083242429 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.178806327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081583419 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108659558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087120087 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090067529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117052176 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091568558 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099367734 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116883998 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093865079 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097765086 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097207543 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111338111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102432648 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089042189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.117029477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097862514 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105002388 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111606022 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096809867 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092507993 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.11493354 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098240915 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099540382 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114377464 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170284713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117361223 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087669109 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091853649 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114427889 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125179745 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094251301 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114552905 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093333447 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098917537 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.119461421 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101142541 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095672361 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087736366 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109298815 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096187581 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091035459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.11368806 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097386756 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095407453 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120701941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098110661 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091761599 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104580547 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088063922 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089536106 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104381011 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094282102 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095578844 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110235248 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092964685 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089842291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09353019 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.112558308 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092479707 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091500881 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1269996 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091685612 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096087708 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115933597 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09248746 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087862151 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115684474 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090537909 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092066107 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113671089 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120773389 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092592221 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105988967 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087519649 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098244825 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093193764 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115170302 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084395369 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0983924 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112855413 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092413079 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084411014 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109108917 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08808236 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094789218 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102256579 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093113586 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092823047 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101184096 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119203636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089799967 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094503428 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117004893 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097850292 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090205745 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.172821837 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088440926 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107284313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09501313 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097148597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086074843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11008425 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091452342 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087781554 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107279773 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097028959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090696659 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113029946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096562908 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092781212 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112329577 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094944126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091312868 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087656189 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115709896 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100829931 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092666882 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.1131998 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092396386 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093470964 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110861724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096140438 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088589408 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116332112 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089602874 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091851974 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094808565 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.122606373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097123664 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091618773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.115270105 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097749791 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095424425 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.122254722 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09701073 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.093196558 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.109702778 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09902628 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090049231 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.116467883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101841023 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08729504 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113209019 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090525478 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099375347 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088000785 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11633707 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094659523 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097049073 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116353692 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084305204 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089388951 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114001508 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094017542 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087808792 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111663152 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093478926 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098470273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085763071 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115065122 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085184157 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088318145 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117007897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094075232 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095303599 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107447183 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132063372 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102898001 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116277077 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093332609 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09406713 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101303664 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.116719801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099971442 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10261263 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.123072144 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092243085 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095480996 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125148386 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093825968 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099447772 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114670798 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096490971 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089428621 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097287301 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.111044429 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102354426 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097927257 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.123036246 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102838706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100489384 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117335032 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104832255 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090927625 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.121944488 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089333427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101427772 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105965849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.124625625 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101716776 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097893454 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112189266 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094802698 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101995093 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113627927 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092041034 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092771504 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105312904 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087441846 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101658598 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100224058 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.114163191 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096829422 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097976635 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121073078 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096651536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090607053 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.123577446 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098522026 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089822456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118688137 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091694761 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094443993 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123603427 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086457294 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088809757 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112794023 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09777626 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094729434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093946723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115462169 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097909238 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094416126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.113352892 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090906952 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100062585 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10878192 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09414186 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090823561 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098155918 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106364224 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094555111 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094116577 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110724486 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089325465 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0955192 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117634582 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09811101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090777535 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117114963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099565594 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098547937 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089628925 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119406525 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088682995 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08625615 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108857348 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085707687 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094673002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107015494 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098891765 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089858983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09155431 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116318702 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09468718 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089583389 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120767941 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112277825 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106329374 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088110436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091861752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096656845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.117110423 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094492533 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100269804 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121487096 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104144109 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100630325 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.116278194 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099310394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103903716 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.116407331 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105532065 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.1037479 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103326687 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.115685452 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102510521 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095365479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123215669 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092624069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096912813 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118785217 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099018598 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.095406406 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.117091566 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.095041066 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091378101 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094070133 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.123297243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093465936 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101149525 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.118571433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.097885981 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094337415 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.126758647 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105720846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09655725 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.124536647 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098179315 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091713968 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090956609 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.12557358 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097704674 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102919932 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.115822829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101011938 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102200985 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120816271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095763993 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103839671 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126020285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104095849 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104550237 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08824111 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.117243261 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100343835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096516044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.122235516 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099665747 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092538235 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122003852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105187818 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098754108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.118022201 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089225452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096014305 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101624795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.1235185 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102460306 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100467385 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121147668 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.094649397 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102345836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.125717732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097328298 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101757702 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096371822 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.123096449 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091650272 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103645093 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.121609668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.093944349 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091163688 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.117689827 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104385062 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091918463 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10208917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125182329 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.095978057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097163194 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12609718 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093003307 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097889473 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120687275 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091243167 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100713785 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114538238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091654672 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096683245 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097883677 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.113088194 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095726908 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097055219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127459155 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098429906 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103657385 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121000862 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104480325 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100963327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125509187 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104734548 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104018745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091855605 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127972698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101800306 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100256464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.118656709 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097902463 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.093074615 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.120902246 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103771646 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096060469 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128150445 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104976548 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096486571 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095790952 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.1271932 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096734089 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104105976 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.119185687 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099155347 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09107457 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.122712322 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099758217 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105002948 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.118127732 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093891967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104307399 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10386216 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126278907 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100335106 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105037589 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114758169 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091642938 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101146033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.117980855 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108155304 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101859182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.118480849 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09616153 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100368141 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099847334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129578909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093066863 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095846127 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.122143745 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100551893 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094331758 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.117495458 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103590338 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096595384 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12410838 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096809727 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.094957536 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09847188 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.129685904 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094529339 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093608063 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11973883 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106390904 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097161796 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.117849553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093911802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105149335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.123860373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106305627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09598574 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.121555401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096586794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101244718 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106517246 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.119805808 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099709468 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.097598096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127979263 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105768757 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.093022863 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.119969935 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111665387 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105317094 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.123180259 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103679595 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099267232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1289576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105935469 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102657119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.094084031 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.117492874 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097711308 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093871294 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.12546372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104912294 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098856146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.119041674 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104554706 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104800967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102205036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.125624146 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095173835 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107229628 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.121087395 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102844154 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.094444202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.115942817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09966833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104969983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098943727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.122966335 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101097213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103150408 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.118192684 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098281004 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102785347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126697187 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104691665 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097564572 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.120148938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098520699 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105640808 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095841308 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.120989268 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105344123 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10162661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120550875 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101435315 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104674414 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.130680165 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101861067 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106077036 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.120680919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098822832 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105092135 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.129876572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107951227 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098536902 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.117055807 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101062503 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094897053 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091920697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.127840489 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10740018 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108009545 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.123622704 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09909193 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109315717 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128624946 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100901588 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094112456 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115098994 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100296134 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092608424 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099095073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.116841534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100824274 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100545816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121487726 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102556687 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089007478 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1208521 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09601214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101035125 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.117572843 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088876525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089206107 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099257454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12707887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099937778 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097028051 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.11963323 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098983956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093637047 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115028734 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09342459 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102196725 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103028884 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.1261548 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102992915 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100363531 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124270761 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099798305 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107140929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.131754394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.101624026 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110196205 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.130979086 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.097254895 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.097192946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100963956 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.124403739 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100996572 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107212656 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.121830856 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096045733 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106734313 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.13075713 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097395067 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102035461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122866323 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095725651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101994045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107962542 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.129931397 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102881239 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103079868 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.128304235 seconds)
  done (took 63.219888159 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14225133 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104220027 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11802688 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09661026 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113368886 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119383617 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097237854 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098032927 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121048284 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106083043 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096322724 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096836057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112841444 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116210169 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135599995 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10616839 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098209626 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119557592 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097574699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099944134 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.138579214 seconds)
  done (took 3.19974237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114422371 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109743844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129968483 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11059898 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103296935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131405817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111155895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135873074 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114353718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110996517 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140750371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115259699 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111796829 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.134051335 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111736276 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135168586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118290741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110125527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138857253 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113929641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108900441 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135640573 seconds)
  done (took 3.491744726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130798965 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106130744 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102892694 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125865447 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109615057 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104022167 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128582901 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101487766 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108462117 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094020476 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.117922607 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.100163576 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103031817 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.125226679 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09894247 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103887442 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134159239 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108248123 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108906587 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.105357532 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.117988886 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10659023 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105816808 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.118025833 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110186149 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110225958 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105398529 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.132192299 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.096910299 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106248358 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.126393517 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096320978 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.095159587 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.095623961 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.119195605 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106840891 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108389901 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.126535784 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103803633 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.095723974 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.105900757 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.132295315 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097420768 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10555218 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.126457003 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097724089 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108206078 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105706808 seconds)
  done (took 6.129191568 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126222616 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157051955 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104666452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126525308 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133473607 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106550141 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102268102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129644559 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100828394 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.130177238 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113339203 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113797292 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.134086674 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10762011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102971055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126080139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102840802 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101033448 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130398146 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105273164 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111882244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.13373635 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117962417 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114309718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134149462 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107936561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109100815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.134291449 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112160212 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129759657 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111894327 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105856687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131696636 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104237068 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100905918 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122648976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113222638 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102476858 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124186393 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099557911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.343170664 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124305263 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102474135 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111926175 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123566132 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102613747 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101856458 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120487459 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109372847 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102330471 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130561924 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111573406 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103225697 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124094482 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103621348 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132742788 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102733664 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10057068 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102048521 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130658096 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098997226 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125007656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110818142 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100616286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126607231 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111402714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102338573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12477278 seconds)
  done (took 9.049624398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130379359 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105240827 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133996998 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111595196 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106471989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128432394 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10507258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104208084 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126076019 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108419234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103676871 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239835247 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124162856 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109577273 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105373246 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127191802 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103951836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10451797 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12741306 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10387089 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104160522 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134556776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105338744 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133670909 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115249362 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100835379 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125879205 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103477754 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112279502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125355815 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114152086 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126678819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106829018 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112813019 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136634764 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103977328 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099957194 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128412419 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104719462 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10538477 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123512145 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115163388 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105947272 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.122828958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106416466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106270846 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136328719 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115174563 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131792807 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109747615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.1056531 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13456348 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106492173 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10624759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135780185 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118581421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135127728 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113018422 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126058488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112604193 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112400257 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140324059 seconds)
  done (took 8.188520202 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099820165 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098670997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099116026 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118665858 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099862349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099898108 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098930597 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120948202 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098361181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100136966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119979084 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100034508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099377372 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098336667 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118878036 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098281353 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097532375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120520913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101112159 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098219194 seconds)
  done (took 2.949394333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107734719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114000601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123697923 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107197082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102292338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128944051 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102200776 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100360249 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100304165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123402983 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108343736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107082611 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122993434 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105431215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129732838 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106747374 seconds)
  done (took 2.656122752 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119161592 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115788606 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.206116224 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10221642 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124595802 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106841449 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101851709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124868184 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101137442 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107178155 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104039068 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126851955 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100903544 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10142442 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123284533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104182731 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100043239 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126162133 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101764686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.211001902 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105989107 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103031188 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1280996 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104505119 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102341855 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128019212 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108049634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10025416 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102573379 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123755193 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103296865 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108285278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122738444 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105918846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102163062 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123790882 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100807372 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102389487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12427118 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101449353 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102728986 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123215949 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102184782 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103465881 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099301175 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123881745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099494635 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106472338 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123662373 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103451353 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103072255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.133574318 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106054059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108850853 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128293339 seconds)
  done (took 7.148338487 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11248253 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102876071 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134792211 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100833981 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101636947 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103248954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128446851 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103047182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10333451 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121791326 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104261163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103970275 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128162666 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103302242 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103381093 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102818661 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120571618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102759296 seconds)
  done (took 2.850155876 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10535823 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102439703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105388891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123855625 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101231937 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100206318 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122631377 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101639741 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099724134 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102904636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124357364 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102526096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100177823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123695199 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101867004 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101428331 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122824628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101309252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102160757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100491271 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1244425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100317784 seconds)
  done (took 3.245075229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11271985 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.209533558 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107546917 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.217063776 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09851148 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097166406 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134098617 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098373334 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136841354 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098592915 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097203004 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118870213 seconds)
  done (took 2.402404384 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12930946 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138334072 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12398092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101898084 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109047457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12794532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108022885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105665602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137315157 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11651775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128416191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113434886 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112451311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13684317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111322676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10987284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126521536 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106002656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102597474 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141714739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105859551 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136138052 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105868141 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105188656 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128252343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11386029 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113394028 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138920109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106610694 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134688846 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109576784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105093462 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134821544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116117839 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123944742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115262283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10671818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142802237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110333583 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114849172 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123863586 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109408186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135627163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113154962 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112886702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129156717 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111199406 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106212319 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12754066 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125480831 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133226159 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113292619 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110006936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136108509 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11286079 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148631192 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117688709 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135156852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11042752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117053293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137152287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110828409 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13567263 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117143667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110291329 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135754274 seconds)
  done (took 8.805889632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140381469 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102879702 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129374483 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117425197 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115638169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130105162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105732789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107150637 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129886559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103239107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171001633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105891119 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113918746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135958839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106701139 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127984083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109011348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11589274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126576222 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126094037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107681989 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138716103 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1148498 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13707218 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118087363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110564548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129770692 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106498598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106211831 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128707149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11223613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128527936 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115747051 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102731429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137470904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10687686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106182148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135212027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106103926 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110432758 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135863716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120429351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129006838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106920929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117458651 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130879143 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106473875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102664522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130276832 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104166109 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116715261 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140838021 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117674461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136859164 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109798041 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106465564 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128443778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107648885 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10614136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13226235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114862721 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13152769 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126841758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106888802 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12962654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114223115 seconds)
  done (took 8.773160679 seconds)
done (took 169.651780025 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.169972592 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.210397286 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.192715568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155697802 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09235972 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151424982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126249225 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.193167232 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092949529 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092099491 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093037879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118626189 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161888673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092698939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.115397775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096542444 seconds)
  done (took 3.031716323 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193049968 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335239558 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108443119 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120906436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100282375 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097566458 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121318081 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100703658 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099041505 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128204921 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099271702 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093922279 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127161352 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094497492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098072946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119812513 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10630465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097875574 seconds)
  done (took 3.130488102 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117173839 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141486777 seconds)
  done (took 1.146421692 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128176076 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211364029 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2913184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169877957 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118545591 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140363869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147063533 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132392953 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188044094 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132771213 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10952573 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096117739 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146604257 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103366357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113814683 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119002004 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126535295 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112560822 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134446636 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099422559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144673635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101759239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10338717 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135244014 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177290772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131148241 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102670459 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100341392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122281122 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112794511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105511811 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136418115 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110437926 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177185661 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100563626 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172464948 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10400729 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120270531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112193526 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098082096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123001605 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10257729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110499038 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11804008 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101743665 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104101856 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.124799738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101808477 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105478078 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127997282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106835094 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127317238 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149146061 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127832946 seconds)
  done (took 7.807455474 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.900593085 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14674387 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097302318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.051326918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141780529 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111563 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.892692988 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146142257 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248291909 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.915192078 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114495076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105733906 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261027258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255789651 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26634204 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357139829 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.753915494 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109858104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129277962 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162552026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102636725 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139724332 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113113895 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455975303 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099838045 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097984178 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125720177 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106152395 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176304822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098950223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101309391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195612165 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29084767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209684905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097892197 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120440316 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098813403 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183569433 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268512008 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217845928 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.165071201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118690513 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097793581 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102360503 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135213423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095163777 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179204283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192068977 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16695028 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126364743 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106629621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12710052 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102963652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177820518 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09820299 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355893651 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359641404 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120698728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104275481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111261006 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261570064 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123557262 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237958891 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119220957 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211251375 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121507211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804626482 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162352419 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12154318 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103211379 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123432456 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1051295 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101830896 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182400918 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406395953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128336991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103024065 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09752162 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224784172 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121850901 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099214921 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178461451 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099855296 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10408237 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128891739 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104490382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189811218 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269644345 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10538044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104421589 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125933542 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108376002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100033949 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229156655 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228911372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176776809 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2271168 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104096058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180061585 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185329294 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102908547 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188250545 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103713607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109058562 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125325574 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224390825 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156932666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101485461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104023005 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125949466 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137577412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102179334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127715612 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187844139 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469357171 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189307104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119338709 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104663729 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104268078 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179244721 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104913132 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265584052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128170489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163180527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126157383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097367829 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103957773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179510467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127758425 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105271627 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102067867 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130851696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255885193 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217230348 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130424197 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24423022 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.170830802 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127291466 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19121419 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105009653 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184505027 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109182949 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102756852 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122397967 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797204659 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109968733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103747341 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128325327 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181154182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123239554 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101765315 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09822967 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120039078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82510234 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102716903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096438311 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101426166 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126606463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103727576 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126117853 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10550371 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184122995 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245179642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107922593 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126072736 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098935556 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177693825 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100923728 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09950588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120811662 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100547004 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10523922 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126109472 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104243912 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186932919 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15493311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252908139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565416175 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100042121 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100004965 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240838796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122316183 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326955823 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10412651 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233600935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180989357 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095971282 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381502425 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161713301 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20470578 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102897233 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192369504 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097472731 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127839651 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155646189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122935326 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107549012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180656213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109216193 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127743549 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263806592 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100259467 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246815744 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097719339 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190425821 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101856738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129212521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327540255 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099531232 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110494498 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178254022 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103512954 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123513472 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.977587653 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099754654 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108537685 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126883384 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234118668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181632665 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106045329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106059297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13110962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180168302 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203856021 seconds)
  done (took 46.303098252 seconds)
done (took 62.305315154 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255310609 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167546585 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.367773443 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149208499 seconds)
  done (took 1.919083356 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263291791 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167592331 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.247326982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097260692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.252998025 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095799054 seconds)
  done (took 2.039375468 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175018765 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165866204 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145029336 seconds)
  done (took 1.402565857 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20783027 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205465583 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343498499 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.229590438 seconds)
  done (took 1.983945375 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.277589979 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115908594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125352812 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.231639721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247334665 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204995272 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120898195 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173112726 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129572692 seconds)
  done (took 2.583000534 seconds)
done (took 10.842925557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.215079795 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.162174953 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.391878953 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.359261817 seconds)
    (5/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10798545 seconds)
    (6/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139718536 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110915431 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.219091199 seconds)
    (9/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.209153762 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119742741 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.218293611 seconds)
    (12/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.384376673 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.397536097 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.370431813 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156679212 seconds)
    (16/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.276287508 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134217976 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123864215 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100427157 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145880701 seconds)
    (21/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.098218356 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.107549012 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.231698039 seconds)
    (24/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.080671362 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.235034148 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.107767964 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.190443352 seconds)
    (28/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.182470061 seconds)
    (29/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078565228 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1547085 seconds)
    (31/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083101978 seconds)
    (32/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.137585373 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.218209383 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106091633 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116701223 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.215036563 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.327608839 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099106597 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.310822067 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175829971 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135351569 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.227476483 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158535314 seconds)
    (44/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.130615074 seconds)
    (45/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175667521 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.170875919 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.135067176 seconds)
    (48/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083045407 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105283011 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137862853 seconds)
    (51/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080570092 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173248218 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.208511571 seconds)
    (54/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12504139 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.103029931 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.393829411 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085617801 seconds)
    (58/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168388103 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079960308 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.203048656 seconds)
    (61/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144978422 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.145998175 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.134215811 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.286247783 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117170277 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.228378832 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117576404 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101650147 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145223775 seconds)
    (70/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110053311 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102233741 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130051384 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109643762 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.130192044 seconds)
    (75/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08314926 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087144881 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.145034156 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109489342 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100474997 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124272297 seconds)
    (81/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.138569018 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10492703 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145808765 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102241075 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104933526 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084156931 seconds)
    (87/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.138253544 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146371406 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09832221 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13365722 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101788852 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.179418556 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.21637996 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132546813 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.12949461 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085512271 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125911752 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085312525 seconds)
    (99/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132307467 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101849404 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165310617 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122408094 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.276953445 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.176823324 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100243194 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101990833 seconds)
    (107/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.176443038 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085264195 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100931689 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130676254 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084661883 seconds)
    (112/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.0781642 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108754193 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125315238 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081171635 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100151842 seconds)
    (117/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.110939038 seconds)
    (118/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.15354271 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081076442 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079063685 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.100411163 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080009756 seconds)
    (123/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136367202 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082613089 seconds)
    (125/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.136645798 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084674455 seconds)
    (127/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102747912 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082011616 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.179938664 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.07825199 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147963997 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123007263 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105306338 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109187767 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174241012 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.129502711 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134578286 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111610771 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084624169 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115262632 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.109592428 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11082799 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108169482 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080140358 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154847415 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110311444 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084629966 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077894891 seconds)
    (149/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.167246687 seconds)
    (150/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081439686 seconds)
    (151/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08395488 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098567422 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102045658 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.135403252 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081430816 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108441164 seconds)
    (157/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.10904585 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108471615 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085150633 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107272301 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102784229 seconds)
    (162/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082697667 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080349394 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084076892 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126002197 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.109922498 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084551953 seconds)
    (168/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078542251 seconds)
    (169/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078527444 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127403352 seconds)
    (171/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08171975 seconds)
    (172/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084437833 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086077357 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102396611 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126316971 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102329284 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101124731 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102479233 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079372174 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100967309 seconds)
    (181/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.144007838 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145584365 seconds)
    (183/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.084075775 seconds)
    (184/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078594073 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080832067 seconds)
    (186/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078774892 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.10588658 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10317094 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079417362 seconds)
    (190/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080800428 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122871281 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102958833 seconds)
  done (took 26.934589099 seconds)
done (took 27.854723426 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.218259319 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129253238 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109364606 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107938377 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.227251944 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115997991 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150564817 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110899159 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119648735 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13484075 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101190451 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121530049 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133406838 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203894853 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137707246 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102424198 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100872394 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144698778 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126010508 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126100324 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.231102154 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101307994 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.143615539 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101471423 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228018102 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103039429 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109342955 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.135991805 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123679136 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110557285 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109955393 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128960393 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126842526 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124805186 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124120183 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110806479 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099823937 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107553621 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111802136 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111126701 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122828189 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134974985 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109745031 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101253728 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134546439 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109966987 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099747391 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137403157 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099697524 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110417952 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127367034 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126735041 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10851764 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122564468 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100355569 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101923924 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.141993755 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101973652 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122540234 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099579422 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125852317 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101689118 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110738244 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12420972 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114567153 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105376947 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133355226 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112567178 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110355444 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10305291 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124129332 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110114492 seconds)
done (took 9.915287831 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106869386 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144559933 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.22734155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.230494953 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128289917 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142794695 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115542626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123732564 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13862524 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120565471 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137303075 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156340481 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.208900936 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143483679 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115903426 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138205564 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113320067 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110273241 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.231311608 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125359447 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148923197 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.116778886 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125707187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143039139 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105390008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154429554 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109515393 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112802123 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104245589 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147649921 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125439555 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10495755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133057702 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1226297 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145390276 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115680563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117421846 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13715543 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106327208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105541704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135268668 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12148989 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105348522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142838067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115151585 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120765497 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136126319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118214334 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106124808 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112200511 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13123694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128294876 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140396765 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12300349 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118620671 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143195794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119280461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118093299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131079099 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11965963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105964802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104920325 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131133156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124985936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107240383 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141629672 seconds)
  done (took 9.59465453 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124140018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134106719 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140293469 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115626506 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11069627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124247015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099791671 seconds)
  done (took 1.817203641 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101609848 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.237878364 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211824423 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.238425012 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.237216758 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.249005757 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12506793 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100388883 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163652655 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112427565 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.241221667 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.268876999 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111647717 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.115724283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242380543 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126721212 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216505744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128829162 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116454474 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242546276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119040068 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13112282 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140422257 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102307703 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.235605659 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102460585 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.286529942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11822083 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138661767 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115784906 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115633629 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206622295 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.236818523 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115314455 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109620155 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.239164282 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.237694821 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115511128 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.25191283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105221551 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.235499011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142562542 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118209167 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117126556 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115370816 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.227234762 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148366981 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118740868 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114791692 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245698702 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.111451393 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237721151 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113063889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142756352 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113333197 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118591826 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149470823 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11642968 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249570075 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118531274 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.239999165 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.241328384 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.212474296 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.241279076 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151897249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214414207 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.227413626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114636155 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137640268 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117523185 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244601775 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115195654 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138073564 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.206059164 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146669978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.21739657 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.24374622 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113629953 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142329482 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105671538 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113591749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129941664 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.206057907 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142877387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1146254 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119377541 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142970276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117615585 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10681931 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152400874 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116387775 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137610446 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121730703 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116343984 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142399184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218512704 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14094844 seconds)
  done (took 16.751958821 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104969144 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103396598 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106878605 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129144845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104677208 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103399531 seconds)
  done (took 1.641814996 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140857368 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11751655 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150689484 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117401312 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16387922 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.243729807 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.255346856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110293006 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.162743879 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130019956 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.248446607 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.251596589 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.221951619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.146674658 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.252127732 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120930532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.256542959 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116568176 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125211942 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140735844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11716043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120711998 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14193872 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212294734 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.145317222 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119450735 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108844777 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.154002894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12465405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136570579 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121872272 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116758982 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132574121 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111960257 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.253958132 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110052613 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112402492 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147020651 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120453027 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116837623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.252469466 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113928594 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.149638023 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120687973 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135697005 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111229996 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119051172 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136766205 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.229966604 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146940683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120168633 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117959973 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145584785 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120935909 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109338555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137911811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120821859 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.256108476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120065547 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135294021 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120199084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118479102 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137568332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122336996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118129128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144128524 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109779882 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118614385 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140109228 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120119814 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119951217 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141563254 seconds)
  done (took 11.603430367 seconds)
done (took 42.367810321 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.513828469 seconds)
  done (took 2.503149807 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.123493498 seconds)
  done (took 2.11352554 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.476188627 seconds)
  done (took 18.497371419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.431139532 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.460032522 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.146199317 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146207699 seconds)
  done (took 3.175176676 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834647269 seconds)
  done (took 1.848112809 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.336569196 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25162697 seconds)
  done (took 1.583401912 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720317228 seconds)
  done (took 1.73016429 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.725221553 seconds)
  done (took 2.722576244 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.286695955 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242985997 seconds)
  done (took 1.534792448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649722985 seconds)
  done (took 1.655099856 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.373981985 seconds)
  done (took 19.383358597 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260232813 seconds)
  done (took 1.271909158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28817254 seconds)
  done (took 1.300134466 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.51027718 seconds)
  done (took 4.521152655 seconds)
done (took 64.83615235 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.139200174 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122285872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119906519 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142763756 seconds)
  done (took 1.526511157 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123882094 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11915328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120117788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142735679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122729643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117215884 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14406867 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.11984464 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117354937 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145445032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11845836 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116876664 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145503698 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117134868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114505623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144814365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12085636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117372328 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14275286 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118883134 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117891389 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143497997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122449859 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119252665 seconds)
  done (took 4.047169895 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112743807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107497119 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109509386 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132173023 seconds)
  done (took 1.477359237 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125700412 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127837695 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150787471 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124738697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129325384 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15188391 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117385108 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113560111 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140627729 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.1272504 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132399728 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155867237 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129179905 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118819858 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153272983 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112361984 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116983033 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152955345 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124118995 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124380203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144675381 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124078977 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122013211 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.150101909 seconds)
  done (took 4.185157764 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190910869 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129140864 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173720206 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162490076 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175342828 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115900632 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144664555 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148092156 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124184507 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118456474 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145484422 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16280548 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147397375 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118927763 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117255832 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147929775 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129503479 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121211783 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188977733 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121805015 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147707261 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129319447 seconds)
  done (took 4.178519489 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11977431 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107612148 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107161392 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12992141 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120192379 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109676727 seconds)
  done (took 1.716601252 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107465971 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103052001 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102228852 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126470482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106859259 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102969658 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103668071 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130828439 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103296026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102853373 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12682353 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102478674 seconds)
  done (took 2.339742575 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20345597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14362832 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253261605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391997265 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185868748 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157653358 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307386645 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187908812 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175857698 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163941029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210375985 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162932521 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152841503 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213939147 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138378421 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190969746 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164796375 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232185601 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1687899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210763464 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183056309 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198263689 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189806539 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174019895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138980103 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187315161 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119328792 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127465301 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193626788 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162510959 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20085515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174372174 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142912237 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217650792 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260532083 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176513787 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270353514 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159354971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171683494 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211448747 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256640736 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139754364 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215623229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176212282 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128970939 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21044415 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153267884 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.208241425 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13321254 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142183165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210691597 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205264022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169341925 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16342134 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323147239 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133950343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166104921 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176951133 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212234321 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222988063 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176878358 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120465738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198102985 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212805903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242260276 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140564313 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190588761 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123934196 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190423656 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203391995 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209366638 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186976151 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238768561 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130366578 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196329715 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166664769 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182565464 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20522051 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196764966 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117536665 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176792524 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133765963 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124365046 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.211525642 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120145236 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240205546 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133020896 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207024161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206996016 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155405097 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186949821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159656336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188721555 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147009966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101607124 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173131654 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157415898 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184025916 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126755365 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180499909 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137824509 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123327834 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179233966 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121331281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197181639 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133757232 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189666019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168143938 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160114286 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175869501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17271023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159894774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194187543 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217262055 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128791727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129456546 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241913585 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193833797 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135770826 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197866433 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193835612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178025781 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133119512 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191201758 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217391961 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143612257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22317838 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137644319 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133465785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16573581 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195231112 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158435999 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.184183478 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12855301 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162092609 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214993261 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151769928 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139369329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204966847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131137346 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123008868 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162293124 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136604871 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166162751 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147308468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137443526 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180650836 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163239543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191639383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154121484 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161250673 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195629346 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130937391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166217366 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17359931 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118482944 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200360046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220103548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128765117 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177839375 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186653693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207209171 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170563799 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153979217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180104188 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153222836 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119436138 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18666396 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167780484 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189827421 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184327001 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206654981 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1892784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160378774 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176754739 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166113512 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208630302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181351134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140882231 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199296991 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167524516 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117511522 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149711985 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125196647 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162528559 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129072279 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133772528 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205059386 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189495536 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175939831 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191533644 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135232141 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216657369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123079618 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186879281 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.172366961 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166714426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210969426 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188022653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205168339 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138847545 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189852983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120795319 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124709435 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159160603 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159356857 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16432816 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134167689 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165789589 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188169878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197689524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145571933 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217548684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191068851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22350426 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120692722 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158820685 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195403131 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165852306 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209469933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134576332 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184732849 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189369123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167239354 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190113701 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195279442 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176726593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22149758 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191209999 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12888273 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171496808 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159879968 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136531748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187747408 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142348898 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158326977 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150635497 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16497049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138821633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213027719 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14314879 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204582301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154755853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19850087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123458507 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167424084 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197202242 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145025076 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104775335 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195388394 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219414704 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147743438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182826182 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170942338 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127711073 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341377349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21097648 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175284651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163974762 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138958872 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1975071 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158538387 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189557624 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18198243 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168347386 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206084866 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19476066 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140330974 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158864615 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146742822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180152169 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137720585 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178793407 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160472222 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.16937531 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186531262 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1631088 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166908375 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20266404 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.142607521 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17595345 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137065824 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249767725 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193207739 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171485215 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190060413 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162408781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209298543 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122558462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124040424 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.159656267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182316131 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156758971 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175425381 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192013594 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209023019 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173002307 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186448221 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139119018 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154520487 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164277734 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174287736 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211163584 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133548896 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134425475 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214964486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127584171 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158486565 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157871472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314980138 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145645267 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198014007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105523475 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309666334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127826381 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15667558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159053886 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19743628 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131174851 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182874791 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196593854 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138365919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188228056 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13297969 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204932206 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208337457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166147874 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201593792 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141888784 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188762481 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187458545 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171848738 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170219691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147336194 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156891111 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219957859 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202065151 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129870356 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193642152 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166832179 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197103626 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172275469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165358388 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179827476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153658716 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16296367 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164277245 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123552164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156756316 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191749105 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154154939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174517094 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19660454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130271105 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124766005 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174071717 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163970502 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166420814 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12777826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213631566 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127059872 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209379978 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235844306 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128522349 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16636103 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171282605 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128206038 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164862235 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141018491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128217632 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.197189741 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180814055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.155555536 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174482383 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191618361 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189768266 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15601523 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169417843 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262907595 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125750558 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217354665 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149222956 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223771682 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175295056 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173384548 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196022344 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149303972 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19222647 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146587286 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247439636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163776902 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192868661 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130582667 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167142833 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136627779 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131190775 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180381597 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165486547 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169395214 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134257017 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192645447 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144495889 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171767303 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140294796 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224716355 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14956441 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216663376 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183940151 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165197683 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172325475 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202689742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126654514 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191194634 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19786755 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143284771 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149892176 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.161842089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135546357 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241346194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123643516 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187708577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172875685 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196661391 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169020935 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161809962 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17536846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168764058 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173585761 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153377186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149660931 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197128909 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13329628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124913161 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197911131 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185362469 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164776122 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139465011 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.200322262 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192631339 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.148187699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13240301 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311944348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160021467 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221358038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134374979 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163144489 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145290473 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18318817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166016083 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197786883 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129792134 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127067764 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171345253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156912831 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166890077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166053169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209445559 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158847295 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212427083 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131579162 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284123351 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140949697 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197239118 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116392106 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126085866 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16724117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132444147 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169435582 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181249864 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24116719 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190762037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147130861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162045537 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127609454 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12937979 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188972913 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150469274 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196452496 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147082391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103741335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168465277 seconds)
  done (took 84.370457796 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170966504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151400468 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166569297 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221015326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193802717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290780832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228512997 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244544645 seconds)
  done (took 2.771057409 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119500461 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158413511 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142137279 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142213196 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108610669 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.478983466 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158935923 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120599903 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159892539 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151357516 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13491569 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569578995 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115124067 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144274911 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120660595 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13382882 seconds)
  done (took 4.056911357 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.213646512 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549276553 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.033524445 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.299898472 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263978122 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207298917 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.747676014 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200319538 seconds)
  done (took 12.618013157 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172570339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168739055 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.448623809 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309295337 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.181164588 seconds)
  done (took 2.390847957 seconds)
done (took 126.681650233 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124000684 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123389504 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122618735 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153371529 seconds)
  done (took 1.622981177 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.192336679 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091349954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093920043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11898196 seconds)
  done (took 1.607383942 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.459887462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090937821 seconds)
  done (took 1.690669673 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.34956624 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138964878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.144355647 seconds)
  done (took 1.759343071 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134921905 seconds)
  done (took 1.254066037 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120685599 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116384213 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.272757171 seconds)
  done (took 1.627524632 seconds)
done (took 10.682387544 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119657535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932564329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433351685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1336223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711392071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426865455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424250318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173193254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172378066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10847378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159600044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689549837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436048536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879825709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393616115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907038597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695395972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112062295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143186155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111669019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.411405249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134491195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11219681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110891546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69162978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.44780059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109688948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915732371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110185939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113742187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398422313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137834427 seconds)
  done (took 20.964437518 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112055661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167018306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144648492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111332733 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112162238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139758834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121812697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121323598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20094315 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109735393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159985568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110989394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114925299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11012839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162336146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108746231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11287867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140506555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117022982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111903127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16060066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109585444 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111437634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141187368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11073147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131347568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138599189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122420316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109574269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142517425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115733083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110267933 seconds)
  done (took 5.213967502 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159328851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176531457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148039915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146866861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187793015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112739127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195934273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176016797 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204184205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111253602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131854826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136193157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152151751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110297336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162677321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110402098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113360225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13911406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118183534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111770707 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160170018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110505114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112054752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140691494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111978974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133147449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137807189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122780627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109924384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141553964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117487426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110240765 seconds)
  done (took 5.539102633 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124938583 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125253638 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132141105 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163254908 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119395002 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122113992 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153033776 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120493255 seconds)
  done (took 2.188995193 seconds)
done (took 35.026322063 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13477063 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127718756 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130719067 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153594322 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.218502227 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1471838 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127273028 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115638657 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154333452 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131634267 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108772422 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.120228138 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160234692 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121038995 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.253320272 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124849327 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.257876927 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.254803352 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117818474 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124665504 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.147196791 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226189797 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153589014 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118900036 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.250788316 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114235267 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.245974226 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121468169 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120345053 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109482986 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.25328158 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12236605 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.149500226 seconds)
  done (took 6.334429609 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.235413805 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151323294 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122021522 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118618785 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119020373 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149322481 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.239910746 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150005598 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117902353 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11784229 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148173172 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223853746 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.154876398 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116511185 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120127148 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109552339 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.273121673 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119304906 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.14231747 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094027111 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113929083 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117537991 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.283956919 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114120658 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.149744741 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119890944 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120751878 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.152353243 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12244078 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119888221 seconds)
  done (took 5.573364183 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123258202 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131556324 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136471474 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215045503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147996125 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160281765 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137673024 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130508007 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170494796 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114156696 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12792814 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177847756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13004454 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123336145 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.140205608 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130570654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128490641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141267895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122245852 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130684705 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160560502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130233181 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135609633 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119996754 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.140859462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120448767 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121858094 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.154018608 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121000861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126893231 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14354891 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116641509 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114564708 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174726898 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114035172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126517066 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.164655156 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126113803 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125367479 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174996904 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117801154 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113412188 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.16956912 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167918491 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115101648 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155976399 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12567492 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126761231 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140086809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131486623 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154651649 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143623781 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134329582 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110900136 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140169152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121938621 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113401921 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115893578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157243459 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115453438 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133127125 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.149282112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12517353 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113721305 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152013744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112875108 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112330765 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116444137 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169356942 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120674145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149968233 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142449958 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124413097 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125949396 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.153973281 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125791486 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11143086 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153182119 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125370272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118280125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153852945 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117457255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115292874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128432045 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163686947 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126326679 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12344824 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154557014 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115689852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114404841 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161892584 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114164238 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116785731 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.155371085 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113899191 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116318842 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154667573 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12496645 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110628593 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137638522 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.147282556 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112556911 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137117925 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146976581 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117986442 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121425567 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183858506 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115561832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123264697 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156276297 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113459051 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121117567 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143841616 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113098391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129138838 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128942724 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151512423 seconds)
  done (took 16.870198648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.350161777 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.339850899 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183678665 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.42165788 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126833517 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.268445519 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.340484499 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.344445477 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113007527 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147117032 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206963679 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.307055667 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113372517 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.174090434 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.345979401 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.396952294 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174285362 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15370537 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179774677 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127636343 seconds)
  done (took 5.965471308 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134379798 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147177375 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165953715 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140916662 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123003002 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158961695 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.1138642 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134336427 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155290069 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123581986 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115489128 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.1587528 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127506997 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12960894 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15649944 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146384187 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12053076 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147413089 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136408827 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117819172 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101695195 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.171478021 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122036259 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163696235 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132670293 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123884469 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.1400771 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119242188 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120800976 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121060646 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147577565 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132199632 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122017262 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133696959 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125510164 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12807313 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14805989 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117265261 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118588684 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.115182315 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158586368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12616339 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121092494 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127600723 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133350757 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110995539 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126430114 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155545548 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106470452 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132776522 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153866982 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129823423 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121335611 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134227543 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.150105959 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130887035 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124153498 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.157369872 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118750157 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111493927 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.140726554 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11828229 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122204018 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156651834 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126267453 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133136413 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158931104 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114605496 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117730264 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14498373 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117623966 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127360889 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162538337 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123963319 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120065757 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124642666 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.152058443 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095559987 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122918005 seconds)
  done (took 11.639982431 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13888917 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123734311 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130305048 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177198022 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126482565 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118756233 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153856855 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133603302 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127599397 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162349835 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130198261 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126463987 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165205925 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124464361 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122915141 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158905263 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128291524 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150969896 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16216734 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140004814 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127710514 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148963775 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12590344 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124293878 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171130282 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125159841 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138900136 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157710488 seconds)
  done (took 5.09542687 seconds)
done (took 52.607300972 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.294765696 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.560857983 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.261122731 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.258818457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271241475 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293473563 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.258497118 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.267815341 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.768317745 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.228979327 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.259322152 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.256975206 seconds)
done (took 29.139565235 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.338474188 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.478617777 seconds)
    (2/2) benchmarking "String"...
    done (took 1.65515992 seconds)
  done (took 4.290160012 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.250569853 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.250368012 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.594970562 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.248532094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.250687256 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.251144995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.252247231 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265042364 seconds)
  done (took 16.263654548 seconds)
done (took 26.293959868 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285933498 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.456318852 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.505254614 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.242571349 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.26473548 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.251148907 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.251581155 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.276272982 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.262200871 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.232593963 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.762008982 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.514991327 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.261471239 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.621255887 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.227464331 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.267126986 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.267198504 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.505611153 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.254900082 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.290245918 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.227171905 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.233374998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.263264274 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.252250164 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.258232769 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.266972078 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.26286995 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250488278 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.45270687 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.279962697 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.28105683 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.252348082 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271940307 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.252408494 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.255771771 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.258189257 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.448708596 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.259495848 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.234728382 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260548845 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.464202466 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.255022584 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.252007047 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.273322327 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.241081844 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.27949036 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.237496123 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.430945932 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.277968937 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.26545338 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336056561 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.635038297 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.253159288 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.26618357 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.262405994 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.49492013 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.265277519 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.308567102 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.281653344 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.265768643 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.252320284 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.267282313 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.270397723 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.253832698 seconds)
  done (took 147.066649541 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.250521872 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.255849155 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.257406127 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.273801228 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.25560073 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.256871981 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250579211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.251463891 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.252260989 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.259214387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.251886291 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25635739 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.256445949 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.282119395 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.261900833 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.273592962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.257507885 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.273644435 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283482977 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.251317015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274316169 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.252393409 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.270265164 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.252020246 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.259690147 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.339430874 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279548747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.282989967 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.266938624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.25297791 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.301640313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.263244998 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937861372 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.213778442 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.266965094 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.272881629 seconds)
  done (took 82.349810966 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.251481351 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.252708742 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25303525 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283802012 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.252103916 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812540128 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.822200505 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.220759987 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.622131139 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.580939378 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497482397 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.255649549 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341959057 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.26616597 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.253643219 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343707465 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278691724 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256777206 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251606647 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796485642 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.265403233 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256555949 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.425107481 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.267730275 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283606945 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.642766654 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.378049542 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255949517 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284914932 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.582479309 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.29997397 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252453053 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596922765 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.518380306 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363313659 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255528375 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284610215 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.253165713 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.532437679 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254626164 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.255382336 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.256412285 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.89289448 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.258149168 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.811652655 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257772793 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.194994559 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.252725155 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25397252 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.346136685 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.960588983 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.259177651 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.25414817 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.25647668 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.254942196 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253357357 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.286571847 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.350995264 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.106905564 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.256092692 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.259805943 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286830678 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255328069 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323053372 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.260717582 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.849205825 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.319084362 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.367316263 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.254070228 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.25591292 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799502856 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347312602 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37140568 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.256925619 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254471186 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255039415 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2546057 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.366291971 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255316965 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.940750357 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.428170719 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.27140239 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.588407087 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.356722178 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.256036889 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.256902642 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57329923 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.256554343 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256657498 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949990568 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358433429 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.262601969 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.258730317 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256553295 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.256725942 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.939095467 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816416949 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.511000736 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.26111002 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.839678216 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.262013416 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.111955019 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.793948867 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862727446 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.25795026 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367415507 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.429635222 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.27653747 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257020742 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.591590732 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.262836845 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.317784684 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.26055094 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.660826772 seconds)
  done (took 382.524471942 seconds)
done (took 613.094099272 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.248175623 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.237988434 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.236900167 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.236056694 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.23771752 seconds)
  done (took 12.351672235 seconds)
done (took 13.510182545 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52140157 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525433995 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.353696095 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533195388 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325571778 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543248272 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.50791878 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.31132695 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431570523 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.369762803 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437843946 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340867648 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322732102 seconds)
  done (took 19.680174484 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.625132777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269972739 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.389896368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594314542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33282249 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.629048708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.658194872 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270988999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511452189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342781928 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310677007 seconds)
  done (took 19.092969854 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.62192776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.271087197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.409293249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609202818 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.334679292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626049723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.658812129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.270745532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.494067647 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313724951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310780233 seconds)
  done (took 19.077321426 seconds)
done (took 59.008354625 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320749797 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388450165 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.318664894 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.300700389 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.302034219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.298541805 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.301633469 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299816199 seconds)
  done (took 11.688868257 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.300613297 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.297426789 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.29979357 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.298025398 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.300959152 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.296658674 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.299424249 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.297768802 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.299808097 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.298424751 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.298624566 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.299036281 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.297675773 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.300798168 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.300032846 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.299430675 seconds)
  done (took 21.943277703 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.302052238 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.299604021 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.29887411 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.299417405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.299453932 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.30085418 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.300907399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.30020291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.299060376 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.30091592 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.301100719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300029214 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.299369564 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.299020008 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.300268631 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.30253973 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.300057151 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.299630002 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.303540625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.299882269 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.303086097 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.300477037 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29987291 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.29923051 seconds)
  done (took 32.370016258 seconds)
done (took 67.162891176 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.268221469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.269995367 seconds)
  done (took 5.699941243 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.418445949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.398180103 seconds)
  done (took 3.979651672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.302392923 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.301717628 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.302289418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.30796968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.301948593 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.300887634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.300808433 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.302835786 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.301594218 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.303663127 seconds)
  done (took 14.187897288 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.301696954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.301533177 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.30132924 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.301660008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.301673348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301177615 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.301987774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.302741291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.301867088 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.302946764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.303708593 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.302931818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.302547971 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303003196 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.302217551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.301171539 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.302151831 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.301507824 seconds)
  done (took 24.599689668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.323880502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.329140529 seconds)
  done (took 3.815700027 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.484972216 seconds)
    (2/7) benchmarking "second"...
    done (took 1.384204164 seconds)
    (3/7) benchmarking "month"...
    done (took 1.474463059 seconds)
    (4/7) benchmarking "year"...
    done (took 1.456833862 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.384489606 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.333434161 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.382066043 seconds)
  done (took 11.065124203 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.30073531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.657261234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.84902298 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.506541579 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.291297308 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.318492946 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.243489972 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.324029124 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.32204626 seconds)
  done (took 14.976306345 seconds)
done (took 79.486617469 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.26633757 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.276490607 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.285811834 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.291133879 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.70591337 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.279031642 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2730438 seconds)
done (took 16.543838221 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249020773 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.250675802 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.254266063 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282066246 seconds)
  done (took 10.19986096 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274676061 seconds)
    (2/2) benchmarking "read"...
    done (took 1.681531569 seconds)
  done (took 5.120007719 seconds)
done (took 16.485871074 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306827286 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.307201565 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305275552 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.305611699 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.305759552 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.304200136 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.305638657 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.304967273 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.305810467 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.30541712 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.30460333 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305173724 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.307425477 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305096269 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305229667 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30799587 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306999724 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.304939476 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306227629 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.306312765 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306007698 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305571051 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.306531229 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.307487635 seconds)
  done (took 32.508343555 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.307484911 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.306564822 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.306074466 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.307288866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.308454448 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.30708926 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.30712886 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.306617692 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.306424721 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.308050835 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30694867 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.307952569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.307642194 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306386378 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308189121 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.306398321 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.309094822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307769445 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307762042 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.308539514 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.308044899 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308275375 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.309431807 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30921069 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.307002099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311027122 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.307627667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.310262918 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309082181 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.308875102 seconds)
  done (took 40.403217617 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.314973783 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.315311186 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.307781807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.30832622 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.309620239 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.308326848 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312813871 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.309127788 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.30918373 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.308604816 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.308939146 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.309755032 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.309686937 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.309564436 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.310506106 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.30928088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.310199083 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.311649338 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.308649445 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.309634486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.308362118 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.310287013 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.310471884 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.308935445 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.310849375 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.310792036 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.309976988 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.310630004 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.31238777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.3089638 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.310154595 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.309746093 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.310022245 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.311203122 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.311208779 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.310544728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.316076716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31775158 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.30910055 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.310494372 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.310344214 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.311447566 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.311341267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.311131674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310101655 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.311251242 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.312527033 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.311283299 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.312199547 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.31218935 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.311339941 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31260791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.310998416 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.312240125 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.311810112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.311800893 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.311748862 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.31301697 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.312626138 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.311286722 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.312357388 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.312289922 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.312368424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.312211839 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.312513693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.312109591 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.312142557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.311941064 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.311956151 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.31426203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.31475916 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.31330716 seconds)
  done (took 95.576009493 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313498665 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313444957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311905445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.312824347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313025141 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.315052563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.313713567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313437694 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313455434 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313359052 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315726113 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312547986 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3150937 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313613833 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312520818 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313638697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313687167 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314148608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.313494963 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314696582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315052843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.314678354 seconds)
  done (took 30.074821736 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313760989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315008634 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.316151446 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.315370201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.316454837 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316911599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313578284 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317145148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314712157 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315161237 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315251192 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315813833 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316375357 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314225224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317146126 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315768088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314207973 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31634351 seconds)
  done (took 24.851413857 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.315936544 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.314994944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.315474824 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315970837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.317121263 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.315003605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31562212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.31672596 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.316694602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.315443116 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.316192932 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315534538 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.316187554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318163923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314797713 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.316507009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.316573217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317670634 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317337491 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316094735 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.318492387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316107795 seconds)
  done (took 30.132541366 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319477568 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316423897 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.315820329 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316504005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.317761218 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.318687872 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.319920851 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.317199834 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.31912431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.316670646 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317034869 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.317723364 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.318736273 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.317017757 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316885828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317469072 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318618939 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317440158 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317714145 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.317440926 seconds)
  done (took 27.527160752 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318192628 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31844224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.319231098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319013822 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319745898 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320122971 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319116209 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.319083733 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318799409 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.320711803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319379021 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318782158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320331028 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320407016 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320225637 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319977003 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319990761 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320925377 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318940139 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320247288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320789396 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320728634 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320102786 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.321186794 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321291765 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320368952 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320965187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321988362 seconds)
  done (took 38.134885869 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320040698 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32045367 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.321084546 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.324038972 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.321760819 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.320967701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.321071206 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.320917416 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319846399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.320842756 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.321057238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.321823048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320687568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.321882342 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322108838 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.321730089 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322318781 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.322538432 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321850775 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322207873 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.321803492 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32266708 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.321854685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.322979759 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322230571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.321781701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327543748 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.321885765 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.322743416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322338406 seconds)
  done (took 40.835405118 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.347331529 seconds)
    (2/2) benchmarking "in"...
    done (took 1.34801744 seconds)
  done (took 3.874603677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.324021931 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322944489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.322560572 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.321023714 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.323427023 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328327994 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.322908451 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323131803 seconds)
  done (took 11.767946539 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.314941097 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.323223854 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.323686971 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.322903632 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.32345887 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.315153344 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331773475 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.329094642 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.316857123 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.317704857 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324480369 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.322475715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.322373606 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319315955 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.318476113 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322250546 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.32863383 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.324909963 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.323998603 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.325095321 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325213003 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322799638 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325054045 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.329307938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.318836634 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.335959063 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.331617031 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.329490922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319463111 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.331520719 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.320898489 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.327897074 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.326249029 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.325895283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.326784851 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.326099639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.33742992 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32422007 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.336623882 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330937056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.326430337 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.326315728 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.32472579 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.323730273 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325426579 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.330753024 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.327813893 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.326124851 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.318667758 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.325675074 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.335301856 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319176971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.329184179 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330869729 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.327266058 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339360334 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.338378994 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.323115111 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.327417893 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.339895736 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.346328538 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.335790536 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331158732 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.334299076 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336928111 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.346153656 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342096925 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.335009571 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.330337119 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.330192966 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.339166663 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34912603 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.344119179 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.333189297 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.330242345 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.32977818 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.325132267 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331678072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339094936 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.338365514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.333820523 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329710364 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336977698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340942867 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.325416312 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.333442332 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.328874782 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.32952242 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.323308642 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343808176 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.339413622 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.330562846 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.322599333 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.32599362 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.325791569 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.331881659 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.322101015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327524541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.332652567 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.330648611 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331328656 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32872148 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.338933534 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334702339 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331396961 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.340442524 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.338632937 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325418896 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.343399884 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.338289876 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.331100974 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.32476574 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.333443379 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.335041488 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327674211 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337020651 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.337168365 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.334663996 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.33880761 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.331725913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340437985 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354361333 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.340412981 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.333547094 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.334943291 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.34125848 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332476567 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.336485317 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.339526975 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.332337303 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.332494027 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.336956886 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.338632028 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.327869137 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.33771152 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329514109 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.335675787 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.334585564 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.334064269 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.335486796 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.333323393 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.332604027 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.339848385 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.343541661 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.341155813 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.338198943 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.349892958 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.333467057 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340153591 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.336512555 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.340386651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33412964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.329837545 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.336684155 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.324817841 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336571152 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.328274915 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.337954289 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335532891 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.333582853 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334979539 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.326370274 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332485926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.33808112 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.340723356 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.335421355 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.33911959 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.333913132 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.335099456 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.327409303 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.337621844 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32688228 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.332909863 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.342156988 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.335398517 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.335965698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.340710925 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342143229 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336038961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336586726 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.332480478 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339689216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.341807851 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.348317059 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.34405248 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337154606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.335874485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.330101405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.33116809 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339071959 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.332208237 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.343716335 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353355409 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348962393 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33282752 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33947641 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.329530732 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.341596861 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.344491712 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.345086551 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.337046771 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338253419 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331146091 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340829933 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.336984613 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.340923381 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.329890484 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.340303051 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.338442689 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.337911197 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339050378 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.332896523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.335930009 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.343169337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.338474257 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.338245177 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.336724314 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.342092664 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.330564592 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.33483825 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.342897934 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.338399387 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.349203415 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.345885046 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.343142449 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348861681 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.340194587 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.33282277 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.341757286 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34357735 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.337791628 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352348717 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.340657705 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.335340967 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354267536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.344025661 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.332359303 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345146474 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.348188831 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.34021533 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.335290193 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.345490372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.342733389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.339583895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.340727476 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.335557336 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344213953 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.350901047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.34789878 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334539678 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.345582563 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.335707215 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.345367243 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.344913973 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.344755852 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.34392069 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350830857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.350559243 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.341987204 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3368494 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.343482226 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.341346829 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.342458563 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337116961 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.347744081 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.351416545 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.343105642 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.347806938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.338867463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.342899192 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.334102891 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.344637541 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.335933222 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359913995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.363921347 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354409663 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.347202462 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.346395027 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354654737 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.346458582 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.339300969 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338769546 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.340014816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.340714277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.337729818 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.345559376 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.339112677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.347659154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35039379 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.345631872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.347914983 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.343599699 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.338407768 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.348247846 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.344160386 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.344072316 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.33664239 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.346366182 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.34180862 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35522988 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.345542963 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.339259552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.359583506 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347862951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.341782638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.341489515 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.340808772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336899756 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.34570283 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.348979713 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.341688492 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.350892247 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.340318276 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.345474938 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.341600003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357404388 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.355992547 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.341119566 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.351342793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.345483528 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.336136739 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.338634404 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.347017382 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358243391 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.356754445 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339796492 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.349820672 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.34709784 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.345683973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.345421369 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.346409554 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345171477 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.347075071 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359699442 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.351813034 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.34196674 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355419428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35579734 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.347632195 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.346460538 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339385826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356907397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.356765689 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.347673332 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.345840347 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.343979566 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.349343866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.347159859 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.346726773 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.348222424 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.346966399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360205722 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.35371167 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352411714 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.347982659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.361181964 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358246394 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361651297 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.367513774 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.34437829 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.353281238 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349476773 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.343681903 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.344054994 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.349405326 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.351591009 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.340251299 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.353296464 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.348198609 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.352759942 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.357749544 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.355391143 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.340097928 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360807614 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368381971 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.341645052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3518812 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.350560711 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.339891058 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.351602812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.350419212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.341010823 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.348455764 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350997219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355884991 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.344665338 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.352335727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.344235395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353673816 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.349932278 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.350518875 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.351076628 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.351438266 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.342886061 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.351900196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35805028 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.360266414 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.347878525 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.353206088 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.346329307 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.365081901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361392325 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351182996 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355706407 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.353328032 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.345854945 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.350366342 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.356158768 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345021179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354685816 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.344317179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351025993 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.348597053 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.362481639 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.356042553 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.354964762 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.344733084 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.34799097 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354269562 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.355869626 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353167955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.355841968 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.358622699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.345829592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345127268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.354938641 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.35065325 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358263855 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349172825 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.35093066 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35016506 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.356222115 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.353053486 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353137714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.344437096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.349332063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.368878123 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360219061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.355215632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.352058178 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.356060501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.347447325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353317276 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.353633168 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.34837426 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.351114482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.358973023 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.34907351 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.348921955 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.348989771 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357888877 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.366983679 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356966413 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.347245764 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370267267 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.366456376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360478172 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349001433 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.350959853 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.352108672 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.357121111 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355969149 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.34857638 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371431311 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.361824991 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358161048 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361410484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.356764432 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350268704 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358422115 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355674768 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359726541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.363461373 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.360545779 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363004123 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356058406 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.355227226 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.349281218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.350170716 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.354702368 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.35425727 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.358728089 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363070123 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.359913436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.356827568 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.362266738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358006 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.356295029 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.35687534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.34844871 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360033004 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.349912583 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.365821031 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.359130096 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.352234666 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.360528877 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359478255 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354099707 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.3606467 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.370351146 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.357943073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.350528234 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.358621931 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.37174874 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367994701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.35885995 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354355466 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.355023079 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.360603119 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358509556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.360448281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.353917981 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379022849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.37205241 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353827047 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.355611423 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368990707 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.3693066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.358613201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.357389022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.363398516 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.360781633 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.364811196 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.358639881 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371476289 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365067932 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.355418171 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.362530458 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.356023416 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.35702054 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.368669857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369586035 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.359581969 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.361435417 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.380734031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371308321 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369458155 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.392724661 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.368755203 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.364893748 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.366157037 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351158761 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.362576344 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.363584433 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.366167583 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.360600744 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36045282 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.361446452 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352876018 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370136524 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.374302696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.370509057 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.361159405 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.354816978 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.356111346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.363592744 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.363034643 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.362964872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.363077456 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.362036681 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.362308084 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.35640447 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38169358 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.383191745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.368610841 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.363766929 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.3611263 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.371190918 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.368838244 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366043964 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.369457248 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.364160135 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.363253316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.368485825 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370914975 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.364827748 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.358365334 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.360536629 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358475334 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.366620016 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.380578145 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385166437 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.37621921 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.367392809 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.36774879 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.363492383 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358000343 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368207438 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.365129951 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.358321334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.360332414 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369138073 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.365855392 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.367056942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.360574414 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.371039293 seconds)
  done (took 803.481731322 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.36452303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364903665 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366614847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.365805876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365162288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365449336 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365634135 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364183951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364315253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.365101316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.366122955 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366553176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.365291355 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364748059 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36537244 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366639012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366648161 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36634498 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.366183996 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365125202 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.366157946 seconds)
  done (took 29.893220919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.367625729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.367318218 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.367537031 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365542853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366368307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.367584593 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.36601512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366811589 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.367403565 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366402319 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.367822542 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367675946 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.367525647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.367786923 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366662897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369189127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.36821512 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367591717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.366620923 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.367964879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367271983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.369289698 seconds)
  done (took 31.298578333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.368345933 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.369207006 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364226764 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.371900086 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.369213711 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.369077381 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.368614263 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.368251647 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.369559076 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.360796439 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.363873716 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.363022002 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368915628 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.37520749 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.371926556 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.374820709 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.369139399 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.368524168 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.369502574 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.369540637 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.381497675 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.381933065 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.370655864 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.360979773 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.372173236 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.370167115 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.371169616 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.370034276 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.361875487 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.37381695 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.370257978 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.365564713 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.3796473 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.372434022 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.364848002 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.37425262 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.370768588 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.369206098 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.37049488 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.378815141 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.38977282 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.370772778 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.38240645 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.383129517 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.370940397 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368837965 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.376860424 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.371581609 seconds)
  done (took 67.037197959 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.371375578 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.372276181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.370558156 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.372037883 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.370708384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.37092601 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.370626111 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.371101312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.371749648 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.372926473 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37450335 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.370761324 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.371988226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.371508765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.372398194 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.372122182 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.371518264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.371932143 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.373160023 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.372502606 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.372060232 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.373727134 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.374149394 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.372507076 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.371546061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374128582 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375496773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.374068378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.372902099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.373015172 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.373721407 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.374413465 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.374599522 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.374299623 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.373137254 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.375523032 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.374793122 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.374336429 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.375169077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.374051896 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.376335078 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.374308842 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.377094671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.374064119 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.375084569 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.375145192 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.379205275 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.37473222 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.37504916 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.375356392 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.375181369 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.374012645 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.374484423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.374709312 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.376064512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.374646106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.373666023 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.375162163 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.376604106 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.375045528 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.374214347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3752561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.375909185 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.374489312 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.375601116 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.376236112 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.375442506 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.37488161 seconds)
  done (took 94.645462041 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375540004 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.376023795 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376362943 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.375677871 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.376212506 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.376347159 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.376456043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.378546182 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.378891478 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377129591 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.376350652 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378350976 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.378176093 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.376180379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.376528957 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.379386932 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378408176 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378416418 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376919788 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.37756596 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.377793992 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.377753833 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.378799847 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.378471802 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.378270449 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.376467357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377409865 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.379560837 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378359427 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.377692303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378586202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.377583979 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.379693535 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.378173439 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.379364582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.378826735 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380404379 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378910615 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.379455726 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.379509154 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.379569357 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.37938344 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379989522 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.378646824 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379508805 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.379846976 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381261472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.380551256 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.378647173 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378643472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.381140717 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379201504 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382008355 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.379830214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381327332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.380018646 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381348214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.381297371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379633402 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.380556145 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381304704 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.380198138 seconds)
  done (took 86.705216846 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380989161 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381179268 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.380303599 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.379036329 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379853193 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.381137364 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.379902431 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.37984998 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380925885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.381426437 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381088684 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381605929 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381909041 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382863073 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381257072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383929479 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.381126329 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380436576 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38126224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.380983015 seconds)
  done (took 28.849457882 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.380640233 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.381023173 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.381999904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381936628 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.381939491 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.381264545 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.381681846 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381710202 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382207891 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383319974 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383197682 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383066101 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38221299 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.381075694 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.382581192 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.382158584 seconds)
  done (took 23.342117109 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.38104685 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.38330866 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.383013161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.38430306 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.383355593 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.383869834 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.382953517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.383841898 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.383839243 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.38337012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.387817822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.383868228 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.38286866 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.383501072 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3820761 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.385803041 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.384006234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.383420615 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.383982488 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.385215117 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.385919746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.383526146 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.383276743 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.385770704 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.384419835 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.385042469 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.38326899 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.384968018 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.384807244 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.384626076 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.384299986 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.384497009 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.38365165 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.385373448 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.385417797 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.384287555 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.384911308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.386072838 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.386014869 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.38507781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.384365847 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.384319472 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.385214628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.384297961 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.384621745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.384752348 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.385114336 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.386128362 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.385094711 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.385219447 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.38536346 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.387030153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.384990089 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.386301498 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.386435733 seconds)
  done (took 77.381589518 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.384811993 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.385603784 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.386665232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.386422464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.387336197 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.385093873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.387921536 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.38795101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.386567733 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.386161676 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387635676 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.389346927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.387151397 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.388552971 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.387820267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38823254 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387142317 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386992508 seconds)
  done (took 26.201022631 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.386980635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.387653416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.388424534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.388890025 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.388340165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.389144946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390451398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.388909581 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389437023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.38762946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388955817 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.389130979 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390836223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.389719391 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.388188051 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388994998 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.388519378 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.388301543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.389798801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.388833106 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.389342318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.388028045 seconds)
  done (took 31.789282074 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.377631052 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.378647942 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.379857103 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.403821114 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.39649644 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.380638139 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.379918075 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.380510817 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.410475732 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.435251927 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.429095837 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.396094573 seconds)
  done (took 17.983093312 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388943524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390389169 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389993029 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390154223 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390821207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390649398 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390789988 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38839995 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390924711 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39059988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389013506 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389883238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391606782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391891106 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390572433 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390483874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391269309 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389954058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391872109 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390809754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391674249 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391001537 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391569417 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390146331 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392129195 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391430293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391185569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398164529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398640149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398862243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391119779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391833557 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391748909 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390579417 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393019042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391208896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390568451 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391597982 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39037569 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391173068 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.392355551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391937271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393906516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393910496 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392902686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39309084 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39214847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392332433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393397442 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394168491 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393448915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392979163 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398973152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393075474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3940631 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394356922 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39499171 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395055824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395568668 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394754458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393576376 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395073423 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39287901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393978662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393519595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394702916 seconds)
  done (took 93.137457636 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394550592 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393326833 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393464071 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395894269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395879951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410232405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402299273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396928617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394519583 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394064986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397102243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394777786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395030402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395037804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393952192 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394854262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395362637 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393522039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395192503 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396105958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396999298 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394748662 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396849348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395438135 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396749125 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396358574 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395073354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394970058 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396999926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395971374 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396318624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396363322 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39930839 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.396824066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395571602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396465291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397362751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396693812 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397330345 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397183539 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397630174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398147348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398646015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398857215 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39889472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398027221 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39757465 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399349526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396815685 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39771126 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398839476 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398880262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39979204 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398606346 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398814473 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397502224 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397968415 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39833131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401062733 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3983758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398546212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398210695 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400342879 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397939221 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398656771 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399598371 seconds)
  done (took 93.457669864 seconds)
done (took 1882.057008555 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.612884501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.569796899 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.390114763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.384278336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.387925587 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.369238574 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.383553523 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.389795727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.389638165 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.390343143 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.388244972 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.650224167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.405451978 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.390395035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386067599 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.543913231 seconds)
  done (took 28.276413433 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.426558573 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.406963064 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.526949552 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.39406275 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.427358535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.637409338 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.462890567 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.396169932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.580679917 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.41805414 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.371516797 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.424144369 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.395072376 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370669413 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.431487762 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.638123954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.724515317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.375583724 seconds)
  done (took 30.652433805 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919427045 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.375499566 seconds)
  done (took 5.539915865 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.418747593 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.394408465 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.399495774 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.394369284 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.365104739 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.365651806 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.396084586 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.364525056 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.381428253 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.541552316 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.407495325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.416797206 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.414663345 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.398737088 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.404417908 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.454527074 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.603240678 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.407085985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.403471279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.413726075 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.395560357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.52690171 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.446851586 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.40469406 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.533588524 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.367987159 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.406873249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.410789179 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.582955137 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.405255864 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.396369189 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.395424097 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.398862453 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.381787726 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.997755999 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.368869114 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.430083881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.412558678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.403033375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.595868302 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.397410313 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.412567548 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.367821145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.992975294 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.570119147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.548562495 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.385815682 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.397111462 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.401284758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.470904785 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.39587639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.400916345 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.485037448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.267109456 seconds)
  done (took 89.35585126 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.400858727 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.369478479 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633634906 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.388721638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.370865457 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.36872147 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.376174652 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.726042258 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.423484928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.370755247 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.780097176 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.095270355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.371793718 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.419161962 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.386549156 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.408489026 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372824156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.367658486 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.370714111 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.374509426 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.03824809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376109002 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.371018479 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.572602354 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.441180893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02066408 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.378254525 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.376296525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.391807576 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.370432721 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.064965734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.383240913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.405113388 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.371541661 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.748551684 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.863282893 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.823015483 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.375476658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.421227169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.371391292 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.373335883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021900271 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.841655074 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.371321801 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.371556048 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023296189 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.371873756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.375404162 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.376805319 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.726100086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.370821457 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.373575927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.372873534 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.372190067 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.371485508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.409563814 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.411460912 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023583097 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372706473 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.371759984 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.391614604 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.372158499 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.384659949 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.377637478 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.372806277 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845159849 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560583577 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.3767565 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.844643792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.05618396 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.372538924 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152294925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.38420591 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.397591063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.489374871 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373925064 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.372715833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01677008 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.385701562 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.373156391 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835128266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.379732995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.77274219 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.392735906 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376306861 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.059561624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.383297904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.409316297 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.373648562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.39066183 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.37472796 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378836792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.757549057 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.441393769 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.374383153 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.377294627 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.379719935 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.375511229 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.376208804 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.385128654 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136963855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.384943435 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.374792492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375796252 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.374615654 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377271998 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.377012608 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.378077478 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.74215094 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.375494956 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.379058748 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373611547 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.376436277 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.393525601 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.579699486 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.381156431 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.79488495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.383274508 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377545078 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.377356995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.375236544 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423044369 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377110315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.378110093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.376027636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.780714224 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.402347743 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.378471732 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.377293649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377985287 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377097115 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379927783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.41608692 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.378371929 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.297087919 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.408095401 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.409974271 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.377012259 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.388382769 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377281356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.382824799 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380023605 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769368786 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.762698943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.56316086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.381705522 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.379526964 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.304310206 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.435922333 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.646100318 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402252968 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.37999923 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.764479407 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.589023576 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.380278107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.380423447 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.382991091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.742645626 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.379711205 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801012894 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.102616052 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383851536 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.383263752 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.29674402 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.210027895 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.381045173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.383437727 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.782959341 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.399165006 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.378984786 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.380504392 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.380271262 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.38004372 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.383959441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.387338292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.381728919 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.380658672 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457674332 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.660116765 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.396635843 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.386891378 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035358896 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415075548 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.381120602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.40665702 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.385251434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.380934824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.417777498 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.381581834 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.421510165 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.384121124 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381564583 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076489824 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.386356672 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.381656774 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.662421458 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.236622199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.387506819 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.381958069 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.381851281 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.422051017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071487233 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.389096057 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.801305599 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.400700257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.452807512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382933053 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402440282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06972381 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.395117982 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.382530209 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.231950096 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.387791213 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.167251995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.382698876 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.383971174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.151061389 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.388590546 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.388883111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382838977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382404634 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.777325804 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.38364746 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.411545071 seconds)
  done (took 513.330714554 seconds)
done (took 668.400065487 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.383103187 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.390200109 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.38974614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390321004 seconds)
  done (took 10.814051564 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.422656261 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.412330367 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.422256909 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.413377218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.42391983 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.41269417 seconds)
  done (took 9.768140628 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.383315155 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.389743346 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.390289156 seconds)
  done (took 8.425645049 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.679074902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.4125049 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.848529761 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.392433144 seconds)
  done (took 9.595645577 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.423308369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.424512293 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.423151645 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.423422769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.423420394 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.425540636 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.425499848 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.423456083 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.423585778 seconds)
  done (took 14.076482492 seconds)
done (took 53.943390568 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.658678524 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.711944445 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.850596713 seconds)
    (4/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.388538585 seconds)
    (5/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.450236235 seconds)
    (6/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.454974966 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447256666 seconds)
    (8/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.763292246 seconds)
    (9/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.517443664 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.386679968 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.538125903 seconds)
    (12/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.855314003 seconds)
    (13/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.368461939 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.716399761 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.702212412 seconds)
    (16/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.469875534 seconds)
    (17/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.451621886 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.387299041 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.460900929 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.6218663 seconds)
    (21/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.590823666 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.586151912 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372877795 seconds)
    (24/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.628212708 seconds)
    (25/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.363943697 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.698395795 seconds)
    (27/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.369347596 seconds)
    (28/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.533701946 seconds)
    (29/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.388148521 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.551497994 seconds)
    (31/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.687308491 seconds)
    (32/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.529820656 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.367947558 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.592325323 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.574441485 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.786632574 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.366196567 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.579302857 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.676503905 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.371083711 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.45937315 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.812086649 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.544786527 seconds)
    (44/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.760592182 seconds)
    (45/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.377687344 seconds)
    (46/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.604162303 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.80436793 seconds)
    (48/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.697385121 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.407342582 seconds)
    (50/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.527902954 seconds)
    (51/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.681952223 seconds)
    (52/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.729260613 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.404153909 seconds)
    (54/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.556509246 seconds)
    (55/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.401954537 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.752472224 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.366906434 seconds)
    (58/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.635760246 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.621430141 seconds)
    (60/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.366895679 seconds)
    (61/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.572741757 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.367248168 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.504629883 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.635579986 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.623453443 seconds)
    (66/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.544817955 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.589101659 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.391108744 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.566059343 seconds)
    (70/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.528066873 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.390979468 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468146124 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.455219899 seconds)
    (74/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.631844804 seconds)
    (75/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.734583637 seconds)
    (76/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.382338983 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.554977976 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.458782992 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.621531342 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.576557605 seconds)
    (81/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.484193696 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.577966933 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.549624921 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.633514849 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.591397132 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.850468974 seconds)
    (87/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.418965638 seconds)
    (88/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.743767416 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.592248428 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.459486643 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.59068126 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.387795613 seconds)
    (93/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.809840902 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.628304199 seconds)
    (95/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.033678165 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.699095046 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.553546928 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.793692061 seconds)
    (99/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.474850957 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.634440455 seconds)
    (101/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.371146428 seconds)
    (102/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523770586 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.55634442 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.590983602 seconds)
    (105/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.672877466 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.398849672 seconds)
    (107/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.658414384 seconds)
    (108/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.029570031 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.574387707 seconds)
    (110/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.543481192 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.622532167 seconds)
    (112/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386328317 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.466468537 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.624885888 seconds)
    (115/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.777298147 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.583469728 seconds)
    (117/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.6444756 seconds)
    (118/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.530926454 seconds)
    (119/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.767991028 seconds)
    (120/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.376169553 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.865072786 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.39004974 seconds)
    (123/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.555355468 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.398756294 seconds)
    (125/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.539354899 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.751333881 seconds)
    (127/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.371668004 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.596107368 seconds)
    (129/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.371480829 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.488144826 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.608395104 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555331512 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.603670551 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.375760982 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.580484711 seconds)
    (136/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.567914048 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.531192619 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.580128171 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.736416831 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.416943942 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.665862538 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.556485151 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.475381192 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.371813483 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.575185364 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.529564689 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.372675953 seconds)
    (148/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.576135206 seconds)
    (149/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.595083774 seconds)
    (150/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.937129086 seconds)
    (151/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.709138502 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535330436 seconds)
    (153/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.372472226 seconds)
    (154/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.662428651 seconds)
    (155/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.801541592 seconds)
    (156/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.473135934 seconds)
    (157/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.854396498 seconds)
    (158/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.466461343 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.64384186 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.46586839 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.455930674 seconds)
    (162/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.423787481 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.40536768 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.378213669 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.59320246 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.642814635 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.704049028 seconds)
    (168/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.380868755 seconds)
    (169/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.526591895 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.572190919 seconds)
    (171/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.571453535 seconds)
    (172/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.597019146 seconds)
    (173/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.37583208 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.590605831 seconds)
    (175/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.412829034 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.616883962 seconds)
    (177/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.407753598 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.381584418 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.376436696 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.558019424 seconds)
    (181/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.652769252 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.685932967 seconds)
    (183/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.670410951 seconds)
    (184/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.37509735 seconds)
    (185/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.566934036 seconds)
    (186/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.378584386 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.677189048 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.731564817 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.526758885 seconds)
    (190/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.664543724 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.589639437 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.739535384 seconds)
  done (took 349.168579338 seconds)
done (took 350.433180025 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457079074 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.581183124 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.429000085 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.429382396 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431017031 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.413946285 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.464074936 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.429666719 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.453011797 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.452356756 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.400678186 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.43859907 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.453586311 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.441887896 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.472163953 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.429886161 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.430115519 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.440410963 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.453879226 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.454657048 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432702161 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430656161 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.465807768 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.432955895 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446732856 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447435739 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.443135471 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.401908441 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.439104721 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.453629892 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.408254779 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.44553857 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.457002458 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.442292627 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433478028 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.440459782 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432608085 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.584435773 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.46085197 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.442428957 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.440870239 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.456236229 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.445413834 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.445877929 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.447026888 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.467965584 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44931873 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454113892 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.408669007 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.401239501 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464739406 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.452876934 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.440556862 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.418011955 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.404195883 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.456503163 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.442787243 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461494859 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.439900773 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443416303 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.475046303 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46017877 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.453929651 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45011506 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.44076422 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.457039195 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.446082495 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.459006065 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.440033122 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437429368 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436657273 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.442086804 seconds)
done (took 113.417997501 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.614549308 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.406395046 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.650848338 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.441779922 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.651856985 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.614824553 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.442082335 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.443916647 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.449691194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.306333019 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.44128363 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.443829693 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.407098067 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.443653554 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.615607404 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.443645103 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.443206919 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20020004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.444356227 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.626430358 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.410147129 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.443468265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.443968817 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301414098 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.40671827 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.413690805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.624280784 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.442841509 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.21595791 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.413877561 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.417906704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.211304944 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.626170968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.463122161 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.45490261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.451619931 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.664602042 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.446264291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.616292337 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.614987702 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.650663189 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.482058018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.414380837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.409706849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.448681428 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.445451338 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.443970564 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.474440221 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.40693876 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.444846792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205659951 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.45608181 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.455470001 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.446746615 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.446156665 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.469316036 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.445992399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.446893352 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.631329305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.447226285 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.616940813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.30833467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.305299228 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.446021942 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.409045522 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.447274057 seconds)
  done (took 116.501388482 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.56225006 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.566589788 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.608547638 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.43864321 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.528913628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.611161098 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.441478417 seconds)
  done (took 12.040472325 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.452920794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.447147225 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.529003025 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.531780403 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.447310234 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.67266012 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448544679 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.458341037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.44628245 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.53198399 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.44884339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.448494183 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.457895658 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.413259186 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.530407743 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.45761329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.612008133 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.442202183 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.446891396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.651034116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447420025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.457556928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.533719197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.459798833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.449301269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.45581774 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.287228634 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44841226 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.448304355 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.448468831 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448980628 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.565057819 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.448554527 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.414273631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447690311 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.611819353 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.448806094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447953332 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.450412724 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.41862188 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.449714031 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.449361333 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.450781905 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.449215364 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.450875911 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.473675598 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.450197333 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.450309289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.452472762 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.452018515 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.531801635 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450856705 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.449522806 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.449222418 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.538411275 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460859653 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.451595905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.450503168 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.449781359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.450193282 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.652601214 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.53488827 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.450984444 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.533697267 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451598838 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.450824927 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.451704788 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.451207937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.592099317 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.452128095 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.533847705 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.450748939 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.685995196 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.475746811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452885454 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.448217123 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.447287117 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450956019 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.416973555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.457928833 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.452272597 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.44691591 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.456642007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.452417727 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452537435 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.66086246 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.616157054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.452194304 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.467449387 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.458901023 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.452094501 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.537209376 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.451155207 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.452364299 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.537091205 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.616020725 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.536278112 seconds)
  done (took 149.853656115 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.464061247 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.463196961 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.456142502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.481916381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.441758271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.44359391 seconds)
  done (took 10.040157062 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.446356551 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.45575181 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.453458851 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.452746889 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.454619544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.453420787 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.454781436 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.44547285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.458321341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.45639868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.454387182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.45560668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.456334985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.455643137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.454886198 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.455944991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.456294896 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.456059181 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.454115709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454696578 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.41944845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.455855594 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455092579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.449132952 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.459092249 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.45519748 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479417249 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.456511893 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.454791772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.462729583 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.459167538 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.456613582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.449493472 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.45303275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.459755043 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.449799447 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458060344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.456665544 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.456895321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.456074896 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.456815633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.45759129 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.459450046 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.457563982 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.449842679 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.45265861 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.461038726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.476510595 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.458307443 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.457793201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.457822535 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.456866617 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.456566997 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.458882725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.452190673 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452388603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.46292905 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.458337125 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.458578636 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.451528508 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.460168433 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.458879582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452136267 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.4616131 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.458275664 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.458341385 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.45142661 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.463772663 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459538604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.457595969 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.459563538 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.459319652 seconds)
  done (took 107.134341318 seconds)
done (took 396.850825384 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.900123123 seconds)
  done (took 4.192492565 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.610087638 seconds)
  done (took 3.905091981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.062398578 seconds)
  done (took 25.364926015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.463758974 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.447563129 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.436977076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.4300139 seconds)
  done (took 11.071170782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.746583068 seconds)
  done (took 4.03996898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.432215508 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.441941046 seconds)
  done (took 6.16996058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.799289421 seconds)
  done (took 4.093639282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.23742712 seconds)
  done (took 4.541352221 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.442470582 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.443711243 seconds)
  done (took 6.18877219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.399511209 seconds)
  done (took 3.693593159 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.228768478 seconds)
  done (took 21.523654999 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.45008866 seconds)
  done (took 3.746932554 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.467124137 seconds)
  done (took 3.761821388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.349930393 seconds)
  done (took 6.644501372 seconds)
done (took 110.234798157 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.422466712 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.422548705 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.425065157 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.425596579 seconds)
  done (took 10.989185566 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.577732056 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.586197658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.581684655 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.569209883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.56941361 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.583096915 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.495394701 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.495988421 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.55730411 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.555441303 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.584535157 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.554355481 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.58180499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.495930453 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.554438242 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.584869416 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.55623896 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.58320454 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.49660477 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.570787948 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.463028923 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.568723788 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.55784936 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.462907329 seconds)
  done (took 38.483938566 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.009402034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.582163416 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.666619408 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.546326317 seconds)
  done (took 8.099845378 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.627224454 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.631581572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.640178754 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.679003803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.716802884 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.639644539 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.498210771 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.493769634 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.478442406 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.628932003 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.705737092 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.621683525 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.847896998 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.46840342 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.853088301 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.464286904 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.464513469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.629020911 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.6770384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.706222628 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.463615589 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.630561749 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.634219966 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.62315578 seconds)
  done (took 40.120190145 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.47775803 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.488850572 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.467570213 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.488485372 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.466368454 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.467757248 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.468287064 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.480294037 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.466481597 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.464720479 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.467528936 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.486839353 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.464735494 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.466072536 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.481607263 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.468701502 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.468274911 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.480200031 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.48312666 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.466363285 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.465470784 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.481402908 seconds)
  done (took 33.714288039 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.428057437 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.428813469 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.868291282 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.772596641 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.429161138 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.434635647 seconds)
  done (took 14.661465121 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.547014812 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.739186037 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.457892516 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.854919679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.994490711 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.465314409 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.458978059 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.77952755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.110147737 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.069105855 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.539599205 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.547046241 seconds)
  done (took 21.864821009 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596020486 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440414246 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.439770798 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466433127 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447453619 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440569782 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479011402 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278886443 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.474522353 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797985484 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443296875 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604950043 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.775300267 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45817677 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.447136888 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.415707542 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760316658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05575248 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449651035 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442377973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50887337 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455614363 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448152171 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708003301 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450372705 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441365484 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.788810085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441869388 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832472132 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786844124 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796252932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45017666 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803709257 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21040022 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624404053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698944398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447169573 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448656076 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.428255367 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.44952106 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456796078 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44879052 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782838167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450177428 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441630252 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445355586 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273710434 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.474764354 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.442043224 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44471144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793591141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610048526 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.469317152 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44366431 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53408761 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448342698 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.470423718 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659679908 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171776383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460556053 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452327353 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.451221834 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444724082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464058174 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272058759 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.479749345 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.471348068 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471005426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444881574 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446266666 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500292321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443355053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.496666231 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444483548 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370578619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457746408 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450925009 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137886249 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464408568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.451653454 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756699647 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44624285 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444550246 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.443687637 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.444892049 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340790474 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481766361 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.411450576 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557661069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250715331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704870152 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501218486 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504827115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.752868155 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.412731535 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445352163 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.449710261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452474438 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497273431 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259187359 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445073637 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.474358367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785953577 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.743865613 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447722298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.424757436 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036748807 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465112917 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.50989843 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448225784 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.710795207 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.219023662 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813884573 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456904052 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523150605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447028145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405181274 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467806067 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483022807 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448560114 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82724542 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.422513226 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454595239 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600223394 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451231962 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449673593 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453765664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455119118 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448148749 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.69567394 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454090007 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800584907 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.458490008 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4486676 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.447674177 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455227861 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.453590153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.755298631 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46479486 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811719702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449438856 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450306425 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450074343 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.75430898 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.451305785 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.483428794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880895539 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452116781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458087513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801382564 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514713568 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647647442 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511851822 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.452138153 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.794962335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.478631047 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.478739929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461385348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457948877 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459925107 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.482277949 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441856119 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19719016 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455656478 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452604692 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451377301 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.49708919 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601988982 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483517422 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709686337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.460016249 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472480125 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.4841564 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.451205562 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762555141 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797410271 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.458181519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705602438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.020500792 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212486239 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50526055 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.452126978 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.452137663 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.454774731 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452453626 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453262248 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45292722 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713010223 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816871266 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.456043048 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234399849 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462854669 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.457407677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.487098045 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796751249 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.492021157 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454256229 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.453230819 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460982294 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462278129 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803006932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764201509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.498911698 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454080928 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.059163948 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484769956 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4571559 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454756851 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511205859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459326706 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403182137 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886574962 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452732991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806166832 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463802555 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.506798316 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.455290089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463745424 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465978879 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.46843799 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4911927 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.716968338 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473411459 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461271716 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179180397 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36863298 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149168061 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458301855 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.465692041 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461745939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294824363 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461426554 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455987734 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803510069 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267346637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456193626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039231036 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.472189515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.368979533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807393943 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772594127 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456210039 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.472528316 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813090338 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764906627 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519697442 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459596992 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463567399 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.423571461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093884005 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471590207 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712037124 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267765824 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467270873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460734846 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.481484902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462520758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97279682 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463832726 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457474864 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466270816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475562989 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404723394 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45683896 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459147354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235836834 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469019559 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.048040606 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463136968 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.721084713 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812706909 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.795961483 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.467110378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.467572098 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.797188665 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810087163 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466724295 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464878809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18361916 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.411290221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.489913976 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461755926 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428618612 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47900344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857477896 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.469621242 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.466665978 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468873521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462808015 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46115096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.460921252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462695571 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462446657 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078710638 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.466098238 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459877754 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484220304 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468071464 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.798758627 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.507724761 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223558806 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780595913 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455092369 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532981324 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.489083632 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4780969 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.43465241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460892129 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462252288 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517406718 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77180499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472062125 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.435333571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47479264 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764491141 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.461874376 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476123885 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765163224 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.46912914 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.480852907 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406224632 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528857406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477475732 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464171736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473018951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567441781 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61350148 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724618193 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.821710359 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823231501 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980968669 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485077117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466707463 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.50890431 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623619107 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463355081 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.472721496 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.468163305 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210674695 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381803649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226758095 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819444358 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473458252 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466166962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46352326 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790982988 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463593171 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819144809 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464817488 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.469072499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520422116 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480861148 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472671001 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767852812 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818848332 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463490155 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475657973 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470983985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.465717393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825882188 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.770884831 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069784293 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12681424 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469448035 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47470436 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.291180674 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822406746 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466006746 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467815705 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46697733 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.489193493 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.473090747 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.502993013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465910085 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777279499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80900155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255812 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811182903 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.504805325 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.42924432 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483070368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808446801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391140172 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.728167946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228569569 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352708609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812803151 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61554301 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730321991 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.475307789 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791057159 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.480891739 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473688099 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467469292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469449013 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.468239851 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810656579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232596268 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809721334 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.497469127 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.477337655 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532499838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.7244042 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.774901473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376436278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.781419481 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823117521 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479659948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46917321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229762946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821581292 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469522486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.497154003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.767034062 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471828785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534328982 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.431599926 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.469039255 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130646571 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.770535904 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52006795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470008022 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347328735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235115094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.475535542 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081267318 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473017483 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483977257 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839573873 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.499457228 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47071782 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84854345 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.49830359 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485412985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73654045 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.221693276 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.397882999 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.487973575 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474115528 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.474484919 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472368519 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533631546 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476933275 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474887414 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972980223 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470576741 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471663471 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51431659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.485840483 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477610246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.477307136 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47352076 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.502914721 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.478398825 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.446508736 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472852239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691307114 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119810277 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479454196 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.174380416 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.897754456 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807085315 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488986064 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.446080678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.501446657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47535563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473187478 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474350405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.468745502 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137082516 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.490557214 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.824356435 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504152099 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.770835105 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77138706 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473787414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73378577 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488879836 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531894174 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.441161059 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473613579 seconds)
  done (took 1040.738253055 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514295079 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.511798812 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.529834835 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.513233422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575784812 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.548958006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.557564757 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.568593185 seconds)
  done (took 21.650331932 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.467849857 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.505231356 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.481386495 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.498192682 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.474274906 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.091595657 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.487055931 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.505209846 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.518445048 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.475605173 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.486964299 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.249240144 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.500073648 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.466723597 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.484242305 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.506531172 seconds)
  done (took 34.537387821 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.497431832 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.591192358 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.59902855 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.535818976 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.519391258 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.486352699 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.761155731 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.477402189 seconds)
  done (took 27.799905701 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.509620881 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.510849529 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.511869561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.511390241 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.512855441 seconds)
  done (took 8.888708892 seconds)
done (took 1302.846606645 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.510742393 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.504502912 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.504236327 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.505210125 seconds)
  done (took 7.358002509 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.44560925 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.446023059 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.452298787 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.486663423 seconds)
  done (took 10.163550617 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.328161773 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.157439015 seconds)
  done (took 5.819840638 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.133889233 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.105904808 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.107309736 seconds)
  done (took 7.68053668 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.864448335 seconds)
  done (took 3.197684426 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.46845182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.487396617 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.469093521 seconds)
  done (took 8.759013699 seconds)
done (took 44.313660838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.469989724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.233802986 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.63142387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.469625781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.633696505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.630453356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.714560001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.472559395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.473720646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.480488894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.468583819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.63425377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.702553097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.238648714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.701210398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.237828638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.635150881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.469740391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.476137992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.469547768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.715654554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.482482025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473002887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.488554376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.640648856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.621759374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471125344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.236171514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.481426025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.470068854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.625423247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.471566461 seconds)
  done (took 85.758244608 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.474251928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.471268099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.47239415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.491679494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.47232375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.477564082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.490747112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.472678614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.484506724 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.471586366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.497030663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.480774894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.471835979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.473541782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.472329058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.477492913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.47189276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.47262288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.471498296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.482798406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.472897636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.47215662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.472124073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.472526849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.495830022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.473486468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.490932611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.472388283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.479610082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.47309417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473637535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.492630732 seconds)
  done (took 80.628695034 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.472020499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.507818417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.489106122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.473114982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.474780068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.492647284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.475305345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477514005 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.484779245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.474573268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.491753176 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.491555106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.477094608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.475134862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.475887891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.475718455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.49333969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.472101794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.491286567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.480504889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.473738874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.482674647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.480078647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.477988647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.473510982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.475436995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.493320834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.474696049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.477970348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.474483312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473312912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493583018 seconds)
  done (took 80.736349157 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.802023218 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.51328245 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.516202025 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.484698368 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.51690854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.513252558 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.485829099 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.808470547 seconds)
  done (took 15.979943679 seconds)
done (took 264.43954403 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.489702985 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.485718401 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.549687289 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.495295736 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.536906824 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.543318393 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.7807907 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.542473523 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.768906856 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.489532084 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.534004429 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.493594821 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.437195889 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.704357935 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.495071685 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.487570172 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.513555949 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.499572327 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.48994317 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.806991309 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.544966437 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.481812108 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.48846847 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.495349793 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.460424611 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.586776154 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.586218191 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.720608466 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.686852707 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.584468528 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.485126007 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.496557208 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.520200439 seconds)
  done (took 70.624528722 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.50732897 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.517456584 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.517041099 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.517936184 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.517442337 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.516962527 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.507503014 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.516495289 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.516748743 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.516091676 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.516597606 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.518431638 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.518530115 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.51681167 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.517875283 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.489373823 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.508824271 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.517532851 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.508758691 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.489832261 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.517124978 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.518892172 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.520177741 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.51795148 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.517802368 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.520333277 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.517635518 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.519264147 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.518079499 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.518331417 seconds)
  done (took 46.784064581 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.518333232 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.481996139 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.481455568 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.549306445 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.510355891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.513761632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.882476885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.524771202 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.516117099 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.514158191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.484109466 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.520852826 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.578912933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.497940345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.513191866 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.521890737 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.518567341 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.512796844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.48884736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.534366067 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.896488094 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.52698091 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.873044331 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.534534035 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.515329847 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.513410539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.523042839 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.483446673 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.516901416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.502894816 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.399060173 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.865051205 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.485407747 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.482344299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.395983106 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.529291539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.5209043 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.494386961 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.514555518 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.513232723 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.865892862 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.515144 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.5004114 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.483834642 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.513521727 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.521085607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.484488356 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.489760674 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.78977173 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.52823037 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.48793621 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.516746089 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.524058681 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.515586096 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.789562137 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.519494902 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.512358939 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.486923512 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.525535126 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.86352224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.525979106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.515744146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.486784178 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.516022603 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.484946724 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.517921308 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.538018347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.516357841 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.501725743 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.51817134 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.503097356 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.516458692 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.523214789 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.486831321 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.48710042 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.486611671 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.518176578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.492381119 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.485487854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.879570231 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.522516306 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.48651522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890592791 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.521846249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.52637399 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.527039367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.524100795 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.642655885 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.863941009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.488137493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.502018029 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.489368655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.871528286 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.534464194 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.518838185 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.491938815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.525978269 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.526001805 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.497666288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.503113211 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.516392832 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.538120735 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.499473991 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.520410382 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.871040584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.531034987 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.491449157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.517904407 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.643606495 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.525340897 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.539326964 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.523531309 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.889658804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.524558465 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.526555297 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.488139938 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.504896747 seconds)
  done (took 221.140630738 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.49224444 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.491891601 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.489558764 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.48979336 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.491987843 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.520139677 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.488111233 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.492965901 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.518639556 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.492434338 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.494187215 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.523360478 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.521103627 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.490038573 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.493629043 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.508942862 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.490574954 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.497203799 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.513908019 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.491628859 seconds)
  done (took 47.345209752 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.527988092 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.192660184 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.161148914 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.52941439 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.529711006 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.521510452 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.588387392 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529425495 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.529418859 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.895316995 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.72648086 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.530886434 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.530007202 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.5305542 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.167276509 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.500197336 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.895672208 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.194463277 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.531209171 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.195382597 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.502206112 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.531848988 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.521997385 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.192225841 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.907703347 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.872624864 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.592169367 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.194061968 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.530452441 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.530229088 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.195486381 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.5309106 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.522522941 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.176937584 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.531075286 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.552642693 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.533008073 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.594475107 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.597918841 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903918717 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.205417462 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.881928211 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.550082242 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.742638711 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.535094931 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.501488213 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.204590193 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.532778575 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.502170352 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.531707629 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.542900672 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.175197139 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.525101481 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.174834872 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.532687152 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.533372436 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.198460293 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.176705082 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.167621455 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.728894505 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.52371157 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.876937982 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.53396455 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.208810981 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.534082023 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.533910981 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.53385441 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.731078024 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.198595646 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.874280102 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.902580908 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.902234704 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.533648098 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.605714525 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.536403547 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.900508018 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.60511829 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.98054159 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.905015086 seconds)
  done (took 140.043628946 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.873630788 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.66146121 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.029487339 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.237932771 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.165318019 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.721766015 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.663088861 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.836358311 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.527805945 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.692738162 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.341970372 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.637391599 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.419050704 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.612056742 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.6513183 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.713573912 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.046860358 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.49917933 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324353118 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.314985516 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.527313564 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.689697132 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.376064093 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.978217831 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.517789588 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.340331267 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.500766543 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1830517 seconds)
  done (took 59.441953759 seconds)
done (took 586.722991046 seconds)
SAVING RESULT...
DONE!
